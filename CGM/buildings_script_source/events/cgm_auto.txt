 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
namespace = cgm_auto
 #there are 3*3 types of important variables used in these events:
# "cur_" is always for the tile we are currently in,
# "best_" is previously found best tiles.
# "worst_" is previously found worst tiles -> to be used with special buildings who do not requre special tiles.
#Each can be combined with
# "Type", which is a number assigned to the different weight-type
# "weight", which is the actual weight value
# "Tile", which is the "id" of a tile
country_event = {
	id = cgm_auto.0
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		remove_country_flag = cgm_auto_built
		if = {
			limit = { has_country_flag = cgm_redo_all_planet_calcs }
			remove_country_flag = cgm_redo_all_planet_calcs
			every_owned_planet = {
				set_variable = { which = cgm_worstWeight value = 99999 }
				set_variable = { which = cgm_bestWeight_1 value = 0 }
				set_variable = { which = cgm_bestWeight_2 value = 0 }
				set_variable = { which = cgm_bestWeight_3 value = 0 }
			}
		}
		set_country_flag = display_low_tier_flag #The buildings we create are otherwise probably unavaiable due to direct build. Later removed again.
		if = {
			limit = { not = { has_country_flag = cgm_sector_autobuild } }
			set_country_flag = cgm_core_world_auto #searching core worlds for standard buildings
			 #Search for possible Special buildings:
			if = {
				limit = { NOT = { has_country_flag = cgm_auto_upgrade_only } }
				country_event = { id = cgm_auto.11 }
			}
			 #Search for possible Standard buildings. Build best out of standard/special:
			if = {
				limit = { NOT = { has_country_flag = cgm_auto_upgrade_only } }
				country_event = { id = cgm_auto.10 }
			}
			if = {
				limit = {
					is_ai = no
					not = { has_country_flag = cgm_auto_built }
				}
				 #Try to upgrade something. Player only!
				country_event = { id = cgm_auto.12 }
			}
		}
		if = {
			limit = { not = { has_country_flag = cgm_auto_built } }
			remove_country_flag = cgm_core_world_auto #searching sector worlds for standard buildings
			 #Search for possible Special buildings:
			if = {
				limit = { NOT = { has_country_flag = cgm_auto_upgrade_only } }
				country_event = { id = cgm_auto.11 }
			}
			 #Search for possible Standard buildings. Build best out of standard/special:
			if = {
				limit = { NOT = { has_country_flag = cgm_auto_upgrade_only } }
				country_event = { id = cgm_auto.10 }
			}
		}
		if = {
			limit = { NOT = { has_country_flag = do_no_remove_low_tier_flag } }
			remove_country_flag = display_low_tier_flag
		}
	}
}
country_event = {
	id = cgm_auto.10
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_variable = { which = cgm_bestWeight_1 value = 0 }
		every_owned_planet = {
			limit = {
				has_building_construction = no
				has_orbital_bombardment = no
				NOT = { has_planet_flag = cgm_auto_upgrade_only }
				free_building_tiles > 0
				or = {
					and = {
						sector_controlled = no
						prev = { has_country_flag = cgm_core_world_auto }
					}
					and = {
						sector_controlled = yes
						not = { prev = { has_country_flag = cgm_core_world_auto } }
					}
				}
				check_variable = { which = cgm_free_pops value > 0 }
			}
			if = {
				limit = {
					OR = {
						check_variable = { which = cgm_bestWeight_1 value = 0 }
						has_planet_flag = cgm_redo_planet_calc
					}
				}
				planet_event = { id = cgm_auto.20 }
			}
			if = {
				limit = {
					check_variable = { which = cgm_bestWeight_1 value > prev }
				}
				save_event_target_as = cgm_best_planet
				prev = {
					set_variable = { which = cgm_bestWeight_1 value = prev }
				}
			}
		}
		if = {
			limit = {
				check_variable = { which = cgm_bestWeight_1 value > cgm_special_bestWeight }
			}
			if = {
				limit = {
					check_variable = { which = cgm_bestWeight_1 value > 0 }
				}
				event_target:cgm_best_planet = {
					if = {
						limit = {
							check_variable = { which = cgm_bestType_1 value = 1 }
						}
						set_variable = { which = cgm_curTile value = 0 }
						every_tile = {
							prev = {
								change_variable = { which = cgm_curTile value = 1 }
							}
							if = {
								limit = {
									prev = {
										check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
									}
								}
								add_energy_building = yes
							}
						}
					}
					else = {
						if = {
							limit = {
								check_variable = { which = cgm_bestType_1 value = 2 }
							}
							set_variable = { which = cgm_curTile value = 0 }
							every_tile = {
								prev = {
									change_variable = { which = cgm_curTile value = 1 }
								}
								if = {
									limit = {
										prev = {
											check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
										}
									}
									add_minerals_building = yes
								}
							}
						}
						else = {
							if = {
								limit = {
									check_variable = { which = cgm_bestType_1 value = 3 }
								}
								set_variable = { which = cgm_curTile value = 0 }
								every_tile = {
									prev = {
										change_variable = { which = cgm_curTile value = 1 }
									}
									if = {
										limit = {
											prev = {
												check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
											}
										}
										add_food_building = yes
									}
								}
							}
							else = {
								if = {
									limit = {
										check_variable = { which = cgm_bestType_1 value = 4 }
									}
									set_variable = { which = cgm_curTile value = 0 }
									every_tile = {
										prev = {
											change_variable = { which = cgm_curTile value = 1 }
										}
										if = {
											limit = {
												prev = {
													check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
												}
											}
											add_society_research_building = yes
										}
									}
								}
								else = {
									if = {
										limit = {
											check_variable = { which = cgm_bestType_1 value = 5 }
										}
										set_variable = { which = cgm_curTile value = 0 }
										every_tile = {
											prev = {
												change_variable = { which = cgm_curTile value = 1 }
											}
											if = {
												limit = {
													prev = {
														check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
													}
												}
												add_physics_research_building = yes
											}
										}
									}
									else = {
										if = {
											limit = {
												check_variable = { which = cgm_bestType_1 value = 6 }
											}
											set_variable = { which = cgm_curTile value = 0 }
											every_tile = {
												prev = {
													change_variable = { which = cgm_curTile value = 1 }
												}
												if = {
													limit = {
														prev = {
															check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
														}
													}
													add_engineering_research_building = yes
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = { which = cgm_bestType_1 value = 7 }
												}
												set_variable = { which = cgm_curTile value = 0 }
												every_tile = {
													prev = {
														change_variable = { which = cgm_curTile value = 1 }
													}
													if = {
														limit = {
															prev = {
																check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
															}
														}
														add_energy_adjacency_building = yes
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = { which = cgm_bestType_1 value = 8 }
													}
													set_variable = { which = cgm_curTile value = 0 }
													every_tile = {
														prev = {
															change_variable = { which = cgm_curTile value = 1 }
														}
														if = {
															limit = {
																prev = {
																	check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
																}
															}
															add_minerals_adjacency_building = yes
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = { which = cgm_bestType_1 value = 9 }
														}
														set_variable = { which = cgm_curTile value = 0 }
														every_tile = {
															prev = {
																change_variable = { which = cgm_curTile value = 1 }
															}
															if = {
																limit = {
																	prev = {
																		check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
																	}
																}
																add_food_adjacency_building = yes
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = { which = cgm_bestType_1 value = 10 }
															}
															set_variable = { which = cgm_curTile value = 0 }
															every_tile = {
																prev = {
																	change_variable = { which = cgm_curTile value = 1 }
																}
																if = {
																	limit = {
																		prev = {
																			check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
																		}
																	}
																	add_society_research_adjacency_building = yes
																}
															}
														}
														else = {
															if = {
																limit = {
																	check_variable = { which = cgm_bestType_1 value = 11 }
																}
																set_variable = { which = cgm_curTile value = 0 }
																every_tile = {
																	prev = {
																		change_variable = { which = cgm_curTile value = 1 }
																	}
																	if = {
																		limit = {
																			prev = {
																				check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
																			}
																		}
																		add_physics_research_adjacency_building = yes
																	}
																}
															}
															else = {
																if = {
																	limit = {
																		check_variable = { which = cgm_bestType_1 value = 12 }
																	}
																	set_variable = { which = cgm_curTile value = 0 }
																	every_tile = {
																		prev = {
																			change_variable = { which = cgm_curTile value = 1 }
																		}
																		if = {
																			limit = {
																				prev = {
																					check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
																				}
																			}
																			add_engineering_research_adjacency_building = yes
																		}
																	}
																}
																else = {
																	if = {
																		limit = {
																			check_variable = { which = cgm_bestType_1 value = 13 }
																		}
																		set_variable = { which = cgm_curTile value = 0 }
																		every_tile = {
																			prev = {
																				change_variable = { which = cgm_curTile value = 1 }
																			}
																			if = {
																				limit = {
																					prev = {
																						check_variable = { which = cgm_curTile value = cgm_bestTile_1 }
																					}
																				}
																				add_special_resource_building = yes
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					if = {
						limit = {
							check_variable = { which = cgm_bestWeight_3 value > 0 }
						}
						set_variable = { which = cgm_bestWeight_1 value = cgm_bestWeight_2 }
						set_variable = { which = cgm_bestTile_1 value = cgm_bestTile_2 }
						set_variable = { which = cgm_bestType_1 value = cgm_bestType_2 }
						set_variable = { which = cgm_bestWeight_2 value = cgm_bestWeight_3 }
						set_variable = { which = cgm_bestTile_2 value = cgm_bestTile_3 }
						set_variable = { which = cgm_bestType_2 value = cgm_bestType_3 }
						set_variable = { which = cgm_bestWeight_3 value = 0 }
					}
					else = {
						if = {
							limit = {
								check_variable = { which = cgm_bestWeight_2 value > 0 }
							}
							set_variable = { which = cgm_bestWeight_1 value = cgm_bestWeight_2 }
							set_variable = { which = cgm_bestTile_1 value = cgm_bestTile_2 }
							set_variable = { which = cgm_bestType_1 value = cgm_bestType_2 }
							set_variable = { which = cgm_bestWeight_2 value = 0 }
						}
						else = {
							set_variable = { which = cgm_bestWeight_1 value = 0 }
						}
					}
				}
			}
		}
		else = {
			if = {
				limit = {
					check_variable = { which = cgm_special_bestWeight value > 0 }
				}
				event_target:cgm_best_planet_for_special = {
					if = {
						limit = {
							check_variable = { which = cgm_worstWeight value = 99999 }
						}
						planet_event = { id = cgm_auto.20 }
					}
					set_variable = { which = cgm_curTile value = 0 }
					every_tile = {
						prev = {
							change_variable = { which = cgm_curTile value = 1 }
						}
						if = {
							limit = {
								prev = {
									check_variable = { which = cgm_curTile value = cgm_worstTile }
								}
							}
							cgm_add_special_building = yes
						}
					}
					set_variable = { which = cgm_worstWeight value = 99999 }
				}
			}
		}
	}
}
country_event = {
	id = cgm_auto.11
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_variable = { which = cgm_special_bestWeight value = 0 }
		every_owned_planet = {
			limit = {
				has_building_construction = no
				has_orbital_bombardment = no
				NOT = { has_planet_flag = cgm_auto_upgrade_only }
				free_building_tiles > 0
				not = { has_planet_flag = purged_planet }
				or = {
					and = {
						sector_controlled = no
						prev = { has_country_flag = cgm_core_world_auto }
					}
					and = {
						sector_controlled = yes
						not = { prev = { has_country_flag = cgm_core_world_auto } }
					}
				}
				check_variable = { which = cgm_free_pops value > 0 }
			}
			cgm_search_for_special_building = yes
		}
	}
}
planet_event = {
	id = cgm_auto.20
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		remove_planet_flag = cgm_redo_planet_calc
		set_variable = { which = cgm_curTile value = 0 }
		set_variable = { which = cgm_bestWeight_1 value = 0 }
		set_variable = { which = cgm_bestWeight_2 value = 0 }
		set_variable = { which = cgm_bestWeight_3 value = 0 }
		 #set worst value to very large number, such that any found tile is initially worse
		set_variable = { which = cgm_worstWeight value = 99999 }
		if = {
			limit = {
				NOT = { any_owned_pop = { is_being_purged = no } }
			}
			set_planet_flag = purged_planet
		}
		else = {
			remove_planet_flag = purged_planet
			 #modifiers are updated yearly!
			if = {
				limit = { NOT = { has_planet_flag = cgm_bonus_building_calc_done } }
				set_variable = { which = energy_mult_planet_building value = 0 }
				set_variable = { which = minerals_mult_planet_building value = 0 }
				set_variable = { which = food_mult_planet_building value = 0 }
				set_variable = { which = unity_mult_planet_building value = 0 }
				set_variable = { which = society_research_mult_planet_building value = 0 }
				set_variable = { which = physics_research_mult_planet_building value = 0 }
				set_variable = { which = engineering_research_mult_planet_building value = 0 }
				check_planet_bonus_buildings = yes
				check_planet_bonus_buildings_alphamod = yes
				check_planet_bonus_buildings_ag = yes
				check_planet_bonus_buildings_eutab = yes
				check_planet_bonus_buildings_gse = yes
				check_planet_bonus_buildings_co = yes
				check_planet_bonus_buildings_esap = yes
				check_planet_bonus_buildings_est = yes
				check_planet_bonus_buildings_gwen = yes
				check_planet_bonus_buildings_tycoon = yes
				check_planet_bonus_buildings_ut = yes
				check_planet_bonus_buildings_ab = yes
				check_planet_bonus_buildings_mem = yes
				check_planet_bonus_buildings_stexp = yes
				check_planet_bonus_buildings_expstr = yes
				check_planet_bonus_buildings_cgm_planets = yes
				set_planet_flag = cgm_bonus_building_calc_done
			}
			if = {
				limit = { NOT = { has_planet_flag = cgm_pop_calc_done } }
				set_variable = { which = energy_mult_planet_pop value = 0 }
				set_variable = { which = minerals_mult_planet_pop value = 0 }
				set_variable = { which = food_mult_planet_pop value = 0 }
				set_variable = { which = unity_mult_planet_pop value = 0 }
				set_variable = { which = society_research_mult_planet_pop value = 0 }
				set_variable = { which = physics_research_mult_planet_pop value = 0 }
				set_variable = { which = engineering_research_mult_planet_pop value = 0 }
				calculate_average_pop_multipliers = yes
				set_planet_flag = cgm_pop_calc_done
			}
			set_variable = { which = energy_mult_planet value = 1 }
			change_variable = { which = energy_mult_planet value = energy_mult_planet_base }
			change_variable = { which = energy_mult_planet value = energy_mult_planet_building }
			change_variable = { which = energy_mult_planet value = energy_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_energy }
				set_variable = { which = energy_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = energy_country_weight value = owner }
			}
			multiply_variable = { which = energy_mult_planet value = energy_country_weight }
			set_variable = { which = minerals_mult_planet value = 1 }
			change_variable = { which = minerals_mult_planet value = minerals_mult_planet_base }
			change_variable = { which = minerals_mult_planet value = minerals_mult_planet_building }
			change_variable = { which = minerals_mult_planet value = minerals_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_minerals }
				set_variable = { which = minerals_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = minerals_country_weight value = owner }
			}
			multiply_variable = { which = minerals_mult_planet value = minerals_country_weight }
			set_variable = { which = food_mult_planet value = 1 }
			change_variable = { which = food_mult_planet value = food_mult_planet_base }
			change_variable = { which = food_mult_planet value = food_mult_planet_building }
			change_variable = { which = food_mult_planet value = food_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_food }
				set_variable = { which = food_country_weight_TILE value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = food_country_weight_TILE value = owner }
			}
			multiply_variable = { which = food_mult_planet value = food_country_weight_TILE }
			set_variable = { which = unity_mult_planet value = 1 }
			change_variable = { which = unity_mult_planet value = unity_mult_planet_base }
			change_variable = { which = unity_mult_planet value = unity_mult_planet_building }
			change_variable = { which = unity_mult_planet value = unity_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_unity }
				set_variable = { which = unity_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = unity_country_weight value = owner }
			}
			multiply_variable = { which = unity_mult_planet value = unity_country_weight }
			set_variable = { which = society_research_mult_planet value = 1 }
			change_variable = { which = society_research_mult_planet value = society_research_mult_planet_base }
			change_variable = { which = society_research_mult_planet value = society_research_mult_planet_building }
			change_variable = { which = society_research_mult_planet value = society_research_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_society_research }
				set_variable = { which = society_research_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = society_research_country_weight value = owner }
			}
			multiply_variable = { which = society_research_mult_planet value = society_research_country_weight }
			set_variable = { which = physics_research_mult_planet value = 1 }
			change_variable = { which = physics_research_mult_planet value = physics_research_mult_planet_base }
			change_variable = { which = physics_research_mult_planet value = physics_research_mult_planet_building }
			change_variable = { which = physics_research_mult_planet value = physics_research_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_physics_research }
				set_variable = { which = physics_research_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = physics_research_country_weight value = owner }
			}
			multiply_variable = { which = physics_research_mult_planet value = physics_research_country_weight }
			set_variable = { which = engineering_research_mult_planet value = 1 }
			change_variable = { which = engineering_research_mult_planet value = engineering_research_mult_planet_base }
			change_variable = { which = engineering_research_mult_planet value = engineering_research_mult_planet_building }
			change_variable = { which = engineering_research_mult_planet value = engineering_research_mult_planet_pop }
			if = {
				limit = { has_planet_flag = cgm_player_focus_engineering_research }
				set_variable = { which = engineering_research_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = engineering_research_country_weight value = owner }
			}
			multiply_variable = { which = engineering_research_mult_planet value = engineering_research_country_weight }
			every_tile = {
				prev = {
					change_variable = { which = cgm_curTile value = 1 }
				}
				if = {
					limit = { has_building = no has_blocker = no }
					if = {
						limit = { has_any_tile_strategic_resource = yes }
						if = {
							limit = { special_resource_any_building_available = yes }
							prev = {
								set_variable = { which = cgm_curWeight value = 50 }
								set_variable = { which = cgm_curType value = 13 }
							}
						}
					}
					else = {
						calculate_tile_weight = yes
						prev = {
							subtract_variable = { which = energy_weight value = unity_weight }
							multiply_variable = { which = energy_weight value = energy_mult_planet }
							multiply_variable = { which = energy_adjacency_weight value = energy_mult_planet }
							subtract_variable = { which = minerals_weight value = unity_weight }
							multiply_variable = { which = minerals_weight value = minerals_mult_planet }
							multiply_variable = { which = minerals_adjacency_weight value = minerals_mult_planet }
							subtract_variable = { which = food_weight value = unity_weight }
							multiply_variable = { which = food_weight value = food_mult_planet }
							multiply_variable = { which = food_adjacency_weight value = food_mult_planet }
							subtract_variable = { which = society_research_weight value = unity_weight }
							multiply_variable = { which = society_research_weight value = society_research_mult_planet }
							multiply_variable = { which = society_research_adjacency_weight value = society_research_mult_planet }
							subtract_variable = { which = physics_research_weight value = unity_weight }
							multiply_variable = { which = physics_research_weight value = physics_research_mult_planet }
							multiply_variable = { which = physics_research_adjacency_weight value = physics_research_mult_planet }
							subtract_variable = { which = engineering_research_weight value = unity_weight }
							multiply_variable = { which = engineering_research_weight value = engineering_research_mult_planet }
							multiply_variable = { which = engineering_research_adjacency_weight value = engineering_research_mult_planet }
							if = {
								limit = {
									check_variable = { which = energy_weight value > cgm_curWeight }
									energy_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = energy_weight }
								set_variable = { which = cgm_curType value = 1 }
							}
							if = {
								limit = {
									check_variable = { which = minerals_weight value > cgm_curWeight }
									minerals_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = minerals_weight }
								set_variable = { which = cgm_curType value = 2 }
							}
							if = {
								limit = {
									check_variable = { which = food_weight value > cgm_curWeight }
									food_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = food_weight }
								set_variable = { which = cgm_curType value = 3 }
							}
							if = {
								limit = {
									check_variable = { which = society_research_weight value > cgm_curWeight }
									society_research_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = society_research_weight }
								set_variable = { which = cgm_curType value = 4 }
							}
							if = {
								limit = {
									check_variable = { which = physics_research_weight value > cgm_curWeight }
									physics_research_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = physics_research_weight }
								set_variable = { which = cgm_curType value = 5 }
							}
							if = {
								limit = {
									check_variable = { which = engineering_research_weight value > cgm_curWeight }
									engineering_research_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = engineering_research_weight }
								set_variable = { which = cgm_curType value = 6 }
							}
							if = {
								limit = {
									check_variable = { which = energy_adjacency_weight value > cgm_curWeight }
									energy_adjacency_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = energy_adjacency_weight }
								set_variable = { which = cgm_curType value = 7 }
							}
							if = {
								limit = {
									check_variable = { which = minerals_adjacency_weight value > cgm_curWeight }
									minerals_adjacency_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = minerals_adjacency_weight }
								set_variable = { which = cgm_curType value = 8 }
							}
							if = {
								limit = {
									check_variable = { which = food_adjacency_weight value > cgm_curWeight }
									food_adjacency_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = food_adjacency_weight }
								set_variable = { which = cgm_curType value = 9 }
							}
							if = {
								limit = {
									check_variable = { which = society_research_adjacency_weight value > cgm_curWeight }
									society_research_adjacency_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = society_research_adjacency_weight }
								set_variable = { which = cgm_curType value = 10 }
							}
							if = {
								limit = {
									check_variable = { which = physics_research_adjacency_weight value > cgm_curWeight }
									physics_research_adjacency_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = physics_research_adjacency_weight }
								set_variable = { which = cgm_curType value = 11 }
							}
							if = {
								limit = {
									check_variable = { which = engineering_research_adjacency_weight value > cgm_curWeight }
									engineering_research_adjacency_any_building_available = yes
								}
								set_variable = { which = cgm_curWeight value = engineering_research_adjacency_weight }
								set_variable = { which = cgm_curType value = 12 }
							}
						}
					}
					prev = {
						if = {
							limit = {
								check_variable = { which = cgm_curWeight value > cgm_bestWeight_1 }
							}
							if = {
								limit = {
									check_variable = { which = cgm_bestWeight_2 value > 0 }
								}
								set_variable = { which = cgm_bestWeight_3 value = cgm_bestWeight_2 }
								set_variable = { which = cgm_bestTile_3 value = cgm_bestTile_2 }
								set_variable = { which = cgm_bestType_3 value = cgm_bestType_2 }
								set_variable = { which = cgm_bestWeight_2 value = cgm_bestWeight_1 }
								set_variable = { which = cgm_bestTile_2 value = cgm_bestTile_1 }
								set_variable = { which = cgm_bestType_2 value = cgm_bestType_1 }
							}
							else = {
								if = {
									limit = {
										check_variable = { which = cgm_bestWeight_1 value > 0 }
									}
									set_variable = { which = cgm_bestWeight_2 value = cgm_bestWeight_1 }
									set_variable = { which = cgm_bestTile_2 value = cgm_bestTile_1 }
									set_variable = { which = cgm_bestType_2 value = cgm_bestType_1 }
								}
							}
							set_variable = { which = cgm_bestWeight_1 value = cgm_curWeight }
							set_variable = { which = cgm_bestTile_1 value = cgm_curTile }
							set_variable = { which = cgm_bestType_1 value = cgm_curType }
						}
						else = {
							if = {
								limit = {
									check_variable = { which = cgm_curWeight value > cgm_bestWeight_2 }
								}
								if = {
									limit = {
										check_variable = { which = cgm_bestWeight_2 value > 0 }
									}
									set_variable = { which = cgm_bestWeight_3 value = cgm_bestWeight_2 }
									set_variable = { which = cgm_bestTile_3 value = cgm_bestTile_2 }
									set_variable = { which = cgm_bestType_3 value = cgm_bestType_2 }
								}
								set_variable = { which = cgm_bestWeight_2 value = cgm_curWeight }
								set_variable = { which = cgm_bestTile_2 value = cgm_curTile }
								set_variable = { which = cgm_bestType_2 value = cgm_curType }
							}
							else = {
								if = {
									limit = {
										check_variable = { which = cgm_curWeight value > cgm_bestWeight_3 }
									}
									set_variable = { which = cgm_bestWeight_3 value = cgm_curWeight }
									set_variable = { which = cgm_bestTile_3 value = cgm_curTile }
									set_variable = { which = cgm_bestType_3 value = cgm_curType }
								}
							}
						}
						if = {
							limit = {
								check_variable = { which = cgm_curWeight value < cgm_worstWeight }
								prev = { has_any_tile_strategic_resource = no }
							}
							set_variable = { which = cgm_worstWeight value = cgm_curWeight }
							set_variable = { which = cgm_worstTile value = cgm_curTile }
						}
						set_variable = { which = cgm_curWeight value = 0 }
						set_variable = { which = energy_weight value = 0 }
						set_variable = { which = minerals_weight value = 0 }
						set_variable = { which = food_weight value = 0 }
						set_variable = { which = society_research_weight value = 0 }
						set_variable = { which = physics_research_weight value = 0 }
						set_variable = { which = engineering_research_weight value = 0 }
						set_variable = { which = energy_adjacency_weight value = 0 }
						set_variable = { which = minerals_adjacency_weight value = 0 }
						set_variable = { which = food_adjacency_weight value = 0 }
						set_variable = { which = society_research_adjacency_weight value = 0 }
						set_variable = { which = physics_research_adjacency_weight value = 0 }
						set_variable = { which = engineering_research_adjacency_weight value = 0 }
					}
				}
			}
		}
	}
}
event = {
	id = cgm_auto.21
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		every_country = {
			every_owned_planet = {
		set_variable = { which = energy_mult_planet_base_old value = energy_mult_planet_base }
		set_variable = { which = energy_mult_planet_base value = 0 }
		set_variable = { which = minerals_mult_planet_base_old value = minerals_mult_planet_base }
		set_variable = { which = minerals_mult_planet_base value = 0 }
		set_variable = { which = food_mult_planet_base_old value = food_mult_planet_base }
		set_variable = { which = food_mult_planet_base value = 0 }
		set_variable = { which = unity_mult_planet_base_old value = unity_mult_planet_base }
		set_variable = { which = unity_mult_planet_base value = 0 }
		set_variable = { which = society_research_mult_planet_base_old value = society_research_mult_planet_base }
		set_variable = { which = society_research_mult_planet_base value = 0 }
		set_variable = { which = physics_research_mult_planet_base_old value = physics_research_mult_planet_base }
		set_variable = { which = physics_research_mult_planet_base value = 0 }
		set_variable = { which = engineering_research_mult_planet_base_old value = engineering_research_mult_planet_base }
		set_variable = { which = engineering_research_mult_planet_base value = 0 }
		check_planet_modifiers_alphamod = yes
		check_planet_modifiers_se = yes
		check_planet_modifiers_gse = yes
		check_planet_modifiers_legw = yes
		check_planet_modifiers_co = yes
		check_planet_modifiers_esap = yes
		check_planet_modifiers_est = yes
		check_planet_modifiers_gwen = yes
		check_planet_modifiers_ut = yes
		check_planet_modifiers_dpe = yes
		check_planet_modifiers_mon = yes
		if = {
			limit = { gpm_enabled = no }
			check_vanilla_planet_modifiers = yes
		}
		else = { check_planet_modifiers_gpm = yes }
		check_planet_modifiers_pd = yes
		check_planet_modifiers_mem = yes
		check_planet_modifiers_expstr = yes
		check_planet_modifiers_cgm_planets = yes
		if = {
			limit = {
				NAND = {
					check_variable = { which = energy_mult_planet_base_old value = energy_mult_planet_base }
					check_variable = { which = minerals_mult_planet_base_old value = minerals_mult_planet_base }
					check_variable = { which = food_mult_planet_base_old value = food_mult_planet_base }
					check_variable = { which = unity_mult_planet_base_old value = unity_mult_planet_base }
					check_variable = { which = society_research_mult_planet_base_old value = society_research_mult_planet_base }
					check_variable = { which = physics_research_mult_planet_base_old value = physics_research_mult_planet_base }
					check_variable = { which = engineering_research_mult_planet_base_old value = engineering_research_mult_planet_base }
				}
			}
			set_planet_flag = cgm_redo_planet_calc
		}
			}
		}
	}
}
planet_event = {
	id = cgm_auto.22
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_variable = { which = energy_mult_planet_base_old value = energy_mult_planet_base }
		set_variable = { which = energy_mult_planet_base value = 0 }
		set_variable = { which = minerals_mult_planet_base_old value = minerals_mult_planet_base }
		set_variable = { which = minerals_mult_planet_base value = 0 }
		set_variable = { which = food_mult_planet_base_old value = food_mult_planet_base }
		set_variable = { which = food_mult_planet_base value = 0 }
		set_variable = { which = unity_mult_planet_base_old value = unity_mult_planet_base }
		set_variable = { which = unity_mult_planet_base value = 0 }
		set_variable = { which = society_research_mult_planet_base_old value = society_research_mult_planet_base }
		set_variable = { which = society_research_mult_planet_base value = 0 }
		set_variable = { which = physics_research_mult_planet_base_old value = physics_research_mult_planet_base }
		set_variable = { which = physics_research_mult_planet_base value = 0 }
		set_variable = { which = engineering_research_mult_planet_base_old value = engineering_research_mult_planet_base }
		set_variable = { which = engineering_research_mult_planet_base value = 0 }
		check_planet_modifiers_alphamod = yes
		check_planet_modifiers_se = yes
		check_planet_modifiers_gse = yes
		check_planet_modifiers_legw = yes
		check_planet_modifiers_co = yes
		check_planet_modifiers_esap = yes
		check_planet_modifiers_est = yes
		check_planet_modifiers_gwen = yes
		check_planet_modifiers_ut = yes
		check_planet_modifiers_dpe = yes
		check_planet_modifiers_mon = yes
		if = {
			limit = { gpm_enabled = no }
			check_vanilla_planet_modifiers = yes
		}
		else = { check_planet_modifiers_gpm = yes }
		check_planet_modifiers_pd = yes
		check_planet_modifiers_mem = yes
		check_planet_modifiers_expstr = yes
		check_planet_modifiers_cgm_planets = yes
		if = {
			limit = {
				NAND = {
					check_variable = { which = energy_mult_planet_base_old value = energy_mult_planet_base }
					check_variable = { which = minerals_mult_planet_base_old value = minerals_mult_planet_base }
					check_variable = { which = food_mult_planet_base_old value = food_mult_planet_base }
					check_variable = { which = unity_mult_planet_base_old value = unity_mult_planet_base }
					check_variable = { which = society_research_mult_planet_base_old value = society_research_mult_planet_base }
					check_variable = { which = physics_research_mult_planet_base_old value = physics_research_mult_planet_base }
					check_variable = { which = engineering_research_mult_planet_base_old value = engineering_research_mult_planet_base }
				}
			}
			set_planet_flag = cgm_redo_planet_calc
		}
	}
}
country_event = {
	id = cgm_auto.30
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_timed_country_flag = { flag = cgm_empire_weights_computed_timed days = 180 }
		if = {
			limit = {
				is_ai = no
				NOT = { has_country_flag = cgm_player_focus_as_ai }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_energy }
				set_variable = { which = energy_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = energy_country_weight value = 1 }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_minerals }
				set_variable = { which = minerals_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = minerals_country_weight value = 1 }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_food }
				set_variable = { which = food_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = food_country_weight value = 1 }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_unity }
				set_variable = { which = unity_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = unity_country_weight value = 1 }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_society_research }
				set_variable = { which = society_research_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = society_research_country_weight value = 1 }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_physics_research }
				set_variable = { which = physics_research_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = physics_research_country_weight value = 1 }
			}
			if = {
				limit = { has_country_flag = cgm_player_focus_engineering_research }
				set_variable = { which = engineering_research_country_weight value = cgm_focus_strength }
			}
			else = {
				set_variable = { which = engineering_research_country_weight value = 1 }
			}
			set_variable = { which = food_country_weight_TILE value = food_country_weight }
		}
		else = {
			set_variable = { which = energy_country_weight value = 1 }
			set_variable = { which = minerals_country_weight value = 1 }
			set_variable = { which = food_country_weight value = 1 }
			set_variable = { which = unity_country_weight value = 1 }
			set_variable = { which = society_research_country_weight value = 1 }
			set_variable = { which = physics_research_country_weight value = 1 }
			set_variable = { which = engineering_research_country_weight value = 1 }
			set_variable = { which = food_country_weight_TILE value = 1 }
			 #First negative part test:
			 #MINERALS CHECK NEGATIVE
			if = {
				limit = {
					check_variable = { which = minerals_income value < 0 }
				}
				set_variable = { which = cgm_tmp value = minerals_income }
				multiply_variable = { which = cgm_tmp value = -1 }
				set_variable = { which = cgm_months_to_starvation value = minerals_reserve }
				divide_variable = { which = cgm_months_to_starvation value = minerals_income }
				if = {
					limit = {
						check_variable = { which = cgm_months_to_starvation value < 2 }
					}
					change_variable = { which = minerals_country_weight value = 100 }
				}
				else = {
					set_variable = { which = cgm_tmp value = 100 }
					divide_variable = { which = cgm_tmp value = cgm_months_to_starvation }
					change_variable = { which = minerals_country_weight value = cgm_tmp }
				}
			}
			 #ENERGY CHECK NEGATIVE
			if = {
				limit = {
					check_variable = { which = energy_income value < 0 }
				}
				set_variable = { which = cgm_tmp value = energy_income }
				multiply_variable = { which = cgm_tmp value = -1 }
				set_variable = { which = cgm_months_to_starvation value = energy_reserve }
				divide_variable = { which = cgm_months_to_starvation value = energy_income }
				if = {
					limit = {
						check_variable = { which = cgm_months_to_starvation value < 2 }
					}
					change_variable = { which = energy_country_weight value = 100 }
				}
				else = {
					set_variable = { which = cgm_tmp value = 100 }
					divide_variable = { which = cgm_tmp value = cgm_months_to_starvation }
					change_variable = { which = energy_country_weight value = cgm_tmp }
				}
			}
			 #FOOD CHECK NEGATIVE
			if = {
				limit = {
					check_variable = { which = food_income value < 0 }
				}
				set_variable = { which = cgm_tmp value = food_income }
				multiply_variable = { which = cgm_tmp value = -1 }
				set_variable = { which = cgm_months_to_starvation value = food_reserve }
				divide_variable = { which = cgm_months_to_starvation value = food_income }
				if = {
					limit = {
						check_variable = { which = cgm_months_to_starvation value < 2 }
					}
					change_variable = { which = food_country_weight value = 100 }
					set_variable = { which = food_country_weight_TILE value = food_country_weight }
				}
				else = {
					set_variable = { which = cgm_tmp value = 100 }
					divide_variable = { which = cgm_tmp value = cgm_months_to_starvation }
					change_variable = { which = food_country_weight value = cgm_tmp }
					set_variable = { which = food_country_weight_TILE value = food_country_weight }
				}
			}
			if = {
				limit = {
					NOR = {
						check_variable = { which = minerals_income value < 0 }
						check_variable = { which = energy_income value < 0 }
						check_variable = { which = food_income value < 0 }
					}
				}
				 #All positive weightings:
				 #ENERGY
				multiply_variable = { which = energy_country_weight value = minerals_log }
				set_variable = { which = cgm_tmp value = energy_log }
				change_variable = { which = cgm_tmp value = 2.0 }
				 #Reduce energy surplus wanted during war. Minerals are more important and energy surplus is harder to reach due to active fleets
				if = {
					limit = { is_at_war = yes }
					change_variable = { which = cgm_tmp value = 4 }
				}
				divide_variable = { which = energy_country_weight value = cgm_tmp }
				if = {
					limit = {
						check_variable = { which = energy_country_weight value > 2 }
					}
					set_variable = { which = energy_country_weight value = 2 }
				}
				 #FOOD
				multiply_variable = { which = food_country_weight value = minerals_log }
				set_variable = { which = cgm_tmp value = food_log }
				change_variable = { which = cgm_tmp value = 3.0 }
				divide_variable = { which = food_country_weight value = cgm_tmp }
				if = {
					limit = {
						check_variable = { which = food_country_weight value > 2 }
					}
					set_variable = { which = food_country_weight value = 2 }
				}
				 #check if the food is really needed: If there are few growing planets, we reduce the amount! _TILE remains unchanged as food on tile can be used for energy
				if = {
					limit = { is_food_delimited = yes }
					set_variable = { which = food_country_weight_TILE value = energy_country_weight }
				}
				else = {
					set_variable = { which = food_country_weight_TILE value = food_country_weight }
					set_variable = { which = cgm_max_useful_food value = 0 }
					every_owned_planet = {
						limit = { has_growing_pop = yes }
						prev = {
							change_variable = { which = cgm_max_useful_food value = 100 }
						}
					}
					if = {
						limit = {
							check_variable = { which = food_income value > cgm_max_useful_food }
						}
						set_variable = { which = food_country_weight value = 0 }
					}
					else = {
						divide_variable = { which = cgm_max_useful_food value = 2 }
						if = {
							limit = {
								check_variable = { which = food_income value > cgm_max_useful_food }
							}
							 #Reduction as soon as we have more than half the limit: *1 for half the limit. *0.5 for 3/4 the limit. *0 for limit. Linear interpolation in between. 2*(1-x) Where x is income/max_required. '*-1' instead of '*-2' as we divided the nominator by 2 already
							set_variable = { which = cgm_tmp value = food_income }
							divide_variable = { which = cgm_tmp value = cgm_max_useful_food }
							multiply_variable = { which = cgm_tmp value = -1 }
							change_variable = { which = cgm_tmp value = 2 }
							multiply_variable = { which = food_country_weight value = cgm_tmp }
						}
					}
				}
				 #UNITY
				multiply_variable = { which = unity_country_weight value = minerals_log }
				set_variable = { which = cgm_tmp value = unity_log }
				if = {
					limit = { years_passed < 25 }
					change_variable = { which = cgm_tmp value = 2.0 }
				}
				else = {
					if = {
						limit = { years_passed < 50 }
						change_variable = { which = cgm_tmp value = 1.5849625007211563 }
					}
					else = {
						change_variable = { which = cgm_tmp value = 1.0 }
					}
				}
				divide_variable = { which = unity_country_weight value = cgm_tmp }
				if = {
					limit = {
						check_variable = { which = unity_country_weight value > 2 }
					}
					set_variable = { which = unity_country_weight value = 2 }
				}
				 #SOCIETY_RESEARCH
				multiply_variable = { which = society_research_country_weight value = minerals_log }
				set_variable = { which = cgm_tmp value = society_research_log }
				if = {
					limit = { years_passed < 25 }
					change_variable = { which = cgm_tmp value = 2.0 }
				}
				else = {
					if = {
						limit = { years_passed < 50 }
						change_variable = { which = cgm_tmp value = 1.5849625007211563 }
					}
					else = {
						change_variable = { which = cgm_tmp value = 1.0 }
					}
				}
				 #Subtract extra bonuses that hary AIs are getting from minerals to prevent them going science crazy. Actually treated as an addition to science output as that is less prone to problems
				change_variable = { which = cgm_tmp value = cgm_difficutly_imbalance_log }
				divide_variable = { which = society_research_country_weight value = cgm_tmp }
				if = {
					limit = {
						check_variable = { which = society_research_country_weight value > 2 }
					}
					set_variable = { which = society_research_country_weight value = 2 }
				}
				 #PHYSICS_RESEARCH
				multiply_variable = { which = physics_research_country_weight value = minerals_log }
				set_variable = { which = cgm_tmp value = physics_research_log }
				if = {
					limit = { years_passed < 25 }
					change_variable = { which = cgm_tmp value = 2.0 }
				}
				else = {
					if = {
						limit = { years_passed < 50 }
						change_variable = { which = cgm_tmp value = 1.5849625007211563 }
					}
					else = {
						change_variable = { which = cgm_tmp value = 1.0 }
					}
				}
				 #Subtract extra bonuses that hary AIs are getting from minerals to prevent them going science crazy. Actually treated as an addition to science output as that is less prone to problems
				change_variable = { which = cgm_tmp value = cgm_difficutly_imbalance_log }
				divide_variable = { which = physics_research_country_weight value = cgm_tmp }
				if = {
					limit = {
						check_variable = { which = physics_research_country_weight value > 2 }
					}
					set_variable = { which = physics_research_country_weight value = 2 }
				}
				 #ENGINEERING_RESEARCH
				multiply_variable = { which = engineering_research_country_weight value = minerals_log }
				set_variable = { which = cgm_tmp value = engineering_research_log }
				if = {
					limit = { years_passed < 25 }
					change_variable = { which = cgm_tmp value = 2.0 }
				}
				else = {
					if = {
						limit = { years_passed < 50 }
						change_variable = { which = cgm_tmp value = 1.5849625007211563 }
					}
					else = {
						change_variable = { which = cgm_tmp value = 1.0 }
					}
				}
				 #Subtract extra bonuses that hary AIs are getting from minerals to prevent them going science crazy. Actually treated as an addition to science output as that is less prone to problems
				change_variable = { which = cgm_tmp value = cgm_difficutly_imbalance_log }
				divide_variable = { which = engineering_research_country_weight value = cgm_tmp }
				if = {
					limit = {
						check_variable = { which = engineering_research_country_weight value > 2 }
					}
					set_variable = { which = engineering_research_country_weight value = 2 }
				}
			}
		}
		if = {
			limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
			if = {
				limit = {
					OR = {
						check_variable = { which = energy_country_weight_old value = 0 }
						check_variable = { which = energy_country_weight value = 0 }
					}
				}
				if = {
					limit = {
						OR = {
							check_variable = { which = energy_country_weight_old value > 0.5 }
							check_variable = { which = energy_country_weight value > 0.5 }
						}
					}
					set_country_flag = cgm_redo_all_planet_calcs
				}
			}
			if = {
				limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
				set_variable = { which = cgm_tmp value = energy_country_weight_old }
				divide_variable = { which = cgm_tmp value = energy_country_weight }
				if = {
					limit = {
						OR = {
							check_variable = { which = cgm_tmp value > 1.5 }
							check_variable = { which = cgm_tmp value < 0.666 }
						}
					}
					set_country_flag = cgm_redo_all_planet_calcs
				}
				if = {
					limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
					if = {
						limit = {
							OR = {
								check_variable = { which = minerals_country_weight_old value = 0 }
								check_variable = { which = minerals_country_weight value = 0 }
							}
						}
						if = {
							limit = {
								OR = {
									check_variable = { which = minerals_country_weight_old value > 0.5 }
									check_variable = { which = minerals_country_weight value > 0.5 }
								}
							}
							set_country_flag = cgm_redo_all_planet_calcs
						}
					}
					if = {
						limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
						set_variable = { which = cgm_tmp value = minerals_country_weight_old }
						divide_variable = { which = cgm_tmp value = minerals_country_weight }
						if = {
							limit = {
								OR = {
									check_variable = { which = cgm_tmp value > 1.5 }
									check_variable = { which = cgm_tmp value < 0.666 }
								}
							}
							set_country_flag = cgm_redo_all_planet_calcs
						}
						if = {
							limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
							if = {
								limit = {
									OR = {
										check_variable = { which = food_country_weight_old value = 0 }
										check_variable = { which = food_country_weight value = 0 }
									}
								}
								if = {
									limit = {
										OR = {
											check_variable = { which = food_country_weight_old value > 0.5 }
											check_variable = { which = food_country_weight value > 0.5 }
										}
									}
									set_country_flag = cgm_redo_all_planet_calcs
								}
							}
							if = {
								limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
								set_variable = { which = cgm_tmp value = food_country_weight_old }
								divide_variable = { which = cgm_tmp value = food_country_weight }
								if = {
									limit = {
										OR = {
											check_variable = { which = cgm_tmp value > 1.5 }
											check_variable = { which = cgm_tmp value < 0.666 }
										}
									}
									set_country_flag = cgm_redo_all_planet_calcs
								}
								if = {
									limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
									if = {
										limit = {
											OR = {
												check_variable = { which = unity_country_weight_old value = 0 }
												check_variable = { which = unity_country_weight value = 0 }
											}
										}
										if = {
											limit = {
												OR = {
													check_variable = { which = unity_country_weight_old value > 0.5 }
													check_variable = { which = unity_country_weight value > 0.5 }
												}
											}
											set_country_flag = cgm_redo_all_planet_calcs
										}
									}
									if = {
										limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
										set_variable = { which = cgm_tmp value = unity_country_weight_old }
										divide_variable = { which = cgm_tmp value = unity_country_weight }
										if = {
											limit = {
												OR = {
													check_variable = { which = cgm_tmp value > 1.5 }
													check_variable = { which = cgm_tmp value < 0.666 }
												}
											}
											set_country_flag = cgm_redo_all_planet_calcs
										}
										if = {
											limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
											if = {
												limit = {
													OR = {
														check_variable = { which = society_research_country_weight_old value = 0 }
														check_variable = { which = society_research_country_weight value = 0 }
													}
												}
												if = {
													limit = {
														OR = {
															check_variable = { which = society_research_country_weight_old value > 0.5 }
															check_variable = { which = society_research_country_weight value > 0.5 }
														}
													}
													set_country_flag = cgm_redo_all_planet_calcs
												}
											}
											if = {
												limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
												set_variable = { which = cgm_tmp value = society_research_country_weight_old }
												divide_variable = { which = cgm_tmp value = society_research_country_weight }
												if = {
													limit = {
														OR = {
															check_variable = { which = cgm_tmp value > 1.5 }
															check_variable = { which = cgm_tmp value < 0.666 }
														}
													}
													set_country_flag = cgm_redo_all_planet_calcs
												}
												if = {
													limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
													if = {
														limit = {
															OR = {
																check_variable = { which = physics_research_country_weight_old value = 0 }
																check_variable = { which = physics_research_country_weight value = 0 }
															}
														}
														if = {
															limit = {
																OR = {
																	check_variable = { which = physics_research_country_weight_old value > 0.5 }
																	check_variable = { which = physics_research_country_weight value > 0.5 }
																}
															}
															set_country_flag = cgm_redo_all_planet_calcs
														}
													}
													if = {
														limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
														set_variable = { which = cgm_tmp value = physics_research_country_weight_old }
														divide_variable = { which = cgm_tmp value = physics_research_country_weight }
														if = {
															limit = {
																OR = {
																	check_variable = { which = cgm_tmp value > 1.5 }
																	check_variable = { which = cgm_tmp value < 0.666 }
																}
															}
															set_country_flag = cgm_redo_all_planet_calcs
														}
														if = {
															limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
															if = {
																limit = {
																	OR = {
																		check_variable = { which = engineering_research_country_weight_old value = 0 }
																		check_variable = { which = engineering_research_country_weight value = 0 }
																	}
																}
																if = {
																	limit = {
																		OR = {
																			check_variable = { which = engineering_research_country_weight_old value > 0.5 }
																			check_variable = { which = engineering_research_country_weight value > 0.5 }
																		}
																	}
																	set_country_flag = cgm_redo_all_planet_calcs
																}
															}
															if = {
																limit = { NOT = { has_country_flag = cgm_redo_all_planet_calcs } }
																set_variable = { which = cgm_tmp value = engineering_research_country_weight_old }
																divide_variable = { which = cgm_tmp value = engineering_research_country_weight }
																if = {
																	limit = {
																		OR = {
																			check_variable = { which = cgm_tmp value > 1.5 }
																			check_variable = { which = cgm_tmp value < 0.666 }
																		}
																	}
																	set_country_flag = cgm_redo_all_planet_calcs
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if = {
			limit = { has_country_flag = cgm_redo_all_planet_calcs }
			set_variable = { which = energy_country_weight_old value = energy_country_weight }
			set_variable = { which = minerals_country_weight_old value = minerals_country_weight }
			set_variable = { which = food_country_weight_old value = food_country_weight }
			set_variable = { which = unity_country_weight_old value = unity_country_weight }
			set_variable = { which = society_research_country_weight_old value = society_research_country_weight }
			set_variable = { which = physics_research_country_weight_old value = physics_research_country_weight }
			set_variable = { which = engineering_research_country_weight_old value = engineering_research_country_weight }
		}
	}
}
country_event = {
	id = cgm_auto.40
	is_triggered_only = yes
	custom_gui = cgm_buildings_advanced_configuration_more_options
	diplomatic = yes
	force_open = no
	title = cgm_auto_country_focus_event.name
	desc = {
		trigger = {
			text = cgm_auto_country_focus_event.desc
			success_text = { text = cgm_auto_energy_focus_event.desc has_country_flag = cgm_player_focus_energy }
			success_text = { text = cgm_auto_minerals_focus_event.desc has_country_flag = cgm_player_focus_minerals }
			success_text = { text = cgm_auto_food_focus_event.desc has_country_flag = cgm_player_focus_food }
			success_text = { text = cgm_auto_unity_focus_event.desc has_country_flag = cgm_player_focus_unity }
			success_text = { text = cgm_auto_society_research_focus_event.desc has_country_flag = cgm_player_focus_society_research }
			success_text = { text = cgm_auto_physics_research_focus_event.desc has_country_flag = cgm_player_focus_physics_research }
			success_text = { text = cgm_auto_engineering_research_focus_event.desc has_country_flag = cgm_player_focus_engineering_research }
			success_text = { text = cgm_auto_as_ai_focus_event.desc has_country_flag = cgm_player_focus_as_ai }
		}
	}
	option = {
		name = cgm_auto_focus_strength_1.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 1 }
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_focus_strength_1_5.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 1.5 }
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_focus_strength_2.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 2 }
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_focus_strength_3.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 3 }
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_energy_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_engineering_research
			remove_country_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_minerals_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_engineering_research
			remove_country_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_food_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_engineering_research
			remove_country_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_society_research_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_engineering_research
			remove_country_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_physics_research_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_engineering_research
			remove_country_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_engineering_research_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_engineering_research
			remove_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_as_ai_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_country_flag = cgm_player_focus_as_ai
			remove_country_flag = cgm_player_focus_energy
			remove_country_flag = cgm_player_focus_minerals
			remove_country_flag = cgm_player_focus_food
			remove_country_flag = cgm_player_focus_society_research
			remove_country_flag = cgm_player_focus_physics_research
			remove_country_flag = cgm_player_focus_engineering_research
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_enable_upgrade_only.name
		custom_gui = cgm_advanced_configuration_option_more_options
		trigger = { NOT = { has_country_flag = cgm_auto_upgrade_only } }
		hidden_effect = {
			set_country_flag = cgm_auto_upgrade_only
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_auto_disable_upgrade_only.name
		custom_gui = cgm_advanced_configuration_option_more_options
		trigger = { has_country_flag = cgm_auto_upgrade_only }
		hidden_effect = {
			remove_country_flag = cgm_auto_upgrade_only
			country_event = { id = cgm_auto.40 }
		}
	}
	option = {
		name = cgm_main_menu.close.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = { country_event = { id = cgm_auto.30 } }
	}
}
planet_event = {
	id = cgm_auto.41
	is_triggered_only = yes
	custom_gui = cgm_buildings_advanced_configuration_more_options
	diplomatic = yes
	force_open = no
	title = cgm_auto_planet_focus_event.name
	desc = {
		trigger = {
			text = cgm_auto_planet_focus_event.desc
			success_text = { text = cgm_auto_energy_focus_event.desc has_planet_flag = cgm_player_focus_energy }
			success_text = { text = cgm_auto_minerals_focus_event.desc has_planet_flag = cgm_player_focus_minerals }
			success_text = { text = cgm_auto_food_focus_event.desc has_planet_flag = cgm_player_focus_food }
			success_text = { text = cgm_auto_unity_focus_event.desc has_planet_flag = cgm_player_focus_unity }
			success_text = { text = cgm_auto_society_research_focus_event.desc has_planet_flag = cgm_player_focus_society_research }
			success_text = { text = cgm_auto_physics_research_focus_event.desc has_planet_flag = cgm_player_focus_physics_research }
			success_text = { text = cgm_auto_engineering_research_focus_event.desc has_planet_flag = cgm_player_focus_engineering_research }
			success_text = { text = cgm_auto_as_ai_focus_event.desc has_planet_flag = cgm_player_focus_as_ai }
		}
	}
	option = {
		name = cgm_auto_focus_strength_1.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 1 }
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_focus_strength_1_5.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 1.5 }
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_focus_strength_2.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 2 }
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_focus_strength_3.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_variable = { which = cgm_focus_strength value = 3 }
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_energy_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_planet_flag = cgm_player_focus_energy
			remove_planet_flag = cgm_player_focus_minerals
			remove_planet_flag = cgm_player_focus_food
			remove_planet_flag = cgm_player_focus_society_research
			remove_planet_flag = cgm_player_focus_physics_research
			remove_planet_flag = cgm_player_focus_engineering_research
			remove_planet_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			add_modifier = { modifier = energy_focused_automation days = -1 }
			remove_modifier = minerals_focused_automation
			remove_modifier = food_focused_automation
			remove_modifier = society_research_focused_automation
			remove_modifier = physics_research_focused_automation
			remove_modifier = engineering_research_focused_automation
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_minerals_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_planet_flag = cgm_player_focus_minerals
			remove_planet_flag = cgm_player_focus_energy
			remove_planet_flag = cgm_player_focus_food
			remove_planet_flag = cgm_player_focus_society_research
			remove_planet_flag = cgm_player_focus_physics_research
			remove_planet_flag = cgm_player_focus_engineering_research
			remove_planet_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			add_modifier = { modifier = minerals_focused_automation days = -1 }
			remove_modifier = energy_focused_automation
			remove_modifier = food_focused_automation
			remove_modifier = society_research_focused_automation
			remove_modifier = physics_research_focused_automation
			remove_modifier = engineering_research_focused_automation
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_food_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_planet_flag = cgm_player_focus_food
			remove_planet_flag = cgm_player_focus_energy
			remove_planet_flag = cgm_player_focus_minerals
			remove_planet_flag = cgm_player_focus_society_research
			remove_planet_flag = cgm_player_focus_physics_research
			remove_planet_flag = cgm_player_focus_engineering_research
			remove_planet_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			add_modifier = { modifier = food_focused_automation days = -1 }
			remove_modifier = energy_focused_automation
			remove_modifier = minerals_focused_automation
			remove_modifier = society_research_focused_automation
			remove_modifier = physics_research_focused_automation
			remove_modifier = engineering_research_focused_automation
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_society_research_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_planet_flag = cgm_player_focus_society_research
			remove_planet_flag = cgm_player_focus_energy
			remove_planet_flag = cgm_player_focus_minerals
			remove_planet_flag = cgm_player_focus_food
			remove_planet_flag = cgm_player_focus_physics_research
			remove_planet_flag = cgm_player_focus_engineering_research
			remove_planet_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			add_modifier = { modifier = society_research_focused_automation days = -1 }
			remove_modifier = energy_focused_automation
			remove_modifier = minerals_focused_automation
			remove_modifier = food_focused_automation
			remove_modifier = physics_research_focused_automation
			remove_modifier = engineering_research_focused_automation
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_physics_research_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_planet_flag = cgm_player_focus_physics_research
			remove_planet_flag = cgm_player_focus_energy
			remove_planet_flag = cgm_player_focus_minerals
			remove_planet_flag = cgm_player_focus_food
			remove_planet_flag = cgm_player_focus_society_research
			remove_planet_flag = cgm_player_focus_engineering_research
			remove_planet_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			add_modifier = { modifier = physics_research_focused_automation days = -1 }
			remove_modifier = energy_focused_automation
			remove_modifier = minerals_focused_automation
			remove_modifier = food_focused_automation
			remove_modifier = society_research_focused_automation
			remove_modifier = engineering_research_focused_automation
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_engineering_research_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			set_planet_flag = cgm_player_focus_engineering_research
			remove_planet_flag = cgm_player_focus_energy
			remove_planet_flag = cgm_player_focus_minerals
			remove_planet_flag = cgm_player_focus_food
			remove_planet_flag = cgm_player_focus_society_research
			remove_planet_flag = cgm_player_focus_physics_research
			remove_planet_flag = cgm_player_focus_as_ai
			if = {
				limit = {
					check_variable = { which = cgm_focus_strength value < 1.001 }
				}
				set_variable = { which = cgm_focus_strength value = 1.5 }
			}
			add_modifier = { modifier = engineering_research_focused_automation days = -1 }
			remove_modifier = energy_focused_automation
			remove_modifier = minerals_focused_automation
			remove_modifier = food_focused_automation
			remove_modifier = society_research_focused_automation
			remove_modifier = physics_research_focused_automation
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_none_focus.name
		custom_gui = cgm_advanced_configuration_option_more_options
		hidden_effect = {
			remove_planet_flag = cgm_player_focus_energy
			remove_modifier = energy_focused_automation
			remove_planet_flag = cgm_player_focus_minerals
			remove_modifier = minerals_focused_automation
			remove_planet_flag = cgm_player_focus_food
			remove_modifier = food_focused_automation
			remove_planet_flag = cgm_player_focus_society_research
			remove_modifier = society_research_focused_automation
			remove_planet_flag = cgm_player_focus_physics_research
			remove_modifier = physics_research_focused_automation
			remove_planet_flag = cgm_player_focus_engineering_research
			remove_modifier = engineering_research_focused_automation
		}
	}
	option = {
		name = cgm_auto_enable_upgrade_only.name
		custom_gui = cgm_advanced_configuration_option_more_options
		trigger = { NOT = { has_planet_flag = cgm_auto_upgrade_only } }
		hidden_effect = {
			set_planet_flag = cgm_auto_upgrade_only
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = {
		name = cgm_auto_disable_upgrade_only.name
		custom_gui = cgm_advanced_configuration_option_more_options
		trigger = { has_planet_flag = cgm_auto_upgrade_only }
		hidden_effect = {
			remove_planet_flag = cgm_auto_upgrade_only
			planet_event = { id = cgm_auto.41 }
		}
	}
	option = { name = cgm_main_menu.close.name custom_gui = cgm_advanced_configuration_option_more_options }
}
country_event = {
	id = cgm_auto.12
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		every_owned_planet = {
			limit = {
				has_building_construction = no
				sector_controlled = no
				has_orbital_bombardment = no
			}
			every_owned_pop = {
				limit = {
					OR = { is_colony_pop = yes is_growing = yes }
					OR = {
						is_being_purged = no
						has_purge_type = { type = purge_labor_camps }
					}
				}
				tile = {
					switch = {
						trigger = has_building
						building_stronghold = { add_building_construction = building_fortress }
						building_colony_shelter = { add_building_construction = building_capital_1 }
						building_deployment_post = { add_building_construction = building_machine_capital_1 }
						building_capital_1 = { add_building_construction = building_capital_2 }
						building_machine_capital_1 = { add_building_construction = building_machine_capital_2 }
						building_capital_2 = { add_building_construction = building_capital_3 }
						building_machine_capital_2 = { add_building_construction = building_machine_capital_3 }
						building_hab_capital = {
							 #First a random list, then all possible ones -> fail safe if the one chosen in the random list is invalid
							random_list = {
								50 = { add_building_construction = building_capital_3 }
								50 = { add_building_construction = building_machine_capital_3 }
							}
							add_building_construction = building_capital_3
							add_building_construction = building_machine_capital_3
						}
						building_power_plant_1 = { add_building_construction = building_power_plant_2 }
						building_power_plant_2 = { add_building_construction = building_power_plant_3 }
						building_power_plant_3 = { add_building_construction = building_power_plant_4 }
						building_power_plant_4 = { add_building_construction = building_power_plant_5 }
						building_mining_network_1 = { add_building_construction = building_mining_network_2 }
						building_mining_network_2 = { add_building_construction = building_mining_network_3 }
						building_mining_network_3 = { add_building_construction = building_mining_network_4 }
						building_mining_network_4 = { add_building_construction = building_mining_network_5 }
						building_hydroponics_farm_1 = { add_building_construction = building_hydroponics_farm_2 }
						building_hydroponics_farm_2 = { add_building_construction = building_hydroponics_farm_3 }
						building_hydroponics_farm_3 = { add_building_construction = building_hydroponics_farm_4 }
						building_hydroponics_farm_4 = { add_building_construction = building_hydroponics_farm_5 }
						building_basic_science_lab_1 = {
							 #First a random list, then all possible ones -> fail safe if the one chosen in the random list is invalid
							random_list = {
								33 = { add_building_construction = building_engineering_facility_1 }
								33 = { add_building_construction = building_physics_lab_1 }
								33 = { add_building_construction = building_biolab_1 }
							}
							add_building_construction = building_engineering_facility_1
							add_building_construction = building_physics_lab_1
							add_building_construction = building_biolab_1
						}
						building_engineering_facility_1 = { add_building_construction = building_engineering_facility_2 }
						building_engineering_facility_2 = { add_building_construction = building_engineering_facility_3 }
						building_engineering_facility_3 = { add_building_construction = building_engineering_facility_4 }
						building_physics_lab_1 = { add_building_construction = building_physics_lab_2 }
						building_physics_lab_2 = { add_building_construction = building_physics_lab_3 }
						building_physics_lab_3 = { add_building_construction = building_physics_lab_4 }
						building_biolab_1 = { add_building_construction = building_biolab_2 }
						building_biolab_2 = { add_building_construction = building_biolab_3 }
						building_biolab_3 = { add_building_construction = building_biolab_4 }
						building_primitive_farm = {
							 #First a random list, then all possible ones -> fail safe if the one chosen in the random list is invalid
							random_list = {
								14 = { add_building_construction = building_farming_complex_1_1 }
								14 = { add_building_construction = building_farming_complex_1_2 }
								14 = { add_building_construction = building_farming_complex_1_3 }
								14 = { add_building_construction = building_farming_complex_1_4 }
								14 = { add_building_construction = building_farming_complex_1_5 }
								14 = { add_building_construction = building_hydroponics_farm_1 }
								14 = { add_building_construction = building_hydroponic_farm_1 }
							}
							add_building_construction = building_farming_complex_1_1
							add_building_construction = building_farming_complex_1_2
							add_building_construction = building_farming_complex_1_3
							add_building_construction = building_farming_complex_1_4
							add_building_construction = building_farming_complex_1_5
							add_building_construction = building_hydroponics_farm_1
							add_building_construction = building_hydroponic_farm_1
						}
						building_primitive_factory = {
							 #First a random list, then all possible ones -> fail safe if the one chosen in the random list is invalid
							random_list = {
								14 = { add_building_construction = building_mining_complex_1_1 }
								14 = { add_building_construction = building_mining_complex_1_2 }
								14 = { add_building_construction = building_mining_complex_1_3 }
								14 = { add_building_construction = building_mining_complex_1_4 }
								14 = { add_building_construction = building_mining_complex_1_5 }
								14 = { add_building_construction = building_mining_network_1 }
								14 = { add_building_construction = building_manufacturing_complex_1 }
							}
							add_building_construction = building_mining_complex_1_1
							add_building_construction = building_mining_complex_1_2
							add_building_construction = building_mining_complex_1_3
							add_building_construction = building_mining_complex_1_4
							add_building_construction = building_mining_complex_1_5
							add_building_construction = building_mining_network_1
							add_building_construction = building_manufacturing_complex_1
						}
						building_agricultural_processor_1 = { add_building_construction = building_agricultural_processor_2 }
						building_hyperstorage_facility_1 = { add_building_construction = building_hyperstorage_facility_2 }
						building_hyperstorage_facility_2 = { add_building_construction = building_hyperstorage_facility_3 }
						building_economic_district_1 = { add_building_construction = building_economic_district_2 }
						building_economic_district_2 = { add_building_construction = building_economic_district_3 }
						building_economic_district_3 = { add_building_construction = building_economic_district_4 }
						building_economic_district_4 = { add_building_construction = building_economic_district_5 }
						building_manufacturing_complex_1 = { add_building_construction = building_manufacturing_complex_2 }
						building_manufacturing_complex_2 = { add_building_construction = building_manufacturing_complex_3 }
						building_manufacturing_complex_3 = { add_building_construction = building_manufacturing_complex_4 }
						building_manufacturing_complex_4 = { add_building_construction = building_manufacturing_complex_5 }
						building_hydroponic_farm_1 = { add_building_construction = building_hydroponic_farm_2 }
						building_hydroponic_farm_2 = { add_building_construction = building_hydroponic_farm_3 }
						building_hydroponic_farm_3 = { add_building_construction = building_hydroponic_farm_4 }
						building_hydroponic_farm_4 = { add_building_construction = building_hydroponic_farm_5 }
						building_sociological_campus_1 = { add_building_construction = building_sociological_campus_2 }
						building_sociological_campus_2 = { add_building_construction = building_sociological_campus_3 }
						building_sociological_campus_3 = { add_building_construction = building_sociological_campus_4 }
						building_sociological_campus_4 = { add_building_construction = building_sociological_campus_5 }
						building_physics_campus_1 = { add_building_construction = building_physics_campus_2 }
						building_physics_campus_2 = { add_building_construction = building_physics_campus_3 }
						building_physics_campus_3 = { add_building_construction = building_physics_campus_4 }
						building_physics_campus_4 = { add_building_construction = building_physics_campus_5 }
						building_engineering_campus_1 = { add_building_construction = building_engineering_campus_2 }
						building_engineering_campus_2 = { add_building_construction = building_engineering_campus_3 }
						building_engineering_campus_3 = { add_building_construction = building_engineering_campus_4 }
						building_engineering_campus_4 = { add_building_construction = building_engineering_campus_5 }
						building_mining_complex_1_1 = { add_building_construction = building_mining_complex_2_1 }
						building_mining_complex_2_1 = { add_building_construction = building_mining_complex_3_1 }
						building_mining_complex_3_1 = { add_building_construction = building_mining_complex_4_1 }
						building_mining_complex_4_1 = { add_building_construction = building_mining_complex_5_1 }
						building_mining_complex_1_2 = { add_building_construction = building_mining_complex_2_2 }
						building_mining_complex_2_2 = { add_building_construction = building_mining_complex_3_2 }
						building_mining_complex_3_2 = { add_building_construction = building_mining_complex_4_2 }
						building_mining_complex_4_2 = { add_building_construction = building_mining_complex_5_2 }
						building_mining_complex_1_3 = { add_building_construction = building_mining_complex_2_3 }
						building_mining_complex_2_3 = { add_building_construction = building_mining_complex_3_3 }
						building_mining_complex_3_3 = { add_building_construction = building_mining_complex_4_3 }
						building_mining_complex_4_3 = { add_building_construction = building_mining_complex_5_3 }
						building_mining_complex_1_4 = { add_building_construction = building_mining_complex_2_4 }
						building_mining_complex_2_4 = { add_building_construction = building_mining_complex_3_4 }
						building_mining_complex_3_4 = { add_building_construction = building_mining_complex_4_4 }
						building_mining_complex_4_4 = { add_building_construction = building_mining_complex_5_4 }
						building_mining_complex_1_5 = { add_building_construction = building_mining_complex_2_5 }
						building_mining_complex_2_5 = { add_building_construction = building_mining_complex_3_5 }
						building_mining_complex_3_5 = { add_building_construction = building_mining_complex_4_5 }
						building_mining_complex_4_5 = { add_building_construction = building_mining_complex_5_5 }
						building_farming_complex_1_1 = { add_building_construction = building_farming_complex_2_1 }
						building_farming_complex_2_1 = { add_building_construction = building_farming_complex_3_1 }
						building_farming_complex_3_1 = { add_building_construction = building_farming_complex_4_1 }
						building_farming_complex_4_1 = { add_building_construction = building_farming_complex_5_1 }
						building_farming_complex_1_2 = { add_building_construction = building_farming_complex_2_2 }
						building_farming_complex_2_2 = { add_building_construction = building_farming_complex_3_2 }
						building_farming_complex_3_2 = { add_building_construction = building_farming_complex_4_2 }
						building_farming_complex_4_2 = { add_building_construction = building_farming_complex_5_2 }
						building_farming_complex_1_3 = { add_building_construction = building_farming_complex_2_3 }
						building_farming_complex_2_3 = { add_building_construction = building_farming_complex_3_3 }
						building_farming_complex_3_3 = { add_building_construction = building_farming_complex_4_3 }
						building_farming_complex_4_3 = { add_building_construction = building_farming_complex_5_3 }
						building_farming_complex_1_4 = { add_building_construction = building_farming_complex_2_4 }
						building_farming_complex_2_4 = { add_building_construction = building_farming_complex_3_4 }
						building_farming_complex_3_4 = { add_building_construction = building_farming_complex_4_4 }
						building_farming_complex_4_4 = { add_building_construction = building_farming_complex_5_4 }
						building_farming_complex_1_5 = { add_building_construction = building_farming_complex_2_5 }
						building_farming_complex_2_5 = { add_building_construction = building_farming_complex_3_5 }
						building_farming_complex_3_5 = { add_building_construction = building_farming_complex_4_5 }
						building_farming_complex_4_5 = { add_building_construction = building_farming_complex_5_5 }
						building_isotope_refinery_1_1 = { add_building_construction = building_isotope_refinery_2_1 }
						building_isotope_refinery_2_1 = { add_building_construction = building_isotope_refinery_3_1 }
						building_isotope_refinery_3_1 = { add_building_construction = building_isotope_refinery_4_1 }
						building_isotope_refinery_4_1 = { add_building_construction = building_isotope_refinery_5_1 }
						building_isotope_refinery_1_2 = { add_building_construction = building_isotope_refinery_2_2 }
						building_isotope_refinery_2_2 = { add_building_construction = building_isotope_refinery_3_2 }
						building_isotope_refinery_3_2 = { add_building_construction = building_isotope_refinery_4_2 }
						building_isotope_refinery_4_2 = { add_building_construction = building_isotope_refinery_5_2 }
						building_isotope_refinery_1_3 = { add_building_construction = building_isotope_refinery_2_3 }
						building_isotope_refinery_2_3 = { add_building_construction = building_isotope_refinery_3_3 }
						building_isotope_refinery_3_3 = { add_building_construction = building_isotope_refinery_4_3 }
						building_isotope_refinery_4_3 = { add_building_construction = building_isotope_refinery_5_3 }
						building_isotope_refinery_1_4 = { add_building_construction = building_isotope_refinery_2_4 }
						building_isotope_refinery_2_4 = { add_building_construction = building_isotope_refinery_3_4 }
						building_isotope_refinery_3_4 = { add_building_construction = building_isotope_refinery_4_4 }
						building_isotope_refinery_4_4 = { add_building_construction = building_isotope_refinery_5_4 }
						building_isotope_refinery_1_5 = { add_building_construction = building_isotope_refinery_2_5 }
						building_isotope_refinery_2_5 = { add_building_construction = building_isotope_refinery_3_5 }
						building_isotope_refinery_3_5 = { add_building_construction = building_isotope_refinery_4_5 }
						building_isotope_refinery_4_5 = { add_building_construction = building_isotope_refinery_5_5 }
						building_biofuel_refinery_1_1 = { add_building_construction = building_biofuel_refinery_2_1 }
						building_biofuel_refinery_2_1 = { add_building_construction = building_biofuel_refinery_3_1 }
						building_biofuel_refinery_3_1 = { add_building_construction = building_biofuel_refinery_4_1 }
						building_biofuel_refinery_4_1 = { add_building_construction = building_biofuel_refinery_5_1 }
						building_biofuel_refinery_1_2 = { add_building_construction = building_biofuel_refinery_2_2 }
						building_biofuel_refinery_2_2 = { add_building_construction = building_biofuel_refinery_3_2 }
						building_biofuel_refinery_3_2 = { add_building_construction = building_biofuel_refinery_4_2 }
						building_biofuel_refinery_4_2 = { add_building_construction = building_biofuel_refinery_5_2 }
						building_biofuel_refinery_1_3 = { add_building_construction = building_biofuel_refinery_2_3 }
						building_biofuel_refinery_2_3 = { add_building_construction = building_biofuel_refinery_3_3 }
						building_biofuel_refinery_3_3 = { add_building_construction = building_biofuel_refinery_4_3 }
						building_biofuel_refinery_4_3 = { add_building_construction = building_biofuel_refinery_5_3 }
						building_biofuel_refinery_1_4 = { add_building_construction = building_biofuel_refinery_2_4 }
						building_biofuel_refinery_2_4 = { add_building_construction = building_biofuel_refinery_3_4 }
						building_biofuel_refinery_3_4 = { add_building_construction = building_biofuel_refinery_4_4 }
						building_biofuel_refinery_4_4 = { add_building_construction = building_biofuel_refinery_5_4 }
						building_biofuel_refinery_1_5 = { add_building_construction = building_biofuel_refinery_2_5 }
						building_biofuel_refinery_2_5 = { add_building_construction = building_biofuel_refinery_3_5 }
						building_biofuel_refinery_3_5 = { add_building_construction = building_biofuel_refinery_4_5 }
						building_biofuel_refinery_4_5 = { add_building_construction = building_biofuel_refinery_5_5 }
						building_society_lab_1_1 = { add_building_construction = building_society_lab_2_1 }
						building_society_lab_2_1 = { add_building_construction = building_society_lab_3_1 }
						building_society_lab_3_1 = { add_building_construction = building_society_lab_4_1 }
						building_society_lab_4_1 = { add_building_construction = building_society_lab_5_1 }
						building_society_lab_1_2 = { add_building_construction = building_society_lab_2_2 }
						building_society_lab_2_2 = { add_building_construction = building_society_lab_3_2 }
						building_society_lab_3_2 = { add_building_construction = building_society_lab_4_2 }
						building_society_lab_4_2 = { add_building_construction = building_society_lab_5_2 }
						building_society_lab_1_3 = { add_building_construction = building_society_lab_2_3 }
						building_society_lab_2_3 = { add_building_construction = building_society_lab_3_3 }
						building_society_lab_3_3 = { add_building_construction = building_society_lab_4_3 }
						building_society_lab_4_3 = { add_building_construction = building_society_lab_5_3 }
						building_society_lab_1_4 = { add_building_construction = building_society_lab_2_4 }
						building_society_lab_2_4 = { add_building_construction = building_society_lab_3_4 }
						building_society_lab_3_4 = { add_building_construction = building_society_lab_4_4 }
						building_society_lab_4_4 = { add_building_construction = building_society_lab_5_4 }
						building_society_lab_1_5 = { add_building_construction = building_society_lab_2_5 }
						building_society_lab_2_5 = { add_building_construction = building_society_lab_3_5 }
						building_society_lab_3_5 = { add_building_construction = building_society_lab_4_5 }
						building_society_lab_4_5 = { add_building_construction = building_society_lab_5_5 }
						building_physics_lab_1_1 = { add_building_construction = building_physics_lab_2_1 }
						building_physics_lab_2_1 = { add_building_construction = building_physics_lab_3_1 }
						building_physics_lab_3_1 = { add_building_construction = building_physics_lab_4_1 }
						building_physics_lab_4_1 = { add_building_construction = building_physics_lab_5_1 }
						building_physics_lab_1_2 = { add_building_construction = building_physics_lab_2_2 }
						building_physics_lab_2_2 = { add_building_construction = building_physics_lab_3_2 }
						building_physics_lab_3_2 = { add_building_construction = building_physics_lab_4_2 }
						building_physics_lab_4_2 = { add_building_construction = building_physics_lab_5_2 }
						building_physics_lab_1_3 = { add_building_construction = building_physics_lab_2_3 }
						building_physics_lab_2_3 = { add_building_construction = building_physics_lab_3_3 }
						building_physics_lab_3_3 = { add_building_construction = building_physics_lab_4_3 }
						building_physics_lab_4_3 = { add_building_construction = building_physics_lab_5_3 }
						building_physics_lab_1_4 = { add_building_construction = building_physics_lab_2_4 }
						building_physics_lab_2_4 = { add_building_construction = building_physics_lab_3_4 }
						building_physics_lab_3_4 = { add_building_construction = building_physics_lab_4_4 }
						building_physics_lab_4_4 = { add_building_construction = building_physics_lab_5_4 }
						building_physics_lab_1_5 = { add_building_construction = building_physics_lab_2_5 }
						building_physics_lab_2_5 = { add_building_construction = building_physics_lab_3_5 }
						building_physics_lab_3_5 = { add_building_construction = building_physics_lab_4_5 }
						building_physics_lab_4_5 = { add_building_construction = building_physics_lab_5_5 }
						building_engineering_lab_1_1 = { add_building_construction = building_engineering_lab_2_1 }
						building_engineering_lab_2_1 = { add_building_construction = building_engineering_lab_3_1 }
						building_engineering_lab_3_1 = { add_building_construction = building_engineering_lab_4_1 }
						building_engineering_lab_4_1 = { add_building_construction = building_engineering_lab_5_1 }
						building_engineering_lab_1_2 = { add_building_construction = building_engineering_lab_2_2 }
						building_engineering_lab_2_2 = { add_building_construction = building_engineering_lab_3_2 }
						building_engineering_lab_3_2 = { add_building_construction = building_engineering_lab_4_2 }
						building_engineering_lab_4_2 = { add_building_construction = building_engineering_lab_5_2 }
						building_engineering_lab_1_3 = { add_building_construction = building_engineering_lab_2_3 }
						building_engineering_lab_2_3 = { add_building_construction = building_engineering_lab_3_3 }
						building_engineering_lab_3_3 = { add_building_construction = building_engineering_lab_4_3 }
						building_engineering_lab_4_3 = { add_building_construction = building_engineering_lab_5_3 }
						building_engineering_lab_1_4 = { add_building_construction = building_engineering_lab_2_4 }
						building_engineering_lab_2_4 = { add_building_construction = building_engineering_lab_3_4 }
						building_engineering_lab_3_4 = { add_building_construction = building_engineering_lab_4_4 }
						building_engineering_lab_4_4 = { add_building_construction = building_engineering_lab_5_4 }
						building_engineering_lab_1_5 = { add_building_construction = building_engineering_lab_2_5 }
						building_engineering_lab_2_5 = { add_building_construction = building_engineering_lab_3_5 }
						building_engineering_lab_3_5 = { add_building_construction = building_engineering_lab_4_5 }
						building_engineering_lab_4_5 = { add_building_construction = building_engineering_lab_5_5 }
						building_energy_matter_converter_1_1 = { add_building_construction = building_energy_matter_converter_2_1 }
						building_energy_matter_converter_2_1 = { add_building_construction = building_energy_matter_converter_3_1 }
						building_energy_matter_converter_1_2 = { add_building_construction = building_energy_matter_converter_2_2 }
						building_energy_matter_converter_2_2 = { add_building_construction = building_energy_matter_converter_3_2 }
						building_energy_matter_converter_1_3 = { add_building_construction = building_energy_matter_converter_2_3 }
						building_energy_matter_converter_2_3 = { add_building_construction = building_energy_matter_converter_3_3 }
						building_energy_conduit_1_1 = { add_building_construction = building_energy_conduit_2_1 }
						building_energy_conduit_2_1 = { add_building_construction = building_energy_conduit_3_1 }
						building_energy_conduit_1_2 = { add_building_construction = building_energy_conduit_2_2 }
						building_energy_conduit_2_2 = { add_building_construction = building_energy_conduit_3_2 }
						building_energy_conduit_1_3 = { add_building_construction = building_energy_conduit_2_3 }
						building_energy_conduit_2_3 = { add_building_construction = building_energy_conduit_3_3 }
						building_food_replicator_1_1 = { add_building_construction = building_food_replicator_2_1 }
						building_food_replicator_2_1 = { add_building_construction = building_food_replicator_3_1 }
						building_food_replicator_1_2 = { add_building_construction = building_food_replicator_2_2 }
						building_food_replicator_2_2 = { add_building_construction = building_food_replicator_3_2 }
						building_food_replicator_1_3 = { add_building_construction = building_food_replicator_2_3 }
						building_food_replicator_2_3 = { add_building_construction = building_food_replicator_3_3 }
						building_computational_array_1_1 = { add_building_construction = building_computational_array_2_1 }
						building_computational_array_2_1 = { add_building_construction = building_computational_array_3_1 }
						building_computational_array_1_2 = { add_building_construction = building_computational_array_2_2 }
						building_computational_array_2_2 = { add_building_construction = building_computational_array_3_2 }
						building_computational_array_1_3 = { add_building_construction = building_computational_array_2_3 }
						building_computational_array_2_3 = { add_building_construction = building_computational_array_3_3 }
						building_autochthon_monument = { add_building_construction = building_heritage_site }
						building_heritage_site = { add_building_construction = building_hypercomms_forum }
						building_hypercomms_forum = { add_building_construction = building_autocurating_vault }
						building_temple = { add_building_construction = building_holotemple }
						building_holotemple = { add_building_construction = building_sacred_nexus }
						building_sacred_nexus = { add_building_construction = building_citadel_of_faith }
						building_uplink_node = { add_building_construction = building_network_junction }
						building_network_junction = { add_building_construction = building_system_conflux }
						building_system_conflux = { add_building_construction = building_alpha_hub }
						building_hab_cultural_center = {
							 #First a random list, then all possible ones -> fail safe if the one chosen in the random list is invalid
							random_list = {
								50 = { add_building_construction = building_autocurating_vault }
								50 = { add_building_construction = building_citadel_of_faith }
							}
							add_building_construction = building_autocurating_vault
							add_building_construction = building_citadel_of_faith
						}
						building_power_hub_1 = { add_building_construction = building_power_hub_2 }
						building_mineral_processing_plant_1 = { add_building_construction = building_mineral_processing_plant_2 }
						building_clinic = { add_building_construction = building_hospital }
						building_spare_parts_depot = { add_building_construction = building_unit_assembly_plant }
					}
					cgm_upgrade_building = yes
				}
				if = {
					limit = { tile = { has_building_construction = yes } }
					owner = { set_country_flag = cgm_auto_built }
					break = yes
				}
			}
			if = {
				limit = { has_building_construction = yes }
				break = yes
			}
		}
	}
}
