namespace = ex_ai_building_events

event = {
	id = ex_ai_building_events.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = {
				is_country_type = default
				NOT = { has_country_flag = resource_check_delay }
				OR = {
					energy < 1
					minerals < 1
					AND = {
						NOT = { has_authority = auth_machine_intelligence }
						food < 1
					}
				}		
			}
			if = {
				limit = {
					NOT = { has_authority = auth_machine_intelligence }
					food < 1
				}				
				set_timed_country_flag = { flag = is_food_starved days = 90 }
			}
			if = {
				limit = { energy < 1 }
				set_timed_country_flag = { flag = is_energy_starved days = 90 }
			}		
			if = {
				limit = { minerals < 1 }
				set_timed_country_flag = { flag = is_minerals_starved days = 90 }
			}			
			set_timed_country_flag = { flag = resource_check_delay days = 90 }
		}		
	}			
}

event = { #this event adds variables into scopes, to be used by building ai_weights
	id = ex_ai_building_events.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = { 				
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}	
			}				
			every_owned_planet = {
				limit = { 
					is_colony = yes
					OR = {
						owner = { is_ai = yes }
						sector_controlled = yes
					}	
				}
				set_variable = { which = energy_mult value = 0 }
				set_variable = { which = minerals_mult value = 0 }
				set_variable = { which = food_mult value = 0 }
				set_variable = { which = unity_mult value = 0 }
				set_variable = { which = society_research_mult value = 0 }
				set_variable = { which = physics_research_mult value = 0 }
				set_variable = { which = engineering_research_mult value = 0 }
				every_owned_pop = {
					limit = { OR = { is_robot_pop = yes is_sapient = yes } }
					set_variable = { which = energy_mult value = 0 }
					set_variable = { which = minerals_mult value = 0 }
					set_variable = { which = food_mult value = 0 }
					set_variable = { which = unity_mult value = 0 }
					set_variable = { which = society_research_mult value = 0 }
					set_variable = { which = physics_research_mult value = 0 }
					set_variable = { which = engineering_research_mult value = 0 }									
					calculate_pop_multipliers = yes
				}				
				every_tile = {
					limit = { 
						is_orbital_tile = no
						has_blocker = no
					}
					#multiplier variables
					set_variable = { which = energy_mult value = 1 }
					set_variable = { which = minerals_mult value = 1 }
					set_variable = { which = food_mult value = 1 }
					set_variable = { which = unity_mult value = 1 }
					set_variable = { which = society_research_mult value = 1 }
					set_variable = { which = physics_research_mult value = 1 }
					set_variable = { which = engineering_research_mult value = 1 }					
					#deposit/adj. variables
					set_variable = { which = energy_weight value = 0 }
					set_variable = { which = minerals_weight value = 0 }
					set_variable = { which = food_weight value = 0 }
					set_variable = { which = unity_weight value = 0 }
					set_variable = { which = society_research_weight value = 0 }
					set_variable = { which = physics_research_weight value = 0 }
					set_variable = { which = engineering_research_weight value = 0 }
					#building weight variables
					set_variable = { which = energy_building_tile value = 0 }
					set_variable = { which = minerals_building_tile value = 0 }
					set_variable = { which = food_building_tile value = 0 }
					set_variable = { which = society_research_building_tile value = 0 }
					set_variable = { which = physics_research_building_tile value = 0 }
					set_variable = { which = engineering_research_building_tile value = 0 }
				}
				if = { 
					limit = { 
						OR = {
							has_bonus_planet_modifier = yes
							has_planet_bonus_building = yes
							AND = {
								has_global_flag = ex_planets_enhanced_active
								OR = {
									has_sr_adj_bonus_building = yes
									has_planets_enhanced_planet_bonus_buildings = yes									
								}	
							}	
						}
					}
					calculate_planet_weights = yes
				}	
				every_tile = {
					limit = { 
						is_orbital_tile = no
						has_blocker = no
					}
					if = {
						limit = { 
							any_neighboring_tile = { 
								OR = {
									AND = {
										has_building = yes
										OR = { 	
											has_capital_building = yes
											has_hyperstorage_building = yes 
											has_polytechnic_building = yes
											has_special_capital_resource_building = yes
											AND = {
												has_global_flag = ex_planets_enhanced_active
												has_sr_adj_bonus_building = yes
											}	
										}	
									}
									AND = {
										has_blocker = yes
										has_adj_bonus_blocker = yes
									}		
								}							
							}							
						}
						calculate_adjcancy_weights = yes
					}
					calculate_tile_weights = yes
				}					
			}		
		}
	}
}