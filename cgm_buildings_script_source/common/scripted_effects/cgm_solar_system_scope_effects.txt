#root in this effect is country
#prev in this effect is starbase scope

check_shipyard_candidacy = {
	if = { 
		limit = { has_star_flag = wormhole_or_gateway_system }
		set_timed_star_flag = { flag = shipyard_candidate_system days = 1 }	
		else = {		
			if = {
				limit = { 
					random_system_planet = {
						limit = { has_planet_flag = system_variable_repository }
						check_variable = { which = num_of_hyperlane_connections value > 2 }
					}
				}
				random_system_planet = {
					limit = { has_planet_flag = system_variable_repository }
					set_variable = { which = num_of_shipyard_modules value = 0 }
					set_variable = { which = max_number_of_modules value = 0 }
					save_event_target_as = starbase_system_star
				}	
				if = {
					limit = { prev = { count_starbase_modules = { type = shipyard count = 1 } } }
					event_target:starbase_system_star = { change_variable = { which = num_of_shipyard_modules value = 1 } }
					else = { 
						if = {
							limit = { prev = { count_starbase_modules = { type = shipyard count = 2 } } }
							event_target:starbase_system_star = { change_variable = { which = num_of_shipyard_modules value = 2 } }	
							else = { 
								if = {
									limit = { prev = { count_starbase_modules = { type = shipyard count = 3 } } }
									event_target:starbase_system_star = { change_variable = { which = num_of_shipyard_modules value = 3 } }	
									else = { 
										if = {
											limit = { prev = { count_starbase_modules = { type = shipyard count = 4 } } }
											event_target:starbase_system_star = { change_variable = { which = num_of_shipyard_modules value = 4 } }	
											else = { 
												if = {
													limit = { prev = { count_starbase_modules = { type = shipyard count = 5 } } }
													event_target:starbase_system_star = { change_variable = { which = num_of_shipyard_modules value = 5 } }														
													else = { 
														if = {
															limit = { 
																prev = { 
																	OR = { 
																		count_starbase_modules = { type = shipyard count = 6 }
																		count_starbase_modules = { type = shipyard count > 6 } #failsafe for mods that add more module slots
																	}	
																}
															}
															event_target:starbase_system_star = { change_variable = { which = num_of_shipyard_modules value = 6 } }																
														}
													}
												}	
											}
										}
									}
								}
							}
						}
					}	
				}		
				if = {
					limit = { prev = { has_starbase_size = starbase_starport } }
					event_target:starbase_system_star = { change_variable = { which = max_number_of_modules value = 2 } }
					else = { 
						if = {
							limit = { prev = { has_starbase_size = starbase_starhold } }
							event_target:starbase_system_star = { change_variable = { which = max_number_of_modules value = 4 } }	
							else = { 
								if = {
									limit = { prev = { has_starbase_size = starbase_starfortress } }
									event_target:starbase_system_star = { change_variable = { which = max_number_of_modules value = 6 } }	
									else = { 
										if = {
											limit = { prev = { has_starbase_size = starbase_citadel } }
											event_target:starbase_system_star = { change_variable = { which = max_number_of_modules value = 6 } }									
										}
									}
								}
							}
						}
					}	
				}	
				event_target:starbase_system_star = { 
					divide_variable = { which = num_of_shipyard_modules value = max_number_of_modules } 
					if = {
						limit = { check_variable = { which = num_of_shipyard_modules value > 0.49 } } 
						set_timed_star_flag = { flag = shipyard_candidate_system days = 1 }	
					}
				}
			}
		}	
	}	
}	
assign_shipyard_system_flag = {	
	if = {
		limit = { 
			root = { 
				any_system_within_border = { 						
					NOT = { is_same_value = prevprev }
					OR = { 
						NAND = { 
							distance = { source = prevprev min = 0 max = 50 type = hyperlane }								
							has_star_flag = shipyard_system
						}	
						AND = { 
							OR = { 
								has_natural_wormhole = yes
								has_megastructure = gateway_restored
								has_megastructure = gateway_final
							}	
							prevprev = {
								NOR = { 
									has_natural_wormhole = yes
									has_megastructure = gateway_restored
									has_megastructure = gateway_final
								}	
							}	
						}								
					}
				}
			}
			OR = {
				AND = { 
					any_neighbor_system = { 
						ignore_hyperlanes = no 
						any_planet = { exists = owner owner = root }	
					}
					event_target:starbase_system_star = { check_variable = { which = num_of_hyperlane_connections value > 2 } }
					event_target:starbase_system_star = { check_variable = { which = num_of_shipyard_modules value > 1 } }
				}	
				has_natural_wormhole = yes
				AND = {
					root = { has_technology = "tech_gateway_activation" }
					OR = { 
						has_megastructure = gateway_restored
						has_megastructure = gateway_final
					}	
				}					
			}	
		}		
	}				
}