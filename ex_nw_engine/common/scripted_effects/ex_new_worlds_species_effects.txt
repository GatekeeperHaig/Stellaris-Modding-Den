make_primitive_mammalian = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = MAM
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
	if = { limit = { any_pop = { is_presapient = yes } } }
		random_owned_pop = {
			limit = { is_presapient = yes }
			species = { save_event_target_as = mam_event_target }
			create_species = {
				name = this
				plural = this
				class = MAM
				portrait = random
				homeworld = this
				traits = this
				sapient = yes
				is_mod = no
				immortal = no
			}
		}	
		every_owned_pop = {
			limit = { is_same_species = event_target:mam_event_target }
			change_species = last_created
		}
	}
}	

make_primitive_avian = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = AVI
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
	if = { limit = { any_pop = { is_presapient = yes } } }
		random_owned_pop = {
			limit = { is_presapient = yes }
			species = { save_event_target_as = mam_event_target }
			create_species = {
				name = this
				plural = this
				class = AVI
				portrait = random
				homeworld = this
				traits = this
				sapient = yes
				is_mod = no
				immortal = no
			}
		}	
		every_owned_pop = {
			limit = { is_same_species = event_target:mam_event_target }
			change_species = last_created
		}
	}
}	

make_primitive_molluscoid = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = MOL
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
	if = { limit = { any_pop = { is_presapient = yes } } }
		random_owned_pop = {
			limit = { is_presapient = yes }
			species = { save_event_target_as = mam_event_target }
			create_species = {
				name = this
				plural = this
				class = MOL
				portrait = random
				homeworld = this
				traits = this
				sapient = yes
				is_mod = no
				immortal = no
			}
		}	
		every_owned_pop = {
			limit = { is_same_species = event_target:mam_event_target }
			change_species = last_created
		}
	}
}	

make_primitive_fungoid = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = FUN
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
	if = { limit = { any_pop = { is_presapient = yes } } }
		random_owned_pop = {
			limit = { is_presapient = yes }
			species = { save_event_target_as = mam_event_target }
			create_species = {
				name = this
				plural = this
				class = FUN
				portrait = random
				homeworld = this
				traits = this
				sapient = yes
				is_mod = no
				immortal = no
			}
		}	
		every_owned_pop = {
			limit = { is_same_species = event_target:mam_event_target }
			change_species = last_created
		}
	}
}	

make_primitive_arthrapoid = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = ART
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
	if = { limit = { any_pop = { is_presapient = yes } } }
		random_owned_pop = {
			limit = { is_presapient = yes }
			species = { save_event_target_as = mam_event_target }
			create_species = {
				name = this
				plural = this
				class = ART
				portrait = random
				homeworld = this
				traits = this
				sapient = yes
				is_mod = no
				immortal = no
			}
		}	
		every_owned_pop = {
			limit = { is_same_species = event_target:mam_event_target }
			change_species = last_created
		}
	}
}	

make_primitive_reptilian = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = REP
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
	if = { limit = { any_pop = { is_presapient = yes } } }
		random_owned_pop = {
			limit = { is_presapient = yes }
			species = { save_event_target_as = mam_event_target }
			create_species = {
				name = this
				plural = this
				class = REP
				portrait = random
				homeworld = this
				traits = this
				sapient = yes
				is_mod = no
				immortal = no
			}
		}	
		every_owned_pop = {
			limit = { is_same_species = event_target:mam_event_target }
			change_species = last_created
		}
	}
}	

make_primitive_humanoid = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = HUM
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
}	

make_primitive_plantoid = {
	if = {
		limit = { exists = owner owner = { is_country_type = primitive } } 
		create_species = {
			name = this
			plural = this
			class = PLANET
			portrait = random
			homeworld = this
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}
		every_owned_pop = { change_species = last_created }
		owner = { change_dominant_species = last_created }
	}	
}	