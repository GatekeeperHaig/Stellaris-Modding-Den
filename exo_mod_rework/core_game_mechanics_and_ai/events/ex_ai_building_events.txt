namespace = ex_ai_building_events

event = { #this event is fires on a monthly scope. 
	id = ex_ai_building_events.0
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		###denbug
		every_country = {
			limit = { is_country_type = default }
			add_minerals = 3500
			add_energy = 3500
			every_owned_planet = {
				every_tile = {
					limit = { has_blocker = yes}
					remove_blocker = yes
				}
			}
		}	
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}				
			}
			country_event = { id = ex_ai_building_events.1 }
		}
	}	
}	
		
country_event = { #this event is fired using the previous event on a monthly scope. 
	id = ex_ai_building_events.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = { 
		if = { 
			limit = { NOT = { has_country_flag = country_check_delay } }				
			set_variable = { which = energy_weight value = 0 }
			set_variable = { which = minerals_weight value = 0 }
			set_variable = { which = food_weight value = 0 }	
			check_country_deficities = yes
			check_country_income_level = yes
			set_timed_country_flag = { flag = country_check_delay days = 120 }
		}	
		every_owned_planet = {
			if = {
				limit = { 
					NOT = { has_planet_flag = deposits_converted } 					
					any_tile = { has_deposit = yes has_special_resource_deposit = no }					
				}	
				set_variable = { which = energy_tile_resource value = 0 }	
				set_variable = { which = minerals_tile_resource value = 0 }
				set_variable = { which = food_tile_resource value = 0 }
				set_variable = { which = unity_tile_resource value = 0 }
				set_variable = { which = society_research_tile_resource value = 0 }
				set_variable = { which = physics_research_tile_resource value = 0 }
				set_variable = { which = engineering_research_tile_resource value = 0 }
				every_tile = {
					limit = { has_deposit = yes has_special_resource_deposit = no }
					convert_deposits = yes					
				}	
				set_planet_flag = deposits_converted
			}				
			#limit = { 
			#	OR = {
			#		owner = { is_ai = yes }
			#		sector_controlled = yes
			#	}	
			#}
			if = {
				limit = { NOT = { has_planet_flag = planet_check_delay } }				
				if = { 
					limit = { NOT = { has_planet_flag = ex_ai_planet_variables_added } } 
					set_variable = { which = energy_mult value = 1 }
					set_variable = { which = minerals_mult value = 1 }
					set_variable = { which = food_mult value = 1 }
					set_variable = { which = unity_mult value = 1 }
					set_variable = { which = society_research_mult value = 1 }
					set_variable = { which = physics_research_mult value = 1 }
					set_variable = { which = engineering_research_mult value = 1 }		
					set_planet_flag = ex_ai_planet_variables_added
				}	
				if = { 
					limit = { NOT = { has_planet_flag = ex_ai_first_time_planet_check_performed }}
					check_planet_bonus_buildings = yes				
					if = {
						limit = { planets_enhanced_enabled = yes }	
						check_planet_bonus_buildings_pe = yes
					}	
					if = {
						limit = { alphamod_enabled = yes }	
						check_planet_bonus_buildings_am = yes
					}	
					set_planet_flag = ex_ai_planet_check_performed
					###remember to update this through other on actions!
				}	
				if = { 
					limit = { 
						num_modifiers > 0
						NOR = {
							AND = {
								num_modifiers = 1
								check_variable = { which = pm_num value = 1 }
							}
							AND = {
								num_modifiers = 2
								check_variable = { which = pm_num value = 2 }
							}						
							AND = {
								num_modifiers = 3
								check_variable = { which = pm_num value = 3 }
							}						
							AND = {
								num_modifiers = 4
								check_variable = { which = pm_num value = 4 }
							}						
							AND = {
								num_modifiers = 5
								check_variable = { which = pm_num value = 5 }
							}						
							AND = {
								num_modifiers = 6
								check_variable = { which = pm_num value = 6 }
							}						
							AND = {
								num_modifiers = 7
								check_variable = { which = pm_num value = 7 }
							}						
							AND = {
								num_modifiers = 8
								check_variable = { which = pm_num value = 8 }
							}						
							AND = {
								num_modifiers = 9
								check_variable = { which = pm_num value = 9 }
							}						
							AND = {
								num_modifiers = 10
								check_variable = { which = pm_num value = 10 }
							}						
						}
					}
					switch = {
						trigger = num_modifiers
						1 = { set_variable = { which = pm_num value = 1 } }
						2 = { set_variable = { which = pm_num value = 2 } }
						3 = { set_variable = { which = pm_num value = 3 } }
						4 = { set_variable = { which = pm_num value = 4 } }
						5 = { set_variable = { which = pm_num value = 5 } }
						6 = { set_variable = { which = pm_num value = 6 } }
						7 = { set_variable = { which = pm_num value = 7 } }
						8 = { set_variable = { which = pm_num value = 8 } }
						9 = { set_variable = { which = pm_num value = 9 } }
						10 = { set_variable = { which = pm_num value = 10 } }
					}
					check_planet_modifiers = yes	
					if = {
						limit = { planets_enhanced_enabled = yes }
						check_planet_modifiers_pe = yes
					}	
					if = {
						limit = { guillis_planet_modifiers_enabled = yes }		
						check_planet_modifiers_gpm = yes
					}
					if = {
						limit = { planetary_diversity_enabled = yes }
						check_planet_modifiers_pd = yes
					}		
					if = {
						limit = { alphamod_enabled = yes }
						check_planet_modifiers_am = yes		
					}	
				}	
				set_timed_planet_flag = { flag = planet_check_delay days = 360 }	
			}
			planet_event = { id = ex_ai_building_events.2 }	
			planet_event = { id = ex_ai_building_events.3 }
		}
	}
}

planet_event = { #this event is fired using the previous event on a monthly scope. 
	id = ex_ai_building_events.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				owner = {
					check_variable = { which = energy_weight value < 1 }
					check_variable = { which = minerals_weight value < 1 }
					check_variable = { which = food_weight value < 1 }												
				}
			}
			while = {
				limit = { 
					any_tile = { 
						has_blocker = no
						has_ai_null_deposit = no 
						has_special_resource_deposit = no							
					}
				}
				set_variable = { which = energy_weight value = 0 }
				set_variable = { which = minerals_weight value = 0 }
				set_variable = { which = food_weight value = 0 }
				set_variable = { which = unity_weight value = 0 }
				set_variable = { which = society_research_weight value = 0 }
				set_variable = { which = physics_research_weight value = 0 }
				set_variable = { which = engineering_research_weight value = 0 }
				random_tile = {
					limit = { 
						has_blocker = no
						has_ai_null_deposit = no
						has_special_resource_deposit = no							
					}
					set_tile_building_weight = yes
				}
			}
			else = {
				every_tile = {
					limit = { has_deposit = yes has_special_resource_deposit = no }
					convert_deposits = yes
				}					
				while = {
					limit = { 
						any_tile = { 
							has_blocker = no
							has_ai_null_deposit = no 
							has_special_resource_deposit = no
						}
					}
					set_variable = { which = energy_weight value = owner }
					set_variable = { which = minerals_weight value = owner }
					set_variable = { which = food_weight value = owner }
					set_variable = { which = unity_weight value = 0 }
					set_variable = { which = society_research_weight value = 0 }
					set_variable = { which = physics_research_weight value = 0 }
					set_variable = { which = engineering_research_weight value = 0 }
					random_tile = {
						limit = { 
							has_blocker = no
							has_ai_null_deposit = no
							has_special_resource_deposit = no
						}
						set_tile_building_weight = yes
					}
				}	
			}	
		}			 					
	}
}
				
#this event fires from the previous event
#it places planet flags that are used by specific planet unique buildings

planet_event = {  
	id = ex_ai_building_events.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { #military buildings
			limit = { 
				years_passed > 25
				NOR = { 
					has_planet_flag = fortify_planet
					AND = {
						owner = { is_at_war = no }
						count_tile = {
							limit = {
								OR = {
									has_building = building_stronghold
									has_building = building_fortress
								}
							}
							count > 2
						}	
					}	
				}
				OR = {
					unrest > 50
					any_country = {
						is_at_war_with = root.owner
						any_owned_planet = {
							is_colony = yes
							distance = { source = root min_distance = 70 max_distance = 100 }
						}
					}	
					AND = {
						OR = {
							has_capital_1 = yes
							has_capital_2 = yes
						}	
						NOR = {
							has_building = building_stronghold
							has_building = building_fortress	
						}
					}	
					AND = {
						has_capital_3 = yes
						count_tile = {
							limit = {
								OR = {
									has_building = building_stronghold
									has_building = building_fortress
								}
							}
							count < 2
						}	
					}								
				}
			}
			set_timed_planet_flag = { flag = fortify_planet days = 180 }
		}
		if = { #pop growth buildings
			limit = { 
				NOT = { has_planet_flag = build_pop_growth_building }
				owner = {
					OR = { 
						has_technology = "tech_frontier_health"
						has_technology = "tech_frontier_hospital"
					}
				}
				NOR = { 
					has_building = building_clinic
					has_building = building_hospital							
					has_building = building_spare_parts_depot
					has_building = building_unit_assembly_plant							
				}	
				free_pop_tiles > 2
				OR = {
					any_owned_pop = {
						is_robot_pop = no								
						has_population_control = no
					}								
					AND = {
						owner = { 
							OR = {
								has_authority = auth_machine_intelligence
								has_country_flag = synthethic_age
							}
							balance > 250
						}	
						any_owned_pop = { is_robot_pop = yes }
					}
				}
			}
			set_timed_planet_flag = { flag = build_pop_growth_building days = 180 }
		}
		if = {
			limit = {
				NOT = { has_planet_flag = build_slave_processing }
				owner = { 
					has_technology = "tech_neural_implants"
					OR = {
						AND = {
							overhauled_building_content_enabled = no
							is_machine_empire = no
						}	
						AND = {
							overhauled_building_content_enabled = yes
							is_gestalt_consciousness = no
						}	
					}
					has_policy_flag = slavery_allowed
				}
				any_owned_pop = { is_enslaved = yes }
				OR = {
					count_pops = {
						limit = { 
							OR = {
								has_slavery_type = { country = owner type = slavery_military }
								has_slavery_type = { country = owner type = slavery_normal }
							}	
						}
						count > 2
					}	
					unrest > 30
				}	
			}	
			set_timed_planet_flag = { flag = build_slave_processing days = 180 }
		}								
	}					
}