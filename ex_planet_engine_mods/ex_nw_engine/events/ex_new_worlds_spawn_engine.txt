###### Written by ExNihil 
#
#	This mod uses a configurable spawn engine. If you'd like to integrate a version of this engine please join our discord server The Stellaris Modding Den
#	Server invite: https://discord.gg/ZhvBXhh

namespace = ex_spawn_engine_0

event = { #this event triggers on game start and monthly pulse
	id = ex_spawn_engine_0.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	#This event fires only once.
		
	immediate = {	
		set_global_flag = new_worlds_active #this sets a global flag for this mod, to be used by other mods and the engine
		every_planet = { 
			if = { 
				limit = { is_star = yes }		
				if = { 
					limit = { solar_system = { NOT = { any_planet = { NOT = { is_same_value = this } has_planet_flag = system_star_1 } } } }
					set_planet_flag = system_star_1				
					else = {
						if = { 
							limit = { solar_system = { NOT = { any_planet = { NOT = { is_same_value = this } has_planet_flag = system_star_2 } } } }
							set_planet_flag = system_star_2						
							else = {
								if = { 
									limit = { solar_system = { NOT = { any_planet = { NOT = { is_same_value = this } has_planet_flag = system_star_3 } } } }
									set_planet_flag = system_star_3						
								}
							}
						}
					}				
				}	
				#the effect below is currently not in use. It can be enabled at any time by uncommenting it. 	
				#	ex_new_worlds_adjust_star_size = yes 
			}		
			if = { #this adds a unique flag to gas giant moons, which is checked through a scripted trigger (see common/scripted_triggers/ex_engine_triggers.txt )
				limit = {
					is_planet_class = pc_gas_giant
					has_moon = yes
				}
				every_moon = { set_planet_flag = gas_giant_moon }
			}	
			if = {
				limit = {	
					is_star = no 
					solar_system = { 
						starting_system = no
						NOR = {
							has_star_flag = sol_system
							has_star_flag = sol
							has_star_flag = deneb_system
							has_star_flag = custom_system
							has_star_flag = floating_system
							has_star_flag = crystal_system
						}					
					}
					is_capital = no
					is_homeworld = no
				}			
				# these events occur one after the other. 
				planet_event = { id = ex_spawn_engine_0.1 }
				planet_event = { id = ex_spawn_engine_0.2 }			
				planet_event = { id = ex_spawn_engine_0.3 days = 1 }			
			}	
		}
	}
}



planet_event = { 
	id = ex_spawn_engine_0.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { 
				is_vanilla_habitable_planet = yes
				any_tile = { has_pop = yes }
				any_pop = { has_regular_vanilla_habitability_trait = yes }
				OR = {					
					any_pop = { is_presapient_pop = yes }
					AND = {
						exists = owner
						OR = {
							owner = { is_country_type = primitive }
							AND = {
								is_colony = yes				
								any_pop = {
									has_regular_vanilla_habitability_trait = yes
									OR = {
										is_subspecies = yes
										NOT = { species = { is_same_value = owner.species }	}																		
									}										
								}	
							}	
						}	
					}
				}	
			}
			every_owned_pop = {
				limit = { has_regular_vanilla_habitability_trait = yes }
				check_habitability_trait_correspondence = yes
			}	
		}				
		if = {
			limit = { is_colonizable = no }
			ex_new_worlds_uninhabitable_planets_spawn_table = yes
			ex_new_worlds_adjust_uninhabitable_planet_size = yes
			if = {
				limit = {
					OR = {
						is_planet_class = pc_gas_giant
						is_planet_class = pc_ice_giant
					}	
					has_moon = yes
					any_moon = { NOT = { has_planet_flag = gas_giant_moon } }
				}
				every_moon = { 
					limit = { NOT = { has_planet_flag = gas_giant_moon } }
					set_planet_flag = gas_giant_moon
				}
			}	
			if = {
				limit = { has_regular_vanilla_planet_modifier = yes	}
				remove_regular_planet_modifiers = yes 
				while = {
					limit = { check_variable = { which = "pm_points" value > 0 } }
					planet_modifier_spawn_table = yes
					change_variable = { which = "pm_points" value = -1 }					
				}		
			}				
			else = { 
				ex_new_worlds_habitable_planets_spawn_table = yes
				ex_new_worlds_adjust_inhabitable_planet_size = yes				
				if = {
					limit = { has_regular_vanilla_planet_modifier = yes	}
					remove_regular_planet_modifiers = yes 
					while = {
						limit = { check_variable = { which = "pm_points" value > 0 } }
						planet_modifier_spawn_table = yes
						change_variable = { which = "pm_points" value = -1 }					
					}		
				}					
			}	
		}		 				
	}
}

planet_event = { 
	id = ex_spawn_engine_0.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {					
		if = {
			limit = { is_colonizable = no }	
			reroll_deposits = yes			
			else = {			
				if = {
					limit = { 
						is_colonizable = yes
						is_colony = no 
					}	
					reroll_deposits = yes
					else = {
						every_tile = { 
							limit = { 
								is_orbital_tile = no 
								has_deposit = yes 
								has_regular_vanilla_deposit = yes 
								has_building = no
							}
							clear_deposits = yes
							ex_new_worlds_planetary_resource_spawn_table = yes			
						}
					}	
				}
			}				
			if = {
				limit = { NOT = { any_tile = { has_blocker = yes } } }
				every_tile = {
					limit = { 
						is_orbital_tile = no 
						has_building = no 
						has_pop = no
					}
					random_list = { 
						40 = { ex_new_worlds_tile_blocker_spawn_table = yes } 
						60 = { } 
					}
				}
				else = {
					every_tile = {
						limit = { has_regular_vanilla_blocker = yes }
						remove_blocker = yes
						ex_new_worlds_tile_blocker_spawn_table = yes
					}				
				}					
			}	
			if = {
				limit = {
					OR = {
						planetary_diversity_habitable_planet = yes
						new_worlds_habitable_planet = yes
					}
				}				
				if = {
					limit = {
						OR = {
							any_tile = { has_pop = yes pop = { is_presapient_pop = yes } }
							AND = {
								has_owner = yes
								OR = {
									AND = {
										is_colony = yes				
										any_pop = {
											has_regular_vanilla_habitability_trait = yes
											OR = {
												NOT = { species = { is_same_value = owner.species } }
												is_subspecies = yes
											}
										}										
									}	
									owner = { is_country_type = primitive }
								}	
							}
						}	
						any_tile = {
							has_pop = yes
							pop = { has_regular_vanilla_habitability_trait = yes }
						}	
					}
					ex_change_habitability_trait_correspondence = yes
				}								
				if = { #change presapient/primitive species
					limit = { 
						any_tile = { has_pop = yes }
						OR = {
							any_pop = { is_presapient_pop = yes } 
							AND = {
								exists = owner
								owner = { is_country_type = primitive }
							}
						}	
					}
					random_pop = {
						limit = {
							OR = {
								is_presapient_pop = yes 
								AND = {
									exists = owner
									owner = { is_country_type = primitive }
								}	
							}
						}	
						ex_new_worlds_species_change_table = yes
					}											
				}					
			}	
		}
	}
}

planet_event = {
	id = ex_spawn_engine_0.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_colonizable = yes
		is_colony = no
		OR = {
			AND = {
				planet_size > 19
				count_tile = {					
					limit = { has_blocker = yes }					
					count < 6
				}
			}
			AND = {
				planet_size > 15
				planet_size < 19
				count_tile = {					
					limit = { has_blocker = yes }
					count < 5 
				}
			}	
			AND = {
				planet_size > 10
				planet_size < 16
				count_tile = {					
					limit = { has_blocker = yes }
					count < 4
				}
			}				
			AND = {
				planet_size < 11
				count_tile = {					
					limit = { has_blocker = yes }
					count < 3
				}
			}							
		}	
	}	
	
	immediate = {		
		while = {
			limit = { 
				OR = {
					AND = {
						planet_size > 19
						count_tile = {					
							limit = { has_blocker = yes }					
							count < 6
						}
					}
					AND = {
						planet_size > 15
						planet_size < 19
						count_tile = {					
							limit = { has_blocker = yes }
							count < 5 
						}
					}	
					AND = {
						planet_size > 10
						planet_size < 16
						count_tile = {					
							limit = { has_blocker = yes }
							count < 4
						}
					}				
					AND = {
						planet_size < 11
						count_tile = {					
							limit = { has_blocker = yes }
							count < 3
						}
					}			
				}					
			}	
			random_tile = {
				limit = { is_orbital_tile = no has_building = no has_pop = no }
				ex_new_worlds_tile_blocker_spawn_table = yes
			}
		}		
	}	
}
