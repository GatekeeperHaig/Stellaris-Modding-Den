### do not change this file, it is integral to the operation of Planets Enhanced

conditions_sr_ex_unique_1 = {
	is_unique_sr_enabled = yes
	has_owner = no
	is_colony = no
	is_colonizable = yes
	is_homeworld = no
	is_capital = no
	has_pop = no
	has_building = no
	is_terraformed = no
	solar_system = { #use this check to find unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}	
}

conditions_sr_ex_unique_2 = {
	is_unique_sr_enabled = yes
	has_owner = no
	is_colony = no
	is_colonizable = yes
	is_homeworld = no
	is_capital = no
	has_pop = no
	has_building = no
	is_terraformed = no
	solar_system = { #use this check to find unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}	
}

conditions_sr_ex_unique_3 = {
	is_unique_sr_enabled = yes
	has_owner = no
	is_colony = no
	is_colonizable = yes
	is_homeworld = no
	is_capital = no
	has_pop = no
	has_building = no
	is_terraformed = no
	solar_system = { #use this check to find unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}	
}

conditions_sr_ex_unique_4 = {
	is_unique_sr_enabled = yes
	has_owner = no
	is_colony = no
	is_colonizable = yes
	is_homeworld = no
	is_capital = no
	has_pop = no
	has_building = no
	is_terraformed = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}	
}

conditions_sr_ex_unique_5 = {
	is_unique_sr_enabled = yes
	has_owner = no
	is_colony = no
	is_colonizable = yes
	is_homeworld = no
	is_capital = no
	has_pop = no
	has_building = no
	is_terraformed = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}	
}

conditions_sr_ex_unique_6 = {
	is_unique_sr_enabled = yes
	has_owner = no
	is_colony = no
	is_colonizable = yes
	is_homeworld = no
	is_capital = no
	has_pop = no
	has_building = no
	is_terraformed = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}	
}

conditions_sr_ex_planetary_1 = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}	
	
conditions_sr_ex_planetary_2 = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

conditions_sr_ex_planetary_3 = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

conditions_sr_ex_planetary_4 = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

conditions_sr_ex_planetary_5 = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

conditions_sr_archeological_remains = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}


conditions_sr_ex_satramene = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

conditions_sr_ex_engos = {	
	is_planetary_sr_enabled = yes	
	is_colonizable = yes
	is_capital = no
	is_homeworld = no	
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

conditions_sr_ex_pitharan = {	
	is_planetary_sr_enabled = yes
	is_colonizable = yes
	is_capital = no
	is_homeworld = no	
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}		
}

## orbital resource
#  these resources are restricted to particular planet types only.

conditions_sr_ex_1 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	OR = {
		check_variable = { which = "planet_group_id" value = 13.1 } restricted to molten
		check_variable = { which = "planet_group_id" value = 21.1 } restricted to asteroid
	}		
}

conditions_sr_ex_2 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	check_variable = { which = "planet_group_id" value = 13.1 } restricted to molten

}

conditions_sr_ex_3 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	OR = {	
		check_variable = { which = "planet_group_id" value = 14.1 } restricted to toxic
		check_variable = { which = "planet_group_id" value = 21.1 } restricted to gas giant
	}		
}

conditions_sr_ex_4 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	check_variable = { which = "planet_group_id" value = 21.1 } restricted to gas giant
}

conditions_sr_ex_5 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	OR = {	
		check_variable = { which = "planet_group_id" value = 12.1 } restricted to frozen
		check_variable = { which = "planet_group_id" value = 15.1 } restricted to asteroid
	}	
}

conditions_sr_ex_6 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	OR = {	
		check_variable = { which = "planet_group_id" value = 14.1 } restricted to toxic
		check_variable = { which = "planet_group_id" value = 11.1 } restricted to gas giant
	}
}

conditions_sr_ex_7 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	AND = { #restricted to collapsed stars, please change these values i you add planets
		check_variable = { which = "planet_group_id" value > 35 } #if you use "><" you need two checks, and you are limiting to a planet range
		check_variable = { which = "planet_group_id" value < 36 } #if you use "><" you need two checks, as here, and you are limiting to a planet range
	}		
}

conditions_sr_ex_8 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	OR = {	
		check_variable = { which = "planet_group_id" value = 14.1 } restricted to toxic
		check_variable = { which = "planet_group_id" value = 11.1 } restricted to barren-cold
	}
}

conditions_sr_ex_ = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	is_colonizable = no #this is meant to prevent spawn in mods that allow asteroid colonization.
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	}		
	OR = {
		is_asteroid = yes #to ensure compatibility with mods that add new asteroid types
		check_variable = { which = "planet_group_id" value = 15.1 } restricted to asteroids
	}	
}

conditions_sr_ex_10 = {	
	is_orbital_sr_enabled = yes
	is_colonizable = no
	starting_system = no
	solar_system = { #use this check to find/restrict unique systems, e.g. leviathan systems, custom homeworlds etc. 
		starting_system = no
		NOR = {
			has_star_flag = empire_home_system
			has_star_flag = sol_system
			has_star_flag = deneb_system		
		}
	}
	NOR = { #this makes sure that no large mineral/energy/research deposits get replaced.
		has_deposit = "d_immense_mineral_deposit"
		has_deposit = "d_immense_energy_deposit"
		has_deposit = "d_immense_society_deposit"
		has_deposit = "d_immense_physics_deposit"
		has_deposit = "d_immense_engineering_deposit"	
	}
	AND = { #restricted to collapsed stars, please change these values i you add planets
		check_variable = { which = "planet_group_id" value > 35 } #if you use "><" you need two checks, and you are limiting to a planet range
		check_variable = { which = "planet_group_id" value < 36 } #if you use "><" you need two checks, as here, and you are limiting to a planet range
	}		
}