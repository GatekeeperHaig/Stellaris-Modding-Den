namespace = atw_engine

event = {
	id = atw_engine.00
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = { 
		set_global_flag = all_these_worlds
		set_global_flag = galactic_diversity
		#set_global_flag = increased_habitable_moons
		every_planet = { 
			if = {
				limit = { is_gas_giant = yes has_moon = yes }
				every_moon = { set_planet_flag = "gas_giant_moon" }
			}
			if = { 			
				limit = { is_asteroid = yes }
				new_worlds_adjust_asteroids_size = yes
			}			
			spawn_temperature_zone_modifier = yes # Also clears vanilla modifiers
			#correct_prespawned_habitables = yes # This will convert vanilla habitables based on hydrosphere and the star's temperature zone
		}
		
		## Convert unintended random habitables to an uninhabitable/nuked class
		every_planet = {
			if = {
				limit = {
					AND = {
						OR = {
							is_colonizable = yes
							exists = owner
						}
						NOT = { has_planet_flag = "planet_converted" }
					}
				}
								
				if = { 
					limit = { NOT = { is_untouchable_planet = yes } }
					random_list = {
						1 = {
							change_pc = pc_barren
							reroll_planet_modifiers	= yes
						}
						1 = {
							change_pc = pc_toxic
							reroll_planet_modifiers	= yes
						}
						#0 = {
						#	change_pc = pc_nuked
						#	#reroll_planet_modifiers	= yes
						#}
					}
				}
				if = { 
					limit = { is_planet_class = pc_nuked NOT = { has_planet_flag = "planet_converted" } }
					remove_vanilla_planet_modifiers = yes
					roll_pc_nuked = yes
					#roll_extra_planet_modifiers = yes
				}				
			}			
		}
		
		## Convert vanilla uninhabitables in edited systems to a placeholder class, for the stage 1 of the mod's planet conversion process
		
		every_planet = {
			if = {
				limit = { 
					solar_system = { has_star_flag = "atw_edited" }
					uninhabitable_regular_planet = yes
				}
				random_list = {
					0 = {
						change_pc = ph_dwarf
						modifier  = { add = 1  planet_size < 12 }
					}
					0 = {
						change_pc = ph_terran
						modifier  = { add = 1  planet_size > 11 planet_size < 24 }
					}
					0 = {
						change_pc = ph_super_terran
						modifier  = { add = 1  planet_size > 23 }
					}
				}
			}
			if = {
				limit = { 
					solar_system = { has_star_flag = "atw_edited" }
					is_planet_class = pc_gas_giant
				}
				random_list = {
					0 = {
						change_pc = ph_neptunian
						modifier  = { add = 1  planet_size < 28 }
					}
					0 = {
						change_pc = ph_jovian
						modifier  = { add = 1  planet_size > 27 planet_size < 40 }
					}
					0 = {
						change_pc = ph_super_jovian
						modifier  = { add = 1  planet_size > 39 }
					}
				}
			}
		}
		
		every_planet = {
			if = {
				limit = { 
					solar_system = { has_star_flag = "primitive_system" has_star_flag = "atw_edited" }
				}
				planet_event = { id = atw_engine.011 } # Generate primitives after converting their homeworld targets to proper classes
			}			
		}
		
		every_planet = {
			if = {
				limit = { 
					solar_system = { has_star_flag = "empire_home_system" has_star_flag = "atw_edited" }
				}
				planet_event = { id = atw_engine.012 } # Convert Empire homeworld class
			}			
		}
		
		every_planet = {
			planet_event = { id = atw_engine.13 days = 1 } # Eliminate a random number of planets from each non capital star system, affected by player choice
		}
		
		every_planet = {
			planet_event = { id = atw_engine.02 days = 1 } # Convert vanilla habitable classes - Stage 1, habitables
		}
		
		every_planet = {
			planet_event = { id = atw_engine.03 days = 1 } # Convert placeholder classes - Stage 2, low habitables
		}
		
		every_planet = {
			planet_event = { id = atw_engine.04 days = 2 } # Convert placeholder classes - Stage 3, uninhabitables
		}
		
	}
}

planet_event = {
	id = atw_engine.011 # GENERATE PRIMITIVES
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		if = {
			limit = { has_planet_flag = "eco_temp_primitives" }
			generate_primitives_on_temperate_planet = yes
		}
		if = {
			limit = { has_planet_flag = "eco_cold_primitives" }
			generate_primitives_on_cold_planet = yes
		}
		if = {
			limit = { has_planet_flag = "eco_hot_primitives" }
			generate_primitives_on_hot_planet = yes
		}
	}
}

planet_event = {
	id = atw_engine.012 # CONVERT EMPIRE HOMEWORLD
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		if = {
			limit = { is_homeworld = yes has_planet_flag = "temperate_eco_zone" }
			convert_homeworld_temperate = yes
		}
		if = {
			limit = { is_homeworld = yes has_planet_flag = "cool_eco_zone" }
			convert_homeworld_cold = yes
		}
		if = {
			limit = { is_homeworld = yes has_planet_flag = "warm_eco_zone" }
			convert_homeworld_hot = yes
		}
	}
}

planet_event = {
	id = atw_engine.013 # ERASE RANDOM WORLDS
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		if = {
			limit = { has_planet_flag = "erasable" }
			if = {
				limit = { is_moon = yes }
				random_list = {
					10 = {
						remove_planet = yes
						modifier = { factor = 0.10 has_global_flag = "very_high_expectations" }
						modifier = { factor = 0.50 has_global_flag = "high_expectations" }
						modifier = { factor = 2.00 has_global_flag = "low_expectations" }
						modifier = { factor = 3.00 has_global_flag = "very_low_expectations" }
					}
					10 = {
						#Do nothing
						modifier = { factor = 3.00 has_global_flag = "very_high_expectations" }
						modifier = { factor = 1.50 has_global_flag = "high_expectations" }
						modifier = { factor = 0.35 has_global_flag = "low_expectations" }
						modifier = { factor = 0.01 has_global_flag = "very_low_expectations" }
					}
				}
			}
			if = {
				limit = { is_moon = no is_asteroid = no }
				if = {
					limit = { has_moon = yes }
					random_list = {
						2 = {
							every_moon = { remove_planet = yes }
							if = {
								limit = { NOT = { has_moon = yes } }
								remove_planet = yes
							}
							modifier = { factor = 0.05 has_global_flag = "very_high_expectations" }
							modifier = { factor = 0.25 has_global_flag = "high_expectations" }
							modifier = { factor = 1.25 has_global_flag = "low_expectations" }
							modifier = { factor = 2.00 has_global_flag = "very_low_expectations" }
						}
						12 = {
							#Do nothing
							modifier = { factor = 2.00 has_global_flag = "very_high_expectations" }
							modifier = { factor = 1.25 has_global_flag = "high_expectations" }
							modifier = { factor = 0.25 has_global_flag = "low_expectations" }
							modifier = { factor = 0.01 has_global_flag = "very_low_expectations" }
						}
					}
				}
				if = {
					limit = { has_moon = no }
					random_list = {
						8 = {
							remove_planet = yes
							modifier = { factor = 0.05 has_global_flag = "very_high_expectations" }
							modifier = { factor = 0.25 has_global_flag = "high_expectations" }
							modifier = { factor = 1.25 has_global_flag = "low_expectations" }
							modifier = { factor = 2.00 has_global_flag = "very_low_expectations" }
						}
						12 = {
							#Do nothing
							modifier = { factor = 2.00 has_global_flag = "very_high_expectations" }
							modifier = { factor = 1.25 has_global_flag = "high_expectations" }
							modifier = { factor = 0.25 has_global_flag = "low_expectations" }
							modifier = { factor = 0.01 has_global_flag = "very_low_expectations" }
						}
					}
				}
			}
			if = {
				limit = { is_asteroid = yes }
				random_list = {
					10 = {
						remove_planet = yes
						modifier = { factor = 0.50 has_global_flag = "very_high_expectations" }
						modifier = { factor = 0.75 has_global_flag = "high_expectations" }
						modifier = { factor = 1.25 has_global_flag = "low_expectations" }
						modifier = { factor = 1.50 has_global_flag = "very_low_expectations" }
					}
					10 = {
						#Do nothing
						modifier = { factor = 1.50 has_global_flag = "very_high_expectations" }
						modifier = { factor = 1.25 has_global_flag = "high_expectations" }
						modifier = { factor = 0.75 has_global_flag = "low_expectations" }
						modifier = { factor = 0.50 has_global_flag = "very_low_expectations" }
					}
				}
			}
		}
		
	}
}

planet_event = {
	id = atw_engine.02 # CONVERT VANILLA HABITABLES
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		if = {
			limit = { 
				is_vanilla_habitable_planet = yes
				NOT = { is_homeworld = yes }
				NOT = { has_planet_flag = "planet_converted" }
				OR = {
					has_planet_flag = "torrid_zone"
					has_planet_flag = "hot_zone"
					has_planet_flag = "warm_eco_zone"
					has_planet_flag = "temperate_eco_zone"
					has_planet_flag = "cool_eco_zone"
					has_planet_flag = "cold_zone"
					has_planet_flag = "frigid_zone"
				}
			}
			convert_vanilla_habitable = yes
		}
	}
}

planet_event = {
	id = atw_engine.03 # CONVERT A SMALL AMMOUNT OF PLACEHOLDERS INTO LOW HABITABILITY CLASSES
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		
	}
}

planet_event = {
	id = atw_engine.04 # CONVERT THE REMAINING PLACEHOLDERS INTO UNINHABITABLES
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		
	}
}

event = {
    id = atw_engine.99 # CALL PROMPT FOR PLANET ODDS
	title = atw_engine.99.name
	desc = atw_engine.99.desc
	picture = GFX_evt_star_chart
	show_sound = event_default
	location = root

	is_triggered_only = yes

	trigger = {
		owner = { is_ai = no }
	}
	
	option = {
		name = atw_engine.99.a
        custom_tooltip = atw_engine.99.a.tooltip
		hidden_effect = {
			set_global_flag = very_high_expectations
		}
		
		
	}
	
	option = {
		name = atw_engine.99.b
        custom_tooltip = atw_engine.99.b.tooltip
		hidden_effect = {
			set_global_flag = high_expectations
		}
	}
	
	option = {
		name = atw_engine.99.c
        custom_tooltip = atw_engine.99.c.tooltip
		hidden_effect = {
			set_global_flag = low_expectations
		}
	}
	
	option = {
		name = atw_engine.99.d
        custom_tooltip = atw_engine.99.d.tooltip
		hidden_effect = {
			set_global_flag = very_low_expectations
		}
	}
	
	option = {
		name = atw_engine.99.e
        custom_tooltip = atw_engine.99.e.tooltip
		hidden_effect = {
			#no answer = do nothing, use default odds
		}
	}

	
}
