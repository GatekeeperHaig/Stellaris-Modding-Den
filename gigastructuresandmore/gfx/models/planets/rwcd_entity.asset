###############
#Reference
###############
#Game entities:
#solar_ring1_entity - equator ring
#solar_ring2_entity - equator and polar rings
#solar_ring3_entity - equator and 2 polar rings
#solar_ring4_entity - equator, polar and 2 parallel rings between
#solar_ring4grid_entity - equator, polar and 2 perpendicular rings
#solar_ring5_entity - equator, 2 polar and 2 perpendicular rings

#planetary_arc1_entity - horizontal arc
#planetary_arc2_entity - horizontal arc 90 deg rotation
#planetary_arc3_entity - horizontal arc 180 deg rotation
#planetary_arc4_entity - horizontal arc 270 deg rotation

#planetary_ring1_entity - equator ring
#planetary_ring2_entity - equator and polar rings
#planetary_ring3_entity - equator and 2 polar rings
#planetary_ring4_entity - equator, polar and 2 parallel rings between
#planetary_ring4grid_entity - equator, polar and 2 perpendicular rings
#planetary_ring5_entity - equator, 2 polar and 2 perpendicular rings


######################################################################
#Component Entities - used to build game entities
######################################################################

#custom ringworld entity allows for quick changes without effecting fallen empires

#######Credits go to Djohaal for putting those together#######
@gasignitor_scale = 32
entity = {
	name = "gasignitor_penta_rays_entity"
	pdxmesh = "penta_rays_mesh"
	
	scale = 8
	
	game_data = {
		uv_animation_speed   = 0.02
		uv_animation_direction  = { 0.0 3.5 }
	}
	
		meshsettings = {
			name = "polySurfaceShape7"
			index = 0
			texture_diffuse = "dyson_rays.dds"
			texture_normal = "nonormal.dds"
			texture_specular = "nospec.dds"
			shader = "PdxMeshAlphaAdditiveAnimateUV"
		}
}

entity = {
	name = "gasignitor_hexa_rays_entity"
	pdxmesh = "hexa_rays_mesh"
		
	scale = 8
	
	game_data = {
		uv_animation_speed   = 0.1
		uv_animation_direction  = { 1.0 1.0 }
	}
	
		meshsettings = {
			name = "polySurface5Shape"
			index = 0
			texture_diffuse = "dyson_rays.dds"
			texture_normal = "nonormal.dds"
			texture_specular = "nospec.dds"
			shader = "PdxMeshAlphaAdditiveAnimateUV"
		}
}

###### Main Model 

entity = {
	name = "gasignitor_part_1_entity"
	pdxmesh = "dyson_sphere_part_1_mesh"
		scale = @gasignitor_scale

	default_state = "idle"
	state = { name = "idle" state_time = 10
		start_event = { trigger_once = yes sound = { soundeffect = "dyson_sphere_bass_hum_partial" } }
	}
	
		meshsettings = {
			name = "pCylinder26|pCylinderShape2"
			index = 0
			texture_diffuse = "gasignitor_diffuse.dds"
			texture_normal = "gasignitor_normal.dds"
			texture_specular = "gasignitor_specular.dds"
			shader = "PdxMeshShip"
		}

			 game_data = {
        custom_texture = "gfx/models/ships/megastructures/dyson_sphere/dyson_sphere_01_construction_fadein.dds"
    }
}

entity = {
	name = "gasignitor_part_2_entity"
	pdxmesh = "dyson_sphere_part_4_mesh"
	scale = @gasignitor_scale
	
	default_state = "idle"
	state = { name = "idle" state_time = 10
		event = { time = 0 particle = "dyson_sphere_electricity_effect" keep_particle = yes trigger_once = yes }
		start_event = { trigger_once = yes sound = { soundeffect = "dyson_sphere_bass_hum" } }
	}
	
		meshsettings = {
			name = "pCylinder15|pCylinderShape1"
			index = 0
			texture_diffuse = "gasignitor_diffuse.dds"
			texture_normal = "gasignitor_normal.dds"
			texture_specular = "gasignitor_specular.dds"
			shader = "PdxMeshShip"
		}
			
			 game_data = {
        custom_texture = "gfx/models/ships/megastructures/dyson_sphere/dyson_sphere_01_construction_fadein.dds"
    }
}


entity = { 
	name = "gasignitor_beams"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
		event = { time = 0.0 node = "polar_effect_2" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes }
	}
	
	scale = 20
	
	game_data = {
		uv_animation_speed   = -0.05
		uv_animation_direction  = { 0.4 0.4 }
	}	
}

entity = { 
	name = "gasignitor_accretion"
	pdxmesh = "black_hole_rings_mesh"
	
	default_state = "idle"
#	state = { name = "idle" state_time = 5
#		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
#		event = { time = 0.0 node = "polar_effect_2" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes }
#	}
	
	scale = 9
	
	game_data = {
		uv_animation_speed   = -0.05
		uv_animation_direction  = { 0.4 0.4 }
	}	
}

entity = { 
	name = "gasignitor_animation_entity"
	pdxmesh = "black_hole_grav_animation_mesh"
	
	default_state = "idle"
		state = { name = "idle" state_time = 5
		event = { time = 0 particle = "black_hole_particle" trigger_once = yes keep_particle = yes }
		event = { trigger_once = yes sound = { soundeffect = "blackhole_hum_idle" } }
	}
	
	scale = 8
	
	game_data = {
		uv_animation_speed   = 0.15
		uv_animation_direction  = { 0.0 0.4 }
	}	
}

############ Phases

entity = {
	name = "gasignitor_phase_01_entity"
	locator = { name = "root"	position = { 0 	0  0 } }	
	
	attach = { "root" = "gasignitor_part_2_entity" }

	scale = 0.9
	cull_radius = 500
}

entity = {
	name = "gasignitor_phase_02_entity"
	locator = { name = "root"	position = { 0 	0  0 } }	
	locator = { name = "part1" position = { 0 175 0 } rotation = { 0 0 0 } }
	locator = { name = "part2" position = { 0 -175 0 } rotation = { 0 180 0 } }
	locator = { name = "part3" position = { 0 165 0 } rotation = { 17 0 0 } }
	locator = { name = "part4" position = { 0 -165 0 } rotation = { -17 180 0 } }
	
	attach = { "root" = "gasignitor_part_1_entity" }
	attach = { "root" = "gasignitor_part_2_entity" }
	attach = { "part1" = "gasignitor_part_01_entity" }
	attach = { "part2" = "gasignitor_part_01_entity" }
	attach = { "part3" = "gasignitor_part_02_entity" }
	attach = { "part4" = "gasignitor_part_02_entity" }
	
	scale = 0.9
	cull_radius = 500
}

entity = {
	name = "gasignitor_accretion_phase_entity"
	locator = { name = "root"	position = { 0 	0  0 } }	
	
	attach = { "root" = "gasignitor_accretion" }
	attach = { "root" = "gasignitor_animation_entity" }
	attach = { "root" = "gasignitor_animation_entity" }
	
	scale = 0.9
	cull_radius = 500
}

entity = {
	name = "gasignitor_compression_phase_entity"
	
	locator = { name = "part5" position = { 0 -90 0 } rotation = { 0 0 0 } }
	locator = { name = "part6" position = { 0 90 0 } rotation = { 0 180 0 } }
	
	attach = { "part5" = "gasignitor_beams" }
	attach = { "part6" = "gasignitor_beams" }
	
	scale = 0.9
	cull_radius = 500
}

entity = { 
	name = "gasignitor_outbursts_entity"
	pdxmesh = "pulsar_outbursts_mesh"
	
	default_state = "idle"
	
	scale = 25
	
	playback_rate = 5.0
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = {
	name = "gasignitor_phase_03_entity"
	locator = { name = "root"	position = { 0 	0  0 } }	
	locator = { name = "part1" position = { 0 175 0 } rotation = { 0 0 0 } }
	locator = { name = "part2" position = { 0 -175 0 } rotation = { 0 180 0 } }
	locator = { name = "part3" position = { 0 165 0 } rotation = { 17 0 0 } }
	locator = { name = "part4" position = { 0 -165 0 } rotation = { -17 180 0 } }

	attach = { "root" = "gasignitor_accretion" }
	attach = { "root" = "gasignitor_animation_entity" }
	attach = { "root" = "gasignitor_animation_entity" }
	attach = { "root" = "gasignitor_part_1_entity" }
	attach = { "root" = "gasignitor_part_2_entity" }
	attach = { "part1" = "gasignitor_part_01_entity" }
	attach = { "part2" = "gasignitor_part_01_entity" }
	attach = { "part3" = "gasignitor_part_02_entity" }
	attach = { "part4" = "gasignitor_part_02_entity" }

	scale = 0.9
	cull_radius = 500
}

entity = {
	name = "gasignitor_phase_04_entity"
	locator = { name = "root"	position = { 0 	0  0 } }	
	locator = { name = "part1" position = { 0 175 0 } rotation = { 0 0 0 } }
	locator = { name = "part2" position = { 0 -175 0 } rotation = { 0 180 0 } }
	locator = { name = "part3" position = { 0 165 0 } rotation = { 17 0 0 } }
	locator = { name = "part4" position = { 0 -165 0 } rotation = { -17 180 0 } }
	locator = { name = "part5" position = { 0 -90 0 } rotation = { 0 0 0 } }
	locator = { name = "part6" position = { 0 90 0 } rotation = { 0 180 0 } }

	attach = { "root" = "gasignitor_part_1_entity" }
	attach = { "root" = "gasignitor_part_2_entity" }
	attach = { "part1" = "gasignitor_part_01_entity" }
	attach = { "part2" = "gasignitor_part_01_entity" }
	attach = { "part3" = "gasignitor_part_02_entity" }
	attach = { "part4" = "gasignitor_part_02_entity" }
	attach = { "part5" = "gasignitor_beams" }
	attach = { "part6" = "gasignitor_beams" }

	scale = 0.9
	cull_radius = 500
}

entity = {
	name = "gasignitor_phase_05_entity"
	locator = { name = "root"	position = { 0 	0  0 } }	
	locator = { name = "lights1" position = { 0 0 0 } rotation = { 90 0 0 } }
	locator = { name = "lights2" position = { 0 0 0 } rotation = { 0 90 0 } }
	locator = { name = "lights3" position = { 0 0 0 } rotation = { 0 0 180 } }

	attach = { "root" = "gasignitor_part_1_entity" }
	attach = { "root" = "gasignitor_part_2_entity" }
	
	attach = { "root" = "gasignitor_penta_rays_entity" }
	attach = { "root" = "gasignitor_hexa_rays_entity" }
	attach = { "lights1" = "gasignitor_penta_rays_entity" }
	attach = { "lights1" = "gasignitor_hexa_rays_entity" }
	attach = { "lights2" = "gasignitor_penta_rays_entity" }
	attach = { "lights2" = "gasignitor_hexa_rays_entity" }
	attach = { "lights3" = "gasignitor_penta_rays_entity" }
	attach = { "lights3" = "gasignitor_hexa_rays_entity" }
	
	scale = 1
	cull_radius = 500
	
	game_data = {
		emissive_recolor_crunch = 6.0
	}
}

#######End of Djohaal models#######

entity = {
	name = "magnetic_hypercoil_01_part_entity"
	pdxmesh = "fallen_empire_01_transport_mesh"
	scale = 0.6
}

entity = {
	name = "magnetic_hypercoil_02_part_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 24 } rotation = { 0 0 0 }}

	attach = { "loc101" = "magnetic_hypercoil_01_part_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hypercoil_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
		
		
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.155 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hypercoil_ring_02_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
		
		
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hypercoil_ring_02_rotated_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 45 90 0 }}
		
		
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "hypercoil_ring_02_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "magnetic_hypercoil_01_pole_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 45 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 135 0 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 180 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 225 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 270 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 315 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc102" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc103" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc104" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc105" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc106" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc107" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc108" = "magnetic_hypercoil_02_part_entity"}
	attach = { "loc109" = "hypercoil_ring_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "magnetic_hypercoil_01_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 110 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 -110 0 } rotation = { 0 180 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 45 0 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 135 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 180 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 225 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 270 0 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 315 0 0 }}

	attach = { "loc101" = "magnetic_hypercoil_01_pole_entity"}
	attach = { "loc102" = "magnetic_hypercoil_01_pole_entity"}
	attach = { "loc103" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc104" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc105" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc106" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc107" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc108" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc109" = "hypercoil_ring_02_rotated_entity"}
	attach = { "loc110" = "hypercoil_ring_02_rotated_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "magnetic_hypercoil_01_ship_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 -150 -215 } rotation = { 0 0 0 }}
	locator = { name = "root" position = { 0 -150 -215 } rotation = { 0 0 0 }}

	attach = { "loc101" = "magnetic_hypercoil_01_entity"}
	
	
	scale = 0.335 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "gasignitor_part_02_entity"
	pdxmesh = "construction_platform_01_mesh"
		scale = 2

	 state = { name = "construction"
    }
	
		meshsettings = {
			name = "bodyShape"
			index = 0
			texture_diffuse = "reptilian_construction_platform_01_diffuse.dds"
			texture_normal = "reptilian_construction_platform_01_normal.dds"
			texture_specular = "reptilian_construction_platform_01_specular.dds"
			shader = "PdxMeshShip"
		}
			
		default_state = "idle"
		state = { name = "idle"
		start_event = { trigger_once = yes sound = { soundeffect = "construction_platform_hum" } }
	}
	
		 game_data = {
        custom_texture = "gfx/models/ships/megastructures/construction_platform/construction_platform_01_fadein.dds"
    }

}

entity = {
	name = "gasignitor_part_01_entity"
	pdxmesh = "mammalian_01_orbital_station_mesh"	
		default_state = "idle"
		playback_rate = 2.0
		state = { name = "idle" animation = "idle"
			start_event = { trigger_once = yes sound = { soundeffect = "spaceport_hum_idle" stop_on_state_change = yes } }
			event = { time = 0.0 node = "light_locator_01" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_02" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_03" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_04" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_05" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		}
		state = { name = "death" animation = "death" looping = no	
			event = { time = 0.0 node = "explosion_1" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 0.5 node = "explosion_2" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 1.5 node = "explosion_3" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 2.0 node = "explosion_4" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 3.0 node = "explosion_5" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 4.0 node = "explosion_2" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		}
		state = { name = "construction" animation = "idle" }
		state = { name = "habitat_idle" animation = "idle" 
			start_event = { trigger_once = yes sound = { soundeffect = "habitat_station_hum" } }
			event = { time = 0.0 node = "light_locator_01" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_02" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_03" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_04" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_05" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		}
	scale = 3.25

}

entity = {
	name = "ringworld_sphere_entity"
	cull_radius = 1000
	pdxmesh = "ringworld_habitable_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 0.554

}

entity = {
	name = "ringworld_sphere_tech_entity"
	cull_radius = 1000
	pdxmesh = "ringworld_tech_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 0.554

}

entity = {
	name = "ringworld_sphere_habitable_entity"
	cull_radius = 1000
	pdxmesh = "ringworld_habitable_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 0.554

}

entity = {
	name = "ringworld_sphere_tech_tiny_entity"
	cull_radius = 1000
	pdxmesh = "ringworld_tech_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 0.0001

}

entity = {
	name = "ringworld_sphere_seam_entity"
	cull_radius = 1000
	pdxmesh = "ringworld_seam_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 0.554

}

entity = {
	name = "big_brain_part_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_station_small_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 2.5

}

entity = {
	name = "vortex_drain_compressors_part_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_station_small_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 3

}

entity = {
	name = "engineering_station_part_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_station_small_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1.2

}


entity = {
	name = "vortex_drain_power_part_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_02_titan_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 3

}


entity = {
	name = "massive_zoo_part_entity"
	cull_radius = 1000
	pdxmesh = "avian_01_science_station_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1

}

entity = {
	name = "neutronium_drill_entity"
	cull_radius = 1000
	pdxmesh = "avian_01_science_station_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 5

}

entity = {
	name = "neutronium_gigaforge_core_entity"
	cull_radius = 1000
	pdxmesh = "ancient_drone_station_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 6

}

entity = {
	name = "big_brain_part02_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_station_large_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 2.5

}

entity = {
	name = "dimension_drain_vortex_entity"
	cull_radius = 1000
	pdxmesh = "extra_dimensional_01_anchor_station_portal_mesh"
	scale = 2

	default_state = "idle"
	state = { name = "idle"		state_time = 5
		event = { time = 0 particle = "extra_dimensional_anchor_station_portal_effect"	keep_particle = yes trigger_once = yes }
	##	start_event = { trigger_once = yes sound = { soundeffect = "ex_mining_station_signals" } }
	}
	
	game_data = {
		uv_animation_speed 		= -0.3
		uv_animation_direction 	= { 0.06 0.09 }
		bloom_factor = 1.6
	}
}

entity = {
	name = "dimension_drain_core_entity"
	cull_radius = 1000
	pdxmesh = "ai_01_station_large_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1.5

}

entity = {
	name = "dimension_energy_entity"
	cull_radius = 1000
	pdxmesh = "fungoid_01_orbital_station_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1

}

entity = {
	name = "dimension_portal_entity"
	pdxmesh = "portal_mesh"
	
	locator = { name = "part1" 	position = { 0 0 0 } }
	
	default_state = idle
	state = { name = "idle"		animation = "idle"		animation_blend_time = 0.3
		start_event = { trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_idle" } }
	
		event = { time = 0 node = "root2" particle = "portal_inner_effect_particle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "clock_12_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_3_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_6_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_9_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
	}
	
	#game_data = {
	#	uv_animation_speed 		= 0.25
	#	uv_animation_direction 	= { 0.0 -1.0 }
	#}
	
	scale = 10
}

entity = {
	name = "dimension_drain_capacitors_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_warship_small_mesh"
	scale = 2
}

entity = {
	name = "dimension_drain_star_entity"
	pdxmesh = "star_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle"
		event = { time = 0.0 node = "planet" particle = "a_class_star_particle"  keep_particle = no trigger_once = yes sound = { soundeffect = "amb_star_fusion" } }
		event = { trigger_once = yes sound = { soundeffect = "space_ambient" } }  
		event = { trigger_once = yes sound = { soundeffect = "falling_star" } }
		event = { trigger_once = yes sound = { soundeffect = "space_ambient_layer_02" } }
	 }
	scale = 1.5
}

entity = {
	name = "cubeworld_entity"
	cull_radius = 1000
	pdxmesh = "cubeworld_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1
}

entity = {
	name = "cubeworld_rotated_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -25 0 0 } rotation = { -4 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "cubeworld_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "cubeworld_2_entity"
	cull_radius = 1000
	pdxmesh = "cubeworld_02_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1
}

entity = {
	name = "cubeworld_2_rotated_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -25 0 0 } rotation = { -4 0 0.5 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "cubeworld_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_core_1_entity"
	pdxmesh = "swarm_01_station_small_mesh"	
	locator = { name = "part1" 	position = { 0 0 0 } }
	locator = { name = "part2" 	position = { 0 0 0 } }
	
	default_state = "idle"
	state = { name = "idle"			animation = "idle"		animation_blend_time = 0.45 
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_013"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_014"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		
		start_event = { trigger_once = yes sound = { soundeffect = "swarm_small_station_idle" } }
	}
	
	state = { name = "death"			animation = "death"		animation_blend_time = 0.3 		looping = no
		event = { time = 0 node = "smoke_locator_01"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 2 node = "smoke_locator_06"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 1 node = "smoke_locator_08"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 3 node = "smoke_locator_012"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 4 node = "smoke_locator_014"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
	
		event = { time = 4.9 particle = "large_swarm_station_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_large" } }	
	}
	scale = 0.5
}

entity = {
	name = "big_cell_core_2_entity"
	pdxmesh = "swarm_01_station_large_mesh"	
	locator = { name = "part1" 	position = { 0 0 0 } }
	locator = { name = "part2" 	position = { 0 0 0 } }
	locator = { name = "part3" 	position = { 0 0 0 } }
	locator = { name = "part4" 	position = { 0 0 0 } }
	locator = { name = "part5" 	position = { 0 0 0 } }
	locator = { name = "part6" 	position = { 0 0 0 } }
	locator = { name = "part7" 	position = { 0 0 0 } }
	locator = { name = "part8" 	position = { 0 0 0 } }
	
	default_state = "idle"
	state = { name = "idle"			animation = "idle"		animation_blend_time = 0.45 
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_013"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_014"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_015"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_016"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		
		start_event = { trigger_once = yes sound = { soundeffect = "swarm_big_station_idle" } }
	}
	state = { name = "death"			animation = "death"		animation_blend_time = 0.3 		looping = no
		event = { time = 0 node = "smoke_locator_01"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 2 node = "smoke_locator_06"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 1 node = "smoke_locator_08"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 3 node = "smoke_locator_013"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
		event = { time = 4 node = "smoke_locator_016"	particle = "gib_vomit_effect" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_small" } }	
	
		event = { time = 4.9 particle = "large_swarm_station_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "swarm_station_explosion_large" } }	
	}
	scale = 0.75
}

entity = {
	name = "big_cell_core_3_entity"
	pdxmesh = "swarm_01_warship_large_mesh"
	
	default_state = "idle"
	state = { name = "idle"			animation = "idle"		animation_blend_time = 0.45 
		start_event = { trigger_once = yes sound = { soundeffect = "swarm_large_warship_idle" } }
		start_event = { trigger_once = yes sound = { soundeffect = "swarm_generic_idle" } }
	}
	state = { name = "moving"		animation = "moving"		animation_blend_time = 0.45 animation_speed = 1 }
	state = { name = "death"		animation = "death"		animation_blend_time = 0.45 looping = no 
		event = { time = 0.0 node = "gib_locator_01"	particle = "swarm_gib_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0.4 node = "gib_locator_02"	particle = "swarm_gib_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0.1 node = "gib_locator_03"	particle = "swarm_gib_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0.4 node = "gib_locator_04"	particle = "swarm_gib_effect" keep_particle = yes trigger_once = yes }	
		event = { trigger_once = yes sound = { soundeffect = "swarm_large_warship_death" } }
	}
	
		locator = { name = "large_gun_01" position = { 0 0 0 } }
		locator = { name = "large_gun_02" position = { 0 0 0 } }
		locator = { name = "large_gun_03" position = { 0 0 0 } }

	scale = 2.5
}

entity = {
	name = "big_cell_core_4_entity"
	pdxmesh = "swarm_01_queen_mesh"
	scale = 1.0
	
	locator = { name = "part1" 	position = { 0 0 0 } }
	
	default_state = "idle"
	state = { name = "idle"			animation = "idle"		animation_blend_time = 0.0 looping = no next_state = idle chance = 5
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }

		start_event = { trigger_once = yes sound = { soundeffect = "swarm_queen_idle_01" } }
	}
	state = { name = "idle"			animation = "idle2"		animation_blend_time = 0.0 looping = no next_state = idle chance = 1
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		
		start_event = { trigger_once = yes sound = { soundeffect = "swarm_queen_idle_02" } }
	}
	state = { name = "moving"		animation = "moving"		animation_blend_time = 0.45  
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
	}
	state = { name = "death"		animation = "death"		animation_blend_time = 0.45 looping = no 
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { trigger_once = yes sound = { soundeffect = "swarm_queen_death" } }
		
		
		event = { time = 0.0 node = "gib_locator_01"	particle = "amoeba_gib_squirt_effect" keep_particle = yes }	
		event = { time = 0.4 node = "gib_locator_02"	particle = "amoeba_gib_squirt_effect" keep_particle = yes }	
		event = { time = 1.9 node = "gib_locator_03"	particle = "amoeba_gib_squirt_effect" keep_particle = yes }	
		event = { time = 1.0 node = "mouth_locator"		particle = "gib_vomit_effect" keep_particle = yes }	
		event = { time = 3.0 node = "mouth_locator"		particle = "gib_vomit_effect" keep_particle = yes }	
		
	}
	scale = 2.5
}

entity = {
	name = "big_cell_ship_entity"
	pdxmesh = "swarm_01_queen_mesh"
	scale = 1.0
	
	locator = { name = "part1" 	position = { 0 0 0 } }
	
	default_state = "idle"
	state = { name = "idle"			animation = "idle"		animation_blend_time = 0.0 looping = no next_state = idle chance = 5
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }

		start_event = { trigger_once = yes sound = { soundeffect = "swarm_queen_idle_01" } }
	}
	state = { name = "idle"			animation = "idle2"		animation_blend_time = 0.0 looping = no next_state = idle chance = 1
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		
		start_event = { trigger_once = yes sound = { soundeffect = "swarm_queen_idle_02" } }
	}
	state = { name = "moving"		animation = "moving"		animation_blend_time = 0.45  
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
	}
	state = { name = "death"		animation = "death"		animation_blend_time = 0.45 looping = no 
		event = { time = 0 node = "smoke_locator_01"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_02"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_03"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_04"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_05"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_06"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_07"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_08"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_09"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_010"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_011"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { time = 0 node = "smoke_locator_012"	particle = "swarm_station_smoke_effect" keep_particle = yes trigger_once = yes }	
		event = { trigger_once = yes sound = { soundeffect = "swarm_queen_death" } }
		
		
		event = { time = 0.0 node = "gib_locator_01"	particle = "amoeba_gib_squirt_effect" keep_particle = yes }	
		event = { time = 0.4 node = "gib_locator_02"	particle = "amoeba_gib_squirt_effect" keep_particle = yes }	
		event = { time = 1.9 node = "gib_locator_03"	particle = "amoeba_gib_squirt_effect" keep_particle = yes }	
		event = { time = 1.0 node = "mouth_locator"		particle = "gib_vomit_effect" keep_particle = yes }	
		event = { time = 3.0 node = "mouth_locator"		particle = "gib_vomit_effect" keep_particle = yes }	
		
	}
}

entity = { 
	name = "nicoll_thing_entity"
	pdxmesh = ""
	
	default_state = "idle"
	state = { name = "idle" animation = "nicoll_thing_idle_animation"
		event = { time = 0.0 node = "planet" particle = "a_class_star_particle"  keep_particle = no trigger_once = yes sound = { soundeffect = "neutron_star_idle_hum" } }
		event = { trigger_once = yes sound = { soundeffect = "space_ambient" } }
	 }
	scale = 0.1
	
	attach = { "planet" = "nicoll_laser_1_part_entity" }
}

entity = {
	name = "giga_01_warship_large_entity"
	pdxmesh = "giga_01_warship_large_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0 node = "engine_small_01" particle = "ai_01_blue_small_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		
		event = { time = 0 node = "circuit_light1" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light2" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light3" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light4" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light5" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light6" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light7" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light8" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light9" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light10" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
	}
	state = { name = "moving" state_time = 5
		event = { time = 0 node = "engine_small_01" particle = "ai_01_blue_small_exhaust_moving_particle" trigger_once = yes keep_particle = yes }
	
		event = { time = 0 node = "circuit_light1" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light2" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light3" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light4" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light5" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light6" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light7" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light8" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light9" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "circuit_light10" particle = "ai_01_circuit_blue_light_effect" trigger_once = yes keep_particle = yes }
	}
	state = { name = "death" state_time = 5 }
	scale = 17.5
}

entity = {
	name = "fun_center_part_entity"
	pdxmesh = "mammalian_01_orbital_station_frame_mesh"
	
	attach = { "part1" 		 		= "mammalian_01_orbital_station_core_entity" }
	attach = { "part2" 		 		= "mammalian_01_orbital_station_habitat_section_entity" }
	attach = { "part3" 		 		= "mammalian_01_orbital_station_habitat_section_entity" }
	attach = { "part4" 		 		= "mammalian_01_orbital_station_habitat_section_entity" }
	attach = { "part5" 		 		= "mammalian_01_orbital_station_habitat_section_entity" }
	attach = { "part6" 		 		= "mammalian_01_orbital_station_habitat_section_entity" }
	attach = { "part7" 		 		= "mammalian_01_orbital_station_habitat_section_entity" }
	
	scale = 1.5
	
	default_state = "habitat_idle"
	state = { name = "habitat_idle" looping = yes }
	state = { name = "construction" looping = yes }
	
	game_data = {
		shader_type = ship
		emissive_recolor_crunch = 5.0
	}
}

entity = {
	name = "fun_center_ring_part_entity"
	pdxmesh = "mammalian_01_science_station_mesh"

	locator = { name = "part1" 			position = { 0 	0 	0 } }

	default_state = "idle"
	state = { name = "idle" animation = "idle"
		start_event = { trigger_once = yes sound = { soundeffect = "amb_research_station_signals" } }
		
		event = { time = 0.0 node = "light_locator_01" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_02" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_03" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_04" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_05" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
	}
	
	state = { name = "death" animation = "death" looping = no
		event = { time = 0.0 node = "light_locator_01" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		event = { time = 0.5 node = "light_locator_02" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		
		event = { time = 0.9 particle = "medium_station_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_large" } }
	}
	scale = 1.4
	
	game_data = {
		size = @research_station
		emissive_recolor_crunch = 5.0
	}
}

entity = {
 name = "gallery_part_entity"
	pdxmesh = "mammalian_01_transport_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0 node = "engine_small_01" particle = "mammalian_01_1_45_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_02" particle = "mammalian_01_1_45_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_01" particle = "mammalian_01_1_45_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_02" particle = "mammalian_01_1_45_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_large_01_1" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_large_01_2" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_large_02_1" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_large_02_2" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
	
		event = { time = 0 node = "light_locator_01" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_02" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		start_event = { trigger_once = yes sound = { soundeffect = "amb_transport_ship_hum" } }
	}
	state = { name = "death" chance = 1 looping = no state_time = 10
	
		event = { time = 0.0 node = "transport_explosion_locator1" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 1.4 node = "transport_explosion_locator7" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 1.0 node = "transport_explosion_locator10" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 1.6 node = "transport_explosion_locator2" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 1.9 node = "transport_explosion_locator9" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 2.1 node = "transport_explosion_locator8" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 2.83 node = "transport_explosion_locator3" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 3.26 node = "transport_explosion_locator4" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 3.9 node = "transport_explosion_locator5" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
		event = { time = 4.1 node = "transport_explosion_locator6" particle = "ship_explosion_particle" sound = { soundeffect = ship_destroyed } }
	}
}

entity = {
	name = "fun_center_arcade_part_entity"
	pdxmesh = "mammalian_01_mining_station_mesh"
	
	locator = { name = "part1" 			position = { 0 	0 	0 } }

	default_state = "idle"
	state = { name = "idle" state_time = 5
		start_event = { trigger_once = yes sound = { soundeffect = "amb_mining_station_signals" } }

		event = { time = 0.0 node = "light_locator_01" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_02" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_03" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_04" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_05" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_06" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_07" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_08" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "light_locator_09" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }		
	}
	
	state = { name = "death" state_time = 5 looping = no
		event = { time = 0.0 node = "light_locator_01" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		event = { time = 0.5 node = "light_locator_02" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		event = { time = 1.5 node = "light_locator_03" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		event = { time = 2.0 node = "light_locator_04" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		event = { time = 3.0 node = "light_locator_05" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		event = { time = 4.0 node = "light_locator_06" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		
		event = { time = 4.9 particle = "medium_station_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_large" } }
	}
	
	scale = 1.5
	game_data = {
		size = @mining_station
		emissive_recolor_crunch = 5.0
	}
}

entity = {
 name = "fun_center_arcade_other_part_entity"
	pdxmesh = "mammalian_01_construction_mesh"
		
	default_state = "idle"
	state = { name = "idle" 						animation = "idle"
		event = { time = 0 node = "engine_small_01" particle = "mammalian_01_2_35_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_01" particle = "mammalian_01_2_35_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_02" particle = "mammalian_01_2_35_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_03" particle = "mammalian_01_2_35_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_04" particle = "mammalian_01_2_35_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_05" particle = "mammalian_01_2_35_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		start_event = { trigger_once = yes sound = { soundeffect = "amb_construction_ship_hum" } }
	
		event = { time = 0 node = "light_locator_01" particle = "ship_light_blue_regular_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_02" particle = "ship_light_blue_regular_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0.05 node = "light_locator_03" particle = "ship_light_blue_regular_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0.05 node = "light_locator_04" particle = "ship_light_blue_regular_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0.1 node = "light_locator_05" particle = "ship_light_blue_regular_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0.1 node = "light_locator_06" particle = "ship_light_blue_regular_effect" trigger_once = yes keep_particle = yes }
	}
	
	attach = { root = "mammalian_01_construction_window_entity" }

}

entity = {
	name = "fun_center_zoo_part_entity"	
	pdxmesh = "mammalian_01_colony_mesh"
	
	state = { name = "idle" state_time = 5
		event = { time = 0 node = "engine_large_01" particle = "mammalian_01_3_35_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_01" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_02" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_03" particle = "mammalian_01_1_45_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_04" particle = "mammalian_01_1_45_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_large_02" particle = "mammalian_01_1_5_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
		start_event = { trigger_once = yes sound = { soundeffect = "amb_colony_ship_hum" } }
	
		event = { time = 0 node = "light_locator_01" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_02" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_03" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_04" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
	}
	scale = 1
}

entity = {
 name = "fun_center_shop_part_entity"
	pdxmesh = "mammalian_01_science_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "engine_small_01" particle = "mammalian_01_2_35_exhaust_idle_particle" keep_particle = yes trigger_once = yes }
		event = { time = 0.0 node = "engine_small_02" particle = "mammalian_01_2_35_exhaust_idle_particle" keep_particle = yes trigger_once = yes }
		start_event = { trigger_once = yes sound = { soundeffect = "amb_science_ship_hum" } }
	
		event = { time = 0 node = "light_locator_01" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_02" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
	}
	scale = 1.0
	
	game_data = {
		trail_locators = {
			"engine_small_01" = 		{ width = @small_trail_W 	lenght = @small_trail_L   	}
			"engine_small_02" = 		{ width = @small_trail_W 	lenght = @small_trail_L   	}
		}
	}
}

entity = {
	name = "fun_center_shop_part_other_entity"
	pdxmesh = "mammalian_01_cruiser_mid_M2S2_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0 node = "light_locator_01" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_02" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
	}
	state = { name = "moving" state_time = 5
		event = { time = 0 node = "light_locator_01" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "light_locator_02" particle = "ship_light_blue_effect" trigger_once = yes keep_particle = yes }
	}
	state = { name = "death" state_time = 5 }
}

entity = {
	name = "fun_center_shop_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 180 }}
	locator = { name = "loc102" position = { 0 2.25 0 } rotation = { 180 180 180 }}
	locator = { name = "loc103" position = { 0 1.125 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 1.125 0 } rotation = { 180 180 180 }}

	attach = { "loc101" = "fun_center_shop_part_entity"}
	attach = { "loc102" = "fun_center_shop_part_entity"}
	attach = { "loc103" = "fun_center_shop_part_other_entity"}
	attach = { "loc104" = "fun_center_shop_part_other_entity"}

	
	scale = 1.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_shop_full_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 92 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "fun_center_shop_full_entity"}

	
	scale = 1.35 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_shop_full_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 60 0 0 }}

	attach = { "loc101" = "fun_center_shop_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_shop_full_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 120 0 0 }}

	attach = { "loc101" = "fun_center_shop_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_shop_full_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 180 0 0 }}

	attach = { "loc101" = "fun_center_shop_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_shop_full_5_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 240 0 0 }}

	attach = { "loc101" = "fun_center_shop_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_shop_full_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 300 0 0 }}

	attach = { "loc101" = "fun_center_shop_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -0 0 0 } rotation = { 0 0 180 }}
	locator = { name = "loc102" position = { 0 2.8 0 } rotation = { 180 180 180 }}

	attach = { "loc101" = "fun_center_zoo_part_entity"}
	attach = { "loc102" = "fun_center_zoo_part_entity"}

	
	scale = 1.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 92 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "fun_center_zoo_full_entity"}

	
	scale = 1.35 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 60 0 0 }}

	attach = { "loc101" = "fun_center_zoo_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 120 0 0 }}

	attach = { "loc101" = "fun_center_zoo_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 180 0 0 }}

	attach = { "loc101" = "fun_center_zoo_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_5_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 240 0 0 }}

	attach = { "loc101" = "fun_center_zoo_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_zoo_full_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 300 0 0 }}

	attach = { "loc101" = "fun_center_zoo_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_half_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 7.5 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 -5 } rotation = { 0 0 0 }}

	attach = { "loc101" = "fun_center_arcade_part_entity"}
	attach = { "loc102" = "fun_center_arcade_other_part_entity"}

	
	scale = 1.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_full_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 92 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "fun_center_arcade_half_entity"}

	
	scale = 1.35 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_full_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 60 0 0 }}

	attach = { "loc101" = "fun_center_arcade_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_full_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 120 0 0 }}

	attach = { "loc101" = "fun_center_arcade_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_full_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 180 0 0 }}

	attach = { "loc101" = "fun_center_arcade_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_full_5_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 240 0 0 }}

	attach = { "loc101" = "fun_center_arcade_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_arcade_full_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 300 0 0 }}

	attach = { "loc101" = "fun_center_arcade_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -0.189 0 0 } rotation = { 0 0 180 }}
	locator = { name = "loc102" position = { 0 2.8 0 } rotation = { 180 180 180 }}

	attach = { "loc101" = "gallery_part_entity"}
	attach = { "loc102" = "gallery_part_entity"}

	
	scale = 1.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 92 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "fun_center_gallery_full_entity"}

	
	scale = 1.35 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 60 0 0 }}

	attach = { "loc101" = "fun_center_gallery_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 120 0 0 }}

	attach = { "loc101" = "fun_center_gallery_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 180 0 0 }}

	attach = { "loc101" = "fun_center_gallery_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_5_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 240 0 0 }}

	attach = { "loc101" = "fun_center_gallery_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_gallery_full_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 300 0 0 }}

	attach = { "loc101" = "fun_center_gallery_full_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_ring_part_big_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 180 0 0 }}

	attach = { "loc101" = "fun_center_ring_part_entity"}
	attach = { "loc102" = "fun_center_ring_part_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_ring_part_big_rotated_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -35 0 0 } rotation = { 0 0 90 }}

	attach = { "loc101" = "fun_center_ring_part_big_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "fun_center_core_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 65 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 80 0 } rotation = { 0 180 0 }}
	locator = { name = "loc103" position = { 0 72.5 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 72.5 0 } rotation = { 60 0 0 }}
	locator = { name = "loc105" position = { 0 72.5 0 } rotation = { 120 0 0 }}
	locator = { name = "loc106" position = { 0 72.5 0 } rotation = { 180 0 0 }}
	locator = { name = "loc107" position = { 0 72.5 0 } rotation = { 240 0 0 }}
	locator = { name = "loc108" position = { 0 72.5 0 } rotation = { 300 0 0 }}

	attach = { "loc101" = "fun_center_part_entity"}
	attach = { "loc102" = "fun_center_part_entity"}
	attach = { "loc103" = "fun_center_ring_part_big_rotated_entity"}
	attach = { "loc104" = "fun_center_ring_part_big_rotated_entity"}
	attach = { "loc105" = "fun_center_ring_part_big_rotated_entity"}
	attach = { "loc106" = "fun_center_ring_part_big_rotated_entity"}
	attach = { "loc107" = "fun_center_ring_part_big_rotated_entity"}
	attach = { "loc108" = "fun_center_ring_part_big_rotated_entity"}

	
	scale = 1.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_art_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 350 0 } rotation = { 0 90 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "giga_01_warship_large_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_1_part_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_cage_entity"
	pdxmesh = "dyson_sphere_frame_mesh"
		scale = 22

	default_state = "idle"
	state = { name = "idle" state_time = 10
		start_event = { trigger_once = yes sound = { soundeffect = "dyson_sphere_treble_hum" } }
	}
	
		meshsettings = {
			name = "frame1Shape"
			index = 0
			texture_diffuse = "molluscoid_dyson_sphere_01_diffuse.dds"
			texture_normal = "molluscoid_dyson_sphere_01_normal.dds"
			texture_specular = "molluscoid_dyson_sphere_01_specular.dds"
			shader = "PdxMeshShip"
		}
				
			 game_data = {
        custom_texture = "gfx/models/ships/megastructures/dyson_sphere/dyson_sphere_01_construction_fadein.dds"
    }
		
}

entity = {
	name = "nicoll_laser_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.975 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_ring_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_1_basket_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 60 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 60 22.5 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 60 45 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 60 67.5 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 60 90 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 60 112.5 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 60 135 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 60 157.5 0 }}
	
	
	
	attach = { "loc101" = "nicoll_laser_1_part_entity"}
	attach = { "loc102" = "nicoll_laser_1_part_entity"}
	attach = { "loc103" = "nicoll_laser_1_part_entity"}
	attach = { "loc104" = "nicoll_laser_1_part_entity"}
	attach = { "loc105" = "nicoll_laser_1_part_entity"}
	attach = { "loc106" = "nicoll_laser_1_part_entity"}
	attach = { "loc107" = "nicoll_laser_1_part_entity"}
	attach = { "loc108" = "nicoll_laser_1_part_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = { 
	name = "nicoll_laser_1_beam_part_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
	}
	
	scale = 40
	
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = { 
	name = "nicoll_megabeam_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
	}
	
	scale = 100
	
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = { 
	name = "nicoll_energy_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "neutron_star_outburst_effect"  keep_particle = no trigger_once = yes }
		event = { time = 0.0 node = "polar_effect_2" particle = "neutron_star_outburst_effect"  keep_particle = no trigger_once = yes }
	}
	
	scale = 7.5
	
	game_data = {
		uv_animation_speed   = 0.5
		uv_animation_direction  = { 0.75 1.0 }
	}	
}

entity = { 
	name = "nicoll_energy_2_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "neutron_star_outburst_effect"  keep_particle = no trigger_once = yes }
		event = { time = 0.0 node = "polar_effect_2" particle = "neutron_star_outburst_effect"  keep_particle = no trigger_once = yes }
	}
	
	scale = 15
	
	game_data = {
		uv_animation_speed   = 0.5
		uv_animation_direction  = { 0.75 1.0 }
	}	
}

entity = {
	name = "nicoll_two_beams_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l01" position = { 65 215 0 } rotation = { 150 90 90 }}
	locator = { name = "l02" position = { 65 -215 0 } rotation = { 210 90 90 }}
	locator = { name = "l03" position = { 425 0 0 } rotation = { 0 0 0 }}

	
	
	attach = { "l01" = "nicoll_laser_1_beam_part_entity"}
	attach = { "l02" = "nicoll_laser_1_beam_part_entity"}
	attach = { "l03" = "nicoll_energy_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_focus_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.25 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_focus_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.45 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_focus_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.70 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_focus_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.95 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 0 0 }}
	
	

	attach = { "loc110" = "nicoll_cage_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc108" position = { 50 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 0 0 }}
	
	

	attach = { "loc108" = "nicoll_laser_1_basket_entity"}
	attach = { "loc110" = "nicoll_cage_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc108" position = { 50 0 0 } rotation = { 0 0 0 }}
	
	

	attach = { "loc108" = "nicoll_laser_1_basket_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc108" position = { 50 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { -7.5 0 0 } rotation = { 0 90 90 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc111" position = { -125 0 0 } rotation = { 0 90 90 }}
	
	

	attach = { "loc108" = "nicoll_laser_1_basket_entity"}
	attach = { "loc109" = "nicoll_laser_ring_entity"}
	attach = { "loc110" = "nicoll_cage_entity"}
	attach = { "loc111" = "nicoll_laser_ring_2_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_3_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc109" position = { -7.5 0 0 } rotation = { 0 90 90 }}
	locator = { name = "loc111" position = { -125 0 0 } rotation = { 0 90 90 }}
	
	

	attach = { "loc109" = "nicoll_laser_ring_entity"}
	attach = { "loc111" = "nicoll_laser_ring_2_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc108" position = { 50 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { -7.5 0 0 } rotation = { 0 90 90 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc111" position = { -125 0 0 } rotation = { 0 90 90 }}
	locator = { name = "l10" position = { 110 0 0 } rotation = { 180 90 90 }}
	locator = { name = "l11" position = { 210 0 0 } rotation = { 180 90 90 }}
	locator = { name = "l12" position = { 310 0 0 } rotation = { 180 90 90 }}
	locator = { name = "l13" position = { 410 0 0 } rotation = { 180 90 90 }}

	
	
	attach = { "loc108" = "nicoll_laser_1_basket_entity"}
	attach = { "loc109" = "nicoll_laser_ring_entity"}
	attach = { "loc110" = "nicoll_cage_entity"}
	attach = { "loc111" = "nicoll_laser_ring_2_entity"}
	attach = { "l10" = "nicoll_laser_focus_4_entity"}
	attach = { "l11" = "nicoll_laser_focus_3_entity"}
	attach = { "l12" = "nicoll_laser_focus_2_entity"}
	attach = { "l13" = "nicoll_laser_focus_1_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_4_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l10" position = { 110 0 0 } rotation = { 180 90 90 }}
	locator = { name = "l11" position = { 210 0 0 } rotation = { 180 90 90 }}
	locator = { name = "l12" position = { 310 0 0 } rotation = { 180 90 90 }}
	locator = { name = "l13" position = { 410 0 0 } rotation = { 180 90 90 }}

	
	
	attach = { "l10" = "nicoll_laser_focus_4_entity"}
	attach = { "l11" = "nicoll_laser_focus_3_entity"}
	attach = { "l12" = "nicoll_laser_focus_2_entity"}
	attach = { "l13" = "nicoll_laser_focus_1_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l01" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l01" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l03" position = { 0 0 0 } rotation = { 0 45 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l03" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l08" position = { 0 0 0 } rotation = { 0 157.5 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l08" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l05" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l05" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_5_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l06" position = { 0 0 0 } rotation = { 0 112.5 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l06" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l02" position = { 0 0 0 } rotation = { 0 22.5  0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l02" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_7_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l07" position = { 0 0 0 } rotation = { 0 135 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l07" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_8_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "l04" position = { 0 0 0 } rotation = { 0 67.5 0 }}
	locator = { name = "pew" position = { 410 10 -10 } rotation = { 180 90 90 }}

	
	
	attach = { "l04" = "nicoll_two_beams_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}

	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_firing_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "m1" position = { 485 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "m2" position = { 485 -10 -10 } rotation = { 180 90 90 }}
	locator = { name = "m3" position = { 485 10 10 } rotation = { 180 90 90 }}
	locator = { name = "m4" position = { 485 -10 10 } rotation = { 180 90 90 }}
	locator = { name = "pew" position = { 485 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "pew1" position = { 410 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "pew2" position = { 410 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "pew3" position = { 410 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "loc102" position = { 1475 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "loc103" position = { 1475 -10 10 } rotation = { 180 90 90 }}
	locator = { name = "loc104" position = { 1475 10 10 } rotation = { 180 90 90 }}
	locator = { name = "loc105" position = { 1475 -10 -10 } rotation = { 180 90 90 }}

	
	attach = { "m1" = "nicoll_megabeam_entity"}
	attach = { "m2" = "nicoll_megabeam_entity"}
	attach = { "m3" = "nicoll_megabeam_entity"}
	attach = { "m4" = "nicoll_megabeam_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew1" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew2" = "titan_laser_hit_entity"}
	attach = { "pew3" = "titan_laser_hit_entity"}
	attach = { "loc102" = "nicoll_energy_2_entity"}
	attach = { "loc103" = "nicoll_energy_2_entity"}
	attach = { "loc104" = "nicoll_energy_2_entity"}
	attach = { "loc105" = "nicoll_energy_2_entity"}
	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_capacitors_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_warship_small_mesh"
	scale = 10
}

entity = {
	name = "nicoll_portal_2_entity"
	pdxmesh = "portal_mesh"
	
	locator = { name = "part1" 	position = { 0 0 0 } }
	
	default_state = idle
	state = { name = "idle"		animation = "idle"		animation_blend_time = 0.3
		start_event = { trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_idle" } }
	
		event = { time = 0 node = "root2" particle = "portal_inner_effect_particle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "clock_12_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_3_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_6_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_9_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
	}
	
	#game_data = {
	#	uv_animation_speed 		= 0.25
	#	uv_animation_direction 	= { 0.0 -1.0 }
	#}
	
	scale = 10
}

entity = {
	name = "nicoll_portal_entity"
	pdxmesh = "portal_mesh"
	
	locator = { name = "part1" 	position = { 0 0 0 } }
	
	default_state = idle
	state = { name = "idle"		animation = "idle"		animation_blend_time = 0.3
		start_event = { trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_idle" } }
	
		event = { time = 0 node = "root2" particle = "portal_inner_effect_particle" keep_particle = yes trigger_once = yes }
		event = { time = 0 node = "clock_12_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_3_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_6_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
		event = { time = 0 node = "clock_9_locator" particle = "portal_effect_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "ex_dimensional_portal_thunder" } }
	}
	
	#game_data = {
	#	uv_animation_speed 		= 0.25
	#	uv_animation_direction 	= { 0.0 -1.0 }
	#}
	
	scale = 80
}

entity = {
	name = "nicoll_laser_gate_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 0 -15 } rotation = { 0 90 0 }}
	locator = { name = "loc105" position = { 0 0 15 } rotation = { 0 90 0 }}
	locator = { name = "loc102" position = { -250 0 0 } rotation = { 90 90 90 }}
	locator = { name = "loc103" position = { 250 0 0 } rotation = { -90 -90 -90 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "nicoll_laser_gate_entity"}
	attach = { "loc102" = "nicoll_laser_gate_capacitors_entity"}
	attach = { "loc103" = "nicoll_laser_gate_capacitors_entity"}
	attach = { "loc104" = "nicoll_laser_gate_entity"}
	attach = { "loc105" = "nicoll_laser_gate_entity"}

	
	scale = 0.4 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_a_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 90 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "nicoll_laser_gate_entity"}

	
	scale = 0.1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}


entity = {
	name = "nicoll_laser_gate_full_a_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 180 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 270 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "engineering_station_part_entity"}
	attach = { "loc102" = "engineering_station_part_entity"}
	attach = { "loc103" = "engineering_station_part_entity"}
	attach = { "loc104" = "engineering_station_part_entity"}
	attach = { "loc105" = "nicoll_laser_gate_a_ring_entity"}

	
	scale = 2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_side_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 90 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "nicoll_laser_gate_full_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_side_open_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "nicoll_laser_gate_full_open_entity"}
	attach = { "loc102" = "nicoll_energy_entity"}
	attach = { "loc103" = "nicoll_energy_entity"}
	attach = { "loc104" = "nicoll_energy_entity"}
	attach = { "loc105" = "nicoll_energy_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_full_open_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 0 -15 } rotation = { 0 90 0 }}
	locator = { name = "loc105" position = { 0 0 15 } rotation = { 0 90 0 }}
	locator = { name = "loc102" position = { -250 0 0 } rotation = { 90 90 90 }}
	locator = { name = "loc103" position = { 250 0 0 } rotation = { -90 -90 -90 }}
	locator = { name = "loc106" position = { 0 0 -80 } rotation = { 0 -90 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 0 0 }}

	
	attach = { "loc101" = "nicoll_laser_gate_entity"}
	attach = { "loc102" = "nicoll_laser_gate_capacitors_entity"}
	attach = { "loc103" = "nicoll_laser_gate_capacitors_entity"}
	attach = { "loc104" = "nicoll_laser_gate_entity"}
	attach = { "loc105" = "nicoll_laser_gate_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}

	
	scale = 0.4 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_full_open_a_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 -80 } rotation = { 0 -90 0 }}


	attach = { "loc105" = "nicoll_laser_gate_full_a_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}

	
	scale = 0.4 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = { 
	name = "nicoll_megabeam_2_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
	}
	
	scale = 200
	
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = {
	name = "nicoll_laser_gate_planet_open_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc106" position = { 0 150 0 } rotation = { -90 0 0 }}

	
	attach = { "loc106" = "nicoll_laser_gate_planet_open_entity_nr"}


	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 150 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_laser_gate_planet_firing_entity_nr"}


	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_b_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 150 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_laser_gate_planet_firing_b_entity_nr"}


	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_c_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 150 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_laser_gate_planet_firing_c_entity_nr"}


	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_d_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 150 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_laser_gate_planet_firing_d_entity_nr"}


	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_open_entity_nr"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 0 }}

	
	attach = { "loc106" = "nicoll_portal_entity"}


	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_entity_nr"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m2" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m3" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m4" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "pew" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew1" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew2" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew3" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc102" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc103" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc104" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc105" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_megabeam_2_entity"}
	attach = { "m2" = "nicoll_megabeam_2_entity"}
	attach = { "m3" = "nicoll_megabeam_2_entity"}
	attach = { "m4" = "nicoll_megabeam_2_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew1" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew2" = "titan_laser_hit_entity"}
	attach = { "pew3" = "titan_laser_hit_entity"}
	attach = { "loc102" = "nicoll_energy_2_entity"}
	attach = { "loc103" = "nicoll_energy_2_entity"}
	attach = { "loc104" = "nicoll_energy_2_entity"}
	attach = { "loc105" = "nicoll_energy_2_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}


	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_b_entity_nr"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m2" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "pew" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew1" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew2" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew3" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc102" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc103" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc104" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc105" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_megabeam_2_entity"}
	attach = { "m2" = "nicoll_megabeam_2_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew1" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew2" = "titan_laser_hit_entity"}
	attach = { "pew3" = "titan_laser_hit_entity"}
	attach = { "loc102" = "nicoll_energy_2_entity"}
	attach = { "loc103" = "nicoll_energy_2_entity"}
	attach = { "loc104" = "nicoll_energy_2_entity"}
	attach = { "loc105" = "nicoll_energy_2_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}


	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_c_entity_nr"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "pew" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew1" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew2" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew3" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc102" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc103" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc104" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc105" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_megabeam_2_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew1" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew2" = "titan_laser_hit_entity"}
	attach = { "pew3" = "titan_laser_hit_entity"}
	attach = { "loc102" = "nicoll_energy_2_entity"}
	attach = { "loc103" = "nicoll_energy_2_entity"}
	attach = { "loc104" = "nicoll_energy_2_entity"}
	attach = { "loc105" = "nicoll_energy_2_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}


	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_planet_firing_d_entity_nr"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m2" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m3" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "m4" position = { 0 0 -300 } rotation = { 0 -90 0 }}
	locator = { name = "pew" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew1" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew2" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "pew3" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc102" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc103" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc104" position = { 0 10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc105" position = { 0 -10 0 } rotation = { 180 90 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 -90 0 }}

	
	attach = { "m1" = "nicoll_megabeam_2_entity"}
	attach = { "m2" = "nicoll_megabeam_2_entity"}
	attach = { "m3" = "nicoll_megabeam_2_entity"}
	attach = { "m4" = "nicoll_megabeam_2_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew1" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew2" = "titan_laser_hit_entity"}
	attach = { "pew3" = "titan_laser_hit_entity"}
	attach = { "loc102" = "nicoll_energy_2_entity"}
	attach = { "loc103" = "nicoll_energy_2_entity"}
	attach = { "loc104" = "nicoll_energy_2_entity"}
	attach = { "loc105" = "nicoll_energy_2_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}


	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "nicoll_laser_gate_full_open_firing_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "m1" position = { 0 0 -350 } rotation = { 0 -90 0 }}
	locator = { name = "m2" position = { 0 0 -350 } rotation = { 0 -90 0 }}
	locator = { name = "m3" position = { 0 0 -350 } rotation = { 0 -90 0 }}
	locator = { name = "m4" position = { 0 0 -350 } rotation = { 0 -90 0 }}
	locator = { name = "pew" position = { 0 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "pew1" position = { 0 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "pew2" position = { 0 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "pew3" position = { 0 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "loc102" position = { 0 10 -10 } rotation = { 180 90 90 }}
	locator = { name = "loc103" position = { 0 -10 10 } rotation = { 180 90 90 }}
	locator = { name = "loc104" position = { 0 10 10 } rotation = { 180 90 90 }}
	locator = { name = "loc105" position = { 0 -10 -10 } rotation = { 180 90 90 }}
	locator = { name = "loc106" position = { 0 0 -80 } rotation = { 0 -90 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 0 0 }}

	
	attach = { "m1" = "nicoll_megabeam_2_entity"}
	attach = { "m2" = "nicoll_megabeam_2_entity"}
	attach = { "m3" = "nicoll_megabeam_2_entity"}
	attach = { "m4" = "nicoll_megabeam_2_entity"}
	attach = { "pew" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew1" = "fme01_titan_laser_muzzle_entity"}
	attach = { "pew2" = "titan_laser_hit_entity"}
	attach = { "pew3" = "titan_laser_hit_entity"}
	attach = { "loc102" = "nicoll_energy_2_entity"}
	attach = { "loc103" = "nicoll_energy_2_entity"}
	attach = { "loc104" = "nicoll_energy_2_entity"}
	attach = { "loc105" = "nicoll_energy_2_entity"}
	attach = { "loc106" = "nicoll_portal_entity"}
	attach = { "loc107" = "nicoll_laser_gate_full_open_a_entity"}


	scale = 0.4 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "ringworld_sphere_seam_sphere_entity"
	cull_radius = 1000
	pdxmesh = "ringworld_seam_01_mesh"
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" time_offset = { 0 100 }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_01" } }
		start_event = { trigger_once = yes sound = { soundeffect = "ringworld_hum_idle_02" } }
	}
	scale = 1

}

entity = {
	name = "big_cell_frame_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 90 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_datasphere_entity"}
	
	
	scale = 0.205 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_frame_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 90 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_cell_frame_2_core_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_cell_frame_entity"}
	attach = { "loc102" = "big_cell_frame_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 270 }}
	locator = { name = "loc103" position = { 0 250 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_cell_frame_entity"}
	attach = { "loc102" = "big_cell_core_1_entity"}
	attach = { "loc103" = "big_cell_frame_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 270 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "big_cell_core_1_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_3_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 270 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "big_cell_core_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 270 }}
	locator = { name = "loc103" position = { 0 250 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_cell_frame_entity"}
	attach = { "loc102" = "big_cell_core_2_entity"}
	attach = { "loc103" = "big_cell_frame_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_4_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 10 250 0 } rotation = { 270 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "big_cell_core_3_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 10 250 0 } rotation = { 270 0 0 }}
	locator = { name = "loc103" position = { 0 250 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_cell_frame_entity"}
	attach = { "loc102" = "big_cell_core_3_entity"}
	attach = { "loc103" = "big_cell_frame_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_5_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 270 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "big_cell_core_4_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_cell_5_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 270 0 0 }}
	locator = { name = "loc103" position = { 0 250 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_cell_frame_entity"}
	attach = { "loc102" = "big_cell_core_4_entity"}
	attach = { "loc103" = "big_cell_frame_2_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_frame_entity"
	pdxmesh = "dyson_sphere_frame_mesh"
	scale = 9.5
	
	default_state = "idle"
	state = { name = "idle" state_time = 10
		start_event = { trigger_once = yes sound = { soundeffect = "dyson_sphere_treble_hum" } }
	}
	
		meshsettings = {
			name = "frame1Shape"
			index = 0
			texture_diffuse = "mammalian_dyson_sphere_01_diffuse.dds"
			texture_normal = "mammalian_dyson_sphere_01_normal.dds"
			texture_specular = "mammalian_dyson_sphere_01_specular.dds"
			shader = "PdxMeshShip"
		}
}

entity = {
	name = "hyper_drill_station_entity"
	pdxmesh = "molluscoid_01_mining_station_mesh"
		default_state = "idle"
		state = { name = "idle" state_time = 5
			event = { trigger_once = yes sound = { soundeffect = "place_construction" } }
		}
	scale = 1.5
}

entity = {
	name = "hyper_drill_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 100 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "hyper_drill_station_entity"}
	
	
	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_part_thing_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_warship_large_mesh"
	scale = 2
}

entity = {
	name = "blackhole_generator_parttwo_entity"
	cull_radius = 1000
	pdxmesh = "fallen_empire_01_warship_small_mesh"
	scale = 2
}

entity = {
	name = "blackhole_generator_part_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 45 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 135 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "hyper_drill_part_thing_entity"}
	attach = { "loc102" = "hyper_drill_part_thing_entity"}
	attach = { "loc103" = "hyper_drill_part_thing_entity"}
	attach = { "loc104" = "hyper_drill_part_thing_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "blackhole_generator_part_small_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 0 45 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 135 }}
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 45 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 135 }}

	attach = { "loc105" = "blackhole_generator_parttwo_entity"}
	attach = { "loc106" = "blackhole_generator_parttwo_entity"}
	attach = { "loc107" = "blackhole_generator_parttwo_entity"}
	attach = { "loc108" = "blackhole_generator_parttwo_entity"}
	attach = { "loc101" = "black_hole_generator_two_beam_rotated_entity"}
	attach = { "loc102" = "black_hole_generator_two_beam_rotated_entity"}
	attach = { "loc103" = "black_hole_generator_two_beam_rotated_entity"}
	attach = { "loc104" = "black_hole_generator_two_beam_rotated_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "blackhole_generator_part_small_nobeam_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 0 45 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 135 }}

	attach = { "loc105" = "blackhole_generator_parttwo_entity"}
	attach = { "loc106" = "blackhole_generator_parttwo_entity"}
	attach = { "loc107" = "blackhole_generator_parttwo_entity"}
	attach = { "loc108" = "blackhole_generator_parttwo_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "blackhole_generator_part_big_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 2.5 } rotation = { 0 0 0 }}

	attach = { "loc101" = "blackhole_generator_part_entity"}
	attach = { "loc102" = "blackhole_generator_part_small_nobeam_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "blackhole_generator_part_big_beam_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 2.5 } rotation = { 0 0 0 }}

	attach = { "loc101" = "blackhole_generator_part_entity"}
	attach = { "loc102" = "blackhole_generator_part_small_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "black_hole_g_entity"
	pdxmesh = "black_hole_new_mesh"
	
	scale = 1.75
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { trigger_once = yes sound = { soundeffect = "blackhole_hum_idle" } }
	}
	locator = { name = "planet" }
	
	game_data = {
		size = 1.0
		bloom_factor = 5
	}
}

entity = { 
	name = "black_hole_generator_beam_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "dyson_sphere_treble_hum" } }
	}
	
	scale = 3
	
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = {
	name = "black_hole_generator_two_beam_entity"
	cull_radius = 1000			
	
	locator = { name = "loc101" position = { 0 12 -30 } rotation = { 0 65 0 }}
	locator = { name = "loc102" position = { 0 12 30 } rotation = { 0 -65 0 }}

	attach = { "loc101" = "black_hole_generator_beam_entity"}
	attach = { "loc102" = "black_hole_generator_beam_entity"}
	
	
	scale = 1
}

entity = {
	name = "black_hole_generator_two_beam_rotated_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 90 0 }}

	attach = { "loc101" = "black_hole_generator_two_beam_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "blackhole_generator_empty_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 25 0 } rotation = { 0 90 0 }}
	locator = { name = "loc102" position = { 0 -25 0 } rotation = { 0 -90 0 }}
	
	attach = { "loc101" = "blackhole_generator_part_big_entity"}
	attach = { "loc102" = "blackhole_generator_part_big_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "blackhole_generator_full_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 25 0 } rotation = { 0 90 0 }}
	locator = { name = "loc102" position = { 0 -25 0 } rotation = { 0 -90 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "blackhole_generator_part_big_beam_entity"}
	attach = { "loc102" = "blackhole_generator_part_big_beam_entity"}
	attach = { "loc103" = "black_hole_g_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_gravilift_part_entity"
	pdxmesh = "eventship_06_mesh"
	scale = 5
	
	default_state = "idle"
	state = { name = "idle"	 animation = "idle" animation_blend_time = 4 
		start_event = { trigger_once = yes sound = { soundeffect = "amb_event_ship_06_idle" } }
		event = { time = 0 node = "engine_medium_01" particle = "mammalian_01_1_8_exhaust_oblong_idle_particle" trigger_once = yes keep_particle = yes }
	}
}

entity = {
	name = "foundry_gravilift_laser_shifted_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 -40 } rotation = { 0 -100 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_gravilift_part_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_gravilift_laser_gun_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 120 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 180 0 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 240 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 300 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_gravilift_laser_shifted_entity"}
	attach = { "loc102" = "foundry_gravilift_laser_shifted_entity"}
	attach = { "loc103" = "foundry_gravilift_laser_shifted_entity"}
	attach = { "loc104" = "foundry_gravilift_laser_shifted_entity"}
	attach = { "loc105" = "foundry_gravilift_laser_shifted_entity"}
	attach = { "loc106" = "foundry_gravilift_laser_shifted_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_hull_piece_entity"
	pdxmesh = "ancient_destroyer_mesh"
	
	default_state = "idle"
	state = { name = "idle"	 animation = "idle" animation_blend_time = 4 
		start_event = { trigger_once = yes sound = { soundeffect = "ancient_drone_idle" } }
		event = { time = 0 node = "engine_medium_01" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_02" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_03" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_medium_04" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_01" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_02" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_03" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
		event = { time = 0 node = "engine_small_04" particle = "molluscoid_01_1_0_exhaust_idle_particle" trigger_once = yes keep_particle = yes }
	}
	
	scale = 1.2
}

entity = {
	name = "foundry_hull_shifted_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 -10 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_hull_piece_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_hull_big_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 180 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 270 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_hull_shifted_entity"}
	attach = { "loc102" = "foundry_hull_shifted_entity"}
	attach = { "loc103" = "foundry_hull_shifted_entity"}
	attach = { "loc104" = "foundry_hull_shifted_entity"}

	
	scale = 5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_shipyard_part_entity"
	pdxmesh = "ancient_drone_mesh"
	locator = { name = "root" }
	
	default_state = idle
	state = { name = "idle"	animation = "idle" animation_blend_time = 1.05 animation_speed = 1.0 
		start_event = { trigger_once = yes sound = { soundeffect = ancient_drone_idle } }
	}
	
	scale = 3.5
}

entity = {
	name = "foundry_shipyard_shifted_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 -90 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_shipyard_part_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_shipyard_line_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 10 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 0 20 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 30 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 0 40 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 50 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_shipyard_shifted_entity"}
	attach = { "loc102" = "foundry_shipyard_shifted_entity"}
	attach = { "loc103" = "foundry_shipyard_shifted_entity"}
	attach = { "loc104" = "foundry_shipyard_shifted_entity"}
	attach = { "loc105" = "foundry_shipyard_shifted_entity"}
	attach = { "loc106" = "foundry_shipyard_shifted_entity"}

	
	scale = 3 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_shipyard_line_shifted_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 -50 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_shipyard_line_entity"}

	
	scale = 3 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_shipyard_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 25 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 -25 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 -50 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 50 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_shipyard_line_shifted_entity"}
	attach = { "loc102" = "foundry_shipyard_line_shifted_entity"}
	attach = { "loc103" = "foundry_shipyard_line_shifted_entity"}
	attach = { "loc104" = "foundry_shipyard_line_shifted_entity"}
	attach = { "loc105" = "foundry_shipyard_line_shifted_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_part_entity"
	pdxmesh = "construction_platform_01_mesh"
		scale = 1

	 state = { name = "construction"
    }
	
		meshsettings = {
			name = "bodyShape"
			index = 0
			texture_diffuse = "reptilian_construction_platform_01_diffuse.dds"
			texture_normal = "reptilian_construction_platform_01_normal.dds"
			texture_specular = "reptilian_construction_platform_01_specular.dds"
			shader = "PdxMeshShip"
		}
			
		default_state = "idle"
		state = { name = "idle"
		start_event = { trigger_once = yes sound = { soundeffect = "construction_platform_hum" } }
	}
	
		 game_data = {
        custom_texture = "gfx/models/ships/megastructures/construction_platform/construction_platform_01_fadein.dds"
    }

}

entity = {
	name = "foundry_part_line_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 45 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 0 90 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 135 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 0 180 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_part_entity"}
	attach = { "loc102" = "foundry_part_entity"}
	attach = { "loc103" = "foundry_part_entity"}
	attach = { "loc104" = "foundry_part_entity"}
	attach = { "loc105" = "foundry_part_entity"}

	
	scale = 1.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_shipyard_big_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 160 -50 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_shipyard_entity"}
	attach = { "loc102" = "foundry_part_line_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "foundry_shipyard_final_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc101" position = { 0 250 -100 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "foundry_shipyard_big_entity"}

	
	scale = 0.85 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_1_part_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -80 0 0 } rotation = { 0 90 90 }}
	locator = { name = "loc102" position = { 80 0 0 } rotation = { 0 90 -90 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "hyper_drill_station_entity"}
	attach = { "loc102" = "hyper_drill_station_entity"}
	
	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_1_part_ship_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -80 0 0 } rotation = { 90 90 0 }}
	locator = { name = "loc102" position = { 80 0 0 } rotation = { -90 -90 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "hyper_drill_part_thing_entity"}
	attach = { "loc102" = "hyper_drill_part_thing_entity"}
	
	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = { 
	name = "hyper_drill_beam_entity"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
	}
	
	scale = 10
	
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = {
	name = "hyper_drill_1_part_beam_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { -55 0 0 } rotation = { 0 90 -90 }}
	locator = { name = "loc102" position = { 55 0 0 } rotation = { 0 -90 90 }}

	attach = { "loc101" = "hyper_drill_beam_entity"}
	attach = { "loc102" = "hyper_drill_beam_entity"}
	
	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_1_part_big_no_beam_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "hyper_drill_1_part_entity"}
	attach = { "loc102" = "hyper_drill_1_part_ship_entity"}
	attach = { "loc104" = "hyper_drill_ring_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.25 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "hyper_drill_1_part_big_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 0 0 }}

	attach = { "loc101" = "hyper_drill_1_part_entity"}
	attach = { "loc102" = "hyper_drill_1_part_ship_entity"}
	attach = { "loc103" = "hyper_drill_1_part_beam_entity"}
	attach = { "loc104" = "hyper_drill_ring_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "barren_terraformer_frame_entity"
	pdxmesh = "dyson_sphere_frame_mesh"
		scale = 9.5

	default_state = "idle"
	state = { name = "idle" state_time = 10
		start_event = { trigger_once = yes sound = { soundeffect = "dyson_sphere_treble_hum" } }
	}²
	
		meshsettings = {
			name = "frame1Shape"
			index = 0
			texture_diffuse = "mammalian_dyson_sphere_01_diffuse.dds"
			texture_normal = "mammalian_dyson_sphere_01_normal.dds"
			texture_specular = "mammalian_dyson_sphere_01_specular.dds"
			shader = "PdxMeshShip"
		}
}

entity = {
	name = "barren_terraform_platform"
	pdxmesh = "construction_platform_01_mesh"
		scale = 0.5

	 state = { name = "construction"
    }
	
		meshsettings = {
			name = "bodyShape"
			index = 0
			texture_diffuse = "reptilian_construction_platform_01_diffuse.dds"
			texture_normal = "reptilian_construction_platform_01_normal.dds"
			texture_specular = "reptilian_construction_platform_01_specular.dds"
			shader = "PdxMeshShip"
		}
			
		default_state = "idle"
		state = { name = "idle"
		start_event = { trigger_once = yes sound = { soundeffect = "construction_platform_hum" } }
	}
	
		 game_data = {
        custom_texture = "gfx/models/ships/megastructures/construction_platform/construction_platform_01_fadein.dds"
    }

}

entity = {
	name = "stellar_crusher_part_01_entity"
	pdxmesh = "mammalian_01_orbital_station_mesh"	
		default_state = "idle" 
		state = { name = "idle" animation = "idle"
			start_event = { trigger_once = yes sound = { soundeffect = "spaceport_hum_idle" stop_on_state_change = yes } }
			event = { time = 0.0 node = "light_locator_01" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_02" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_03" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_04" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_05" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		}
		state = { name = "death" animation = "death" looping = no	
			event = { time = 0.0 node = "explosion_1" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 0.5 node = "explosion_2" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 1.5 node = "explosion_3" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 2.0 node = "explosion_4" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 3.0 node = "explosion_5" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
			event = { time = 4.0 node = "explosion_2" particle = "ship_explosion_particle" keep_particle = yes trigger_once = yes sound = { soundeffect = "station_explosion_small" } }
		}
		state = { name = "construction" animation = "idle" }
		state = { name = "habitat_idle" animation = "idle" 
			start_event = { trigger_once = yes sound = { soundeffect = "habitat_station_hum" } }
			event = { time = 0.0 node = "light_locator_01" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_02" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_03" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_04" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
			event = { time = 0.0 node = "light_locator_05" particle = "ship_light_blue_effect" keep_particle = yes trigger_once = yes }
		}
	scale = 3

}


entity = {
	name = "stellar_crusher_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "stellar_crusher_ring_small_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.9 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "stellar_crusher_ring_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.825 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = { 
	name = "stellar_beams_entity"
	pdxmesh = "pulsar_outbursts_mesh"
	
	default_state = "idle"
	state = { name = "idle" state_time = 5
		event = { time = 0.0 node = "polar_effect_1" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes  sound = { soundeffect = "pulsar_star_idle_hum" } }
		event = { time = 0.0 node = "polar_effect_2" particle = "pulsar_star_outburst_effect"  keep_particle = no trigger_once = yes }
	}
	
	scale = 20
	
	game_data = {
		uv_animation_speed   = -0.1
		uv_animation_direction  = { 0.4 0.4 }
		bloom_factor = 0.5
	}	
}

entity = {
	name = "stellar_crusher_01_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 15 -7.5 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 15 7.5 0 }}
	locator = { name = "loc105" position = { 235 0 0 } rotation = { 180 0 90 }}
	locator = { name = "loc106" position = { -235 0 0 } rotation = { 180 180 -90 }}
	
	
	
	attach = { "loc103" = "stellar_crusher_ring_entity"}
	attach = { "loc104" = "stellar_crusher_ring_entity"}
	attach = { "loc105" = "stellar_crusher_part_01_entity"}
	attach = { "loc106" = "stellar_crusher_part_01_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "stellar_crusher_02_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 15 -45 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 15 45 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { -102.5 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 90 }}
	
	
	
	attach = { "loc101" = "stellar_crusher_ring_small_entity"}
	attach = { "loc102" = "stellar_crusher_ring_small_entity"}
	attach = { "loc107" = "stellar_crusher_ring_2_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "stellar_crusher_02_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 15 -45 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 15 45 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 15 -7.5 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 15 7.5 0 }}
	locator = { name = "loc105" position = { 235 0 0 } rotation = { 180 0 90 }}
	locator = { name = "loc106" position = { -235 0 0 } rotation = { 180 180 -90 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { -102.5 0 0 }}
	
	
	
	attach = { "loc101" = "stellar_crusher_ring_small_entity"}
	attach = { "loc102" = "stellar_crusher_ring_small_entity"}
	attach = { "loc103" = "stellar_crusher_ring_entity"}
	attach = { "loc104" = "stellar_crusher_ring_entity"}
	attach = { "loc105" = "stellar_crusher_part_01_entity"}
	attach = { "loc106" = "stellar_crusher_part_01_entity"}
	attach = { "loc107" = "stellar_crusher_ring_2_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "stellar_crusher_03_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 15 -45 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 15 45 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 15 -7.5 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 15 7.5 0 }}
	locator = { name = "loc105" position = { 235 0 0 } rotation = { 180 0 90 }}
	locator = { name = "loc106" position = { -235 0 0 } rotation = { 180 180 -90 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { -102.5 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 90 }}
	
	
	
	attach = { "loc101" = "stellar_crusher_ring_small_entity"}
	attach = { "loc102" = "stellar_crusher_ring_small_entity"}
	attach = { "loc103" = "stellar_crusher_ring_entity"}
	attach = { "loc104" = "stellar_crusher_ring_entity"}
	attach = { "loc105" = "stellar_crusher_part_01_entity"}
	attach = { "loc106" = "stellar_crusher_part_01_entity"}
	attach = { "loc107" = "stellar_crusher_ring_2_entity"}
	attach = { "loc108" = "stellar_beams_entity"}

	
	scale = 0.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}


entity = {
	name = "barren_terraform_1_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "barren_terraform_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 45 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 -45 0 }}
	locator = { name = "loc104" position = { 47 0 0 } rotation = { -180 0 90 }}
	locator = { name = "loc105" position = { -47 0 0 } rotation = { 0 0 90 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "barren_terraform_1_ring_entity"}
	attach = { "loc102" = "barren_terraform_1_ring_entity"}
	attach = { "loc104" = "barren_terraform_platform"}
	attach = { "loc105" = "barren_terraform_platform"}

	
	scale = 1.05 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "barren_terraform_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "barren_terraformer_frame_entity"}

	
	scale = 1.05 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "barren_terraform_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 45 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 -45 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc104" position = { 47 0 0 } rotation = { -180 0 90 }}
	locator = { name = "loc105" position = { -47 0 0 } rotation = { 0 0 90 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "barren_terraform_1_ring_entity"}
	attach = { "loc102" = "barren_terraform_1_ring_entity"}
	attach = { "loc103" = "barren_terraformer_frame_entity"}
	attach = { "loc104" = "barren_terraform_platform"}
	attach = { "loc105" = "barren_terraform_platform"}

	
	scale = 1.05 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_1_partial_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	
	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_1_partial_rotated_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 90 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "huge_sphere_1_partial_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_1_polar_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 15 0 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 45 0 0 }}	
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 60 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 75 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 105 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 120 0 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 135 0 0 }}	
	locator = { name = "loc111" position = { 0 0 0 } rotation = { 150 0 0 }}
	locator = { name = "loc112" position = { 0 0 0 } rotation = { 165 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc102" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc103" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc104" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc105" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc106" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc107" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc108" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc109" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc110" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc111" = "huge_sphere_1_partial_rotated_entity"}
	attach = { "loc112" = "huge_sphere_1_partial_rotated_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_frame_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring		
	
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	
	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_frame_tilt_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 90 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "huge_sphere_habitable_frame_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_frame_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 7.5 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 15 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = {  22.5 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 30 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 }rotation = { 37.5 0 0 }}	
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 45 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc105" = "huge_sphere_habitable_frame_tilt_entity"}
	attach = { "loc106" = "huge_sphere_habitable_frame_tilt_entity"}
	attach = { "loc107" = "huge_sphere_habitable_frame_tilt_entity"}
	attach = { "loc108" = "huge_sphere_habitable_frame_tilt_entity"}
	attach = { "loc109" = "huge_sphere_habitable_frame_tilt_entity"}
	attach = { "loc110" = "huge_sphere_habitable_frame_tilt_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_frame_6_final_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { -20 0 -380 } rotation = { 67.5 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "huge_sphere_habitable_frame_6_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_frame_6_final_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { -20 0 -380 } rotation = { 67.5 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "huge_sphere_habitable_frame_6_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring		
	
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc105" = "ringworld_sphere_habitable_entity"}
	attach = { "loc106" = "ringworld_sphere_habitable_entity"}
	attach = { "loc107" = "ringworld_sphere_habitable_entity"}
	attach = { "loc108" = "ringworld_sphere_habitable_entity"}
	attach = { "loc109" = "ringworld_sphere_habitable_entity"}
	
	
	scale = 1.5 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_tilt_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 90 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "huge_sphere_habitable_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_6_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring		
	
	locator = { name = "loc120" position = { 0 0 0 } rotation = { 3.75 0 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 7.5 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 11.25 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 15 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 18.75 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 22.5 0 0 }}	
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 26.25 0 0 }}
	locator = { name = "loc111" position = { 0 0 0 } rotation = { 30 0 0 }}
	locator = { name = "loc112" position = { 0 0 0 } rotation = { 33.75 0 0 }}
	locator = { name = "loc113" position = { 0 0 0 } rotation = { 37.5 0 0 }}
	locator = { name = "loc114" position = { 0 0 0 } rotation = { 41.25 0 0 }}
	locator = { name = "loc115" position = { 0 0 0 } rotation = { 45 0 0 }}	
	locator = { name = "loc116" position = { 0 0 0 } rotation = { 48.75 0 0 }}	

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }
		
	attach = { "loc120" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc105" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc106" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc107" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc108" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc109" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc110" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc111" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc112" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc113" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc114" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc115" = "huge_sphere_habitable_tilt_entity"}
	attach = { "loc116" = "huge_sphere_habitable_tilt_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_habitable_6_final_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { -20 0 -380 } rotation = { 67.5 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "huge_sphere_habitable_6_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "huge_sphere_1_entity"}
	attach = { "loc103" = "huge_sphere_1_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "huge_sphere_1_entity"}
	attach = { "loc102" = "huge_sphere_1_entity"}
	attach = { "loc103" = "huge_sphere_1_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 90 45 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 90 -45 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "huge_sphere_1_entity"}
	attach = { "loc102" = "huge_sphere_1_entity"}
	attach = { "loc103" = "huge_sphere_1_entity"}
	attach = { "loc105" = "huge_sphere_1_entity"}
	attach = { "loc106" = "huge_sphere_1_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_3_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 90 45 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 90 -45 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc105" = "huge_sphere_1_entity"}
	attach = { "loc106" = "huge_sphere_1_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_4_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 90 45 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 90 -45 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 0 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "huge_sphere_1_entity"}
	attach = { "loc102" = "huge_sphere_1_entity"}
	attach = { "loc103" = "huge_sphere_1_entity"}
	attach = { "loc105" = "huge_sphere_1_entity"}
	attach = { "loc106" = "huge_sphere_1_entity"}
	attach = { "loc107" = "huge_sphere_1_polar_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "huge_sphere_4_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 0 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }
		
	attach = { "loc107" = "huge_sphere_1_polar_entity"}

	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}



entity = {
	name = "dimension_drain_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { 0 151 0 } rotation = { 0 0 0 }}
	locator = { name = "loc108" position = { 0 153 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { 0 153 0 } rotation = { 0 90 0 }}
	locator = { name = "loc110" position = { 0 153 0 } rotation = { 0 0 90 }}
	
	attach = { "loc104" = "dimension_drain_core_entity"}
	attach = { "loc108" = "vortex_ring_entity"}
	attach = { "loc109" = "vortex_ring_entity"}
	attach = { "loc110" = "vortex_ring_entity"}
	
	
	scale = 3	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "dimension_drain_1_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { 0 151 0 } rotation = { 0 0 0 }}
	locator = { name = "loc108" position = { 0 153 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { 0 153 0 } rotation = { 0 90 0 }}
	locator = { name = "loc110" position = { 0 153 0 } rotation = { 0 0 90 }}
	
	attach = { "loc104" = "dimension_drain_core_entity"}
	attach = { "loc108" = "vortex_ring_entity"}
	attach = { "loc109" = "vortex_ring_entity"}
	attach = { "loc110" = "vortex_ring_entity"}
	
	
	scale = 3	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "dimension_drain_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 36 87 0 } rotation = { -90 0 90 }}
	locator = { name = "loc103" position = { -36 85 0 } rotation = { 90 0 -90 }}
	locator = { name = "loc104" position = { 0 151 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 119 0 } rotation = { 0 0 0 }}
	locator = { name = "loc108" position = { 0 153 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { 0 153 0 } rotation = { 0 90 0 }}
	locator = { name = "loc110" position = { 0 153 0 } rotation = { 0 0 90 }}
	
	attach = { "loc102" = "dimension_drain_capacitors_entity"}
	attach = { "loc103" = "dimension_drain_capacitors_entity"}
	attach = { "loc104" = "dimension_drain_core_entity"}
	attach = { "loc105" = "dimension_energy_entity"}
	attach = { "loc108" = "vortex_ring_entity"}
	attach = { "loc109" = "vortex_ring_entity"}
	attach = { "loc110" = "vortex_ring_entity"}
	
	
	scale = 3	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "dimension_drain_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 36 87 0 } rotation = { -90 0 90 }}
	locator = { name = "loc103" position = { -36 85 0 } rotation = { 90 0 -90 }}
	locator = { name = "loc105" position = { 0 119 0 } rotation = { 0 0 0 }}
	
	attach = { "loc102" = "dimension_drain_capacitors_entity"}
	attach = { "loc103" = "dimension_drain_capacitors_entity"}
	attach = { "loc105" = "dimension_energy_entity"}
	
	
	scale = 3	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}


entity = {
	name = "dimension_drain_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 100 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 36 80 0 } rotation = { -90 0 90 }}
	locator = { name = "loc103" position = { -36 80 0 } rotation = { 90 0 -90 }}
	locator = { name = "loc104" position = { 0 151 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 119 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 90 0 } rotation = { 0 0 0 }}
	locator = { name = "loc107" position = { 0 153 0 } rotation = { 0 0 0 }}
	locator = { name = "loc108" position = { 0 153 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { 0 153 0 } rotation = { 0 90 0 }}
	locator = { name = "loc110" position = { 0 153 0 } rotation = { 0 0 90 }}
	
	attach = { "loc101" = "dimension_drain_vortex_entity"}
	attach = { "loc102" = "dimension_drain_capacitors_entity"}
	attach = { "loc103" = "dimension_drain_capacitors_entity"}
	attach = { "loc104" = "dimension_drain_core_entity"}
	attach = { "loc105" = "dimension_energy_entity"}
	attach = { "loc106" = "dimension_portal_entity"}
	attach = { "loc107" = "dimension_drain_star_entity"}
	attach = { "loc108" = "vortex_ring_entity"}
	attach = { "loc109" = "vortex_ring_entity"}
	attach = { "loc110" = "vortex_ring_entity"}
	

	scale = 3	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.035 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "orchid_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.33 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "orchid_ring_small_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.25 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "orchid_ring_side_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.27 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "orchid_ring_top_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.27 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "giant_orchid_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 5 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 -5 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "orchid_ring_entity"}
	attach = { "loc102" = "orchid_ring_entity"}
	attach = { "loc103" = "orchid_ring_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "giant_orchid_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { 0 -50 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 50 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 15 0 0 } rotation = { 90 0 90 }}
	locator = { name = "loc107" position = { -15 0 0 } rotation = { -90 0 -90 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "orchid_ring_small_entity"}
	attach = { "loc105" = "orchid_ring_small_entity"}
	attach = { "loc106" = "orchid_ring_side_entity"}
	attach = { "loc107" = "orchid_ring_side_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "giant_orchid_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 5 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 -5 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 -50 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 50 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 15 0 0 } rotation = { 90 0 90 }}
	locator = { name = "loc107" position = { -15 0 0 } rotation = { -90 0 -90 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "orchid_ring_entity"}
	attach = { "loc102" = "orchid_ring_entity"}
	attach = { "loc103" = "orchid_ring_entity"}
	attach = { "loc104" = "orchid_ring_small_entity"}
	attach = { "loc105" = "orchid_ring_small_entity"}
	attach = { "loc106" = "orchid_ring_side_entity"}
	attach = { "loc107" = "orchid_ring_side_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_gigaforge_1_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "neutronium_gigaforge_core_entity"}
	
	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_gigaforge_1_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "neutronium_gigaforge_core_entity"}
	
	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_gigaforge_2_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 245 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 255 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "neutronium_gigaforge_core_entity"}
	attach = { "loc102" = "neutronium_ring_entity"}
	attach = { "loc104" = "neutronium_ring_entity"}
	attach = { "loc105" = "neutronium_ring_entity"}

	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_gigaforge_2_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 245 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 255 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc102" = "neutronium_ring_entity"}
	attach = { "loc104" = "neutronium_ring_entity"}
	attach = { "loc105" = "neutronium_ring_entity"}
	
	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_gigaforge_3_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc102" position = { 0 200 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }


	attach = { "loc102" = "neutronium_drill_entity"}

	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_gigaforge_3_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 200 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 250 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 245 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 255 0 } rotation = { 0 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "neutronium_gigaforge_core_entity"}
	attach = { "loc102" = "neutronium_drill_entity"}
	attach = { "loc103" = "neutronium_ring_entity"}
	attach = { "loc104" = "neutronium_ring_entity"}
	attach = { "loc105" = "neutronium_ring_entity"}
	
	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "neutronium_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.25	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "eng_megabase_ring"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.09	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "eng_megabase_station_1"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc103" position = { 0 18 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 -18 0 } rotation = { 0 180 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "eng_megabase_ring"}
	attach = { "loc102" = "eng_megabase_ring"}
	attach = { "loc103" = "engineering_station_part_entity"}
	attach = { "loc104" = "engineering_station_part_entity"}
	
	
	scale = 1	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "ring_habitat_01_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_entity"}
	attach = { "loc102" = "ringworld_sphere_entity"}
	attach = { "loc103" = "ringworld_sphere_entity"}
	attach = { "loc104" = "ringworld_sphere_entity"}
	attach = { "loc105" = "ringworld_sphere_entity"}
	attach = { "loc106" = "ringworld_sphere_entity"}
	attach = { "loc107" = "ringworld_sphere_entity"}
	attach = { "loc108" = "ringworld_sphere_entity"}
	attach = { "loc109" = "ringworld_sphere_entity"}
	attach = { "loc110" = "ringworld_sphere_entity"}
	attach = { "loc111" = "ringworld_sphere_entity"}
	attach = { "loc112" = "ringworld_sphere_entity"}
	
	
	scale = 0.09	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "zoo_ring_1"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_entity"}
	attach = { "loc102" = "ringworld_sphere_entity"}
	attach = { "loc103" = "ringworld_sphere_entity"}
	attach = { "loc104" = "ringworld_sphere_entity"}
	attach = { "loc105" = "ringworld_sphere_entity"}
	attach = { "loc106" = "ringworld_sphere_entity"}
	attach = { "loc107" = "ringworld_sphere_entity"}
	attach = { "loc108" = "ringworld_sphere_entity"}
	attach = { "loc109" = "ringworld_sphere_entity"}
	attach = { "loc110" = "ringworld_sphere_entity"}
	attach = { "loc111" = "ringworld_sphere_entity"}
	attach = { "loc112" = "ringworld_sphere_entity"}
	
	
	scale = 0.09	# change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "zoo_ring_2"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 -30 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 30 0 }}
	locator = { name = "loc103" position = { 0 -10 0 } rotation = { 0 180 0 }}
	locator = { name = "loc104" position = { 0 10 0 } rotation = { 0 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "zoo_ring_1"}
	attach = { "loc102" = "zoo_ring_1"}
	attach = { "loc103" = "massive_zoo_part_entity"}
	attach = { "loc104" = "massive_zoo_part_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "particle_accelerator_1"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.79 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_accelerators_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	
	
	scale = 1.25 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_compressors_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 245 0 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 -245 0 } rotation = { 0 180 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_compressors_part_entity"}
	attach = { "loc104" = "vortex_drain_compressors_part_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_energy_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc104" position = { 0 0 -250 } rotation = { 0 180 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_power_part_entity"}
	attach = { "loc104" = "vortex_drain_power_part_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_energytwo_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 -15 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_energy_entity"}
	attach = { "loc104" = "vortex_drain_energy_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_accelerator_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_accretion_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.6 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_generator_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_polartechring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_01_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 -15 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc107" = "vortex_drain_accelerator_ring_entity"}
	attach = { "loc108" = "vortex_drain_accelerator_ring_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_02_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 -15 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_accelerators_ring_entity"}
	attach = { "loc106" = "vortex_drain_energytwo_entity"}
	attach = { "loc107" = "vortex_drain_accelerator_ring_entity"}
	attach = { "loc108" = "vortex_drain_accelerator_ring_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_02_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_accelerators_ring_entity"}
	attach = { "loc106" = "vortex_drain_energytwo_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_03_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 -15 0 }}
	locator = { name = "loc112" position = { 0 80 0 } rotation = { 0 0 0 }}
	locator = { name = "loc113" position = { 0 -80 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_accelerators_ring_entity"}
	attach = { "loc106" = "vortex_drain_energytwo_entity"}
	attach = { "loc107" = "vortex_drain_accelerator_ring_entity"}
	attach = { "loc108" = "vortex_drain_accelerator_ring_entity"}
	attach = { "loc112" = "vortex_drain_accretion_ring_entity"}
	attach = { "loc113" = "vortex_drain_accretion_ring_entity"}
	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_03_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc112" position = { 0 80 0 } rotation = { 0 0 0 }}
	locator = { name = "loc113" position = { 0 -80 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	
	attach = { "loc112" = "vortex_drain_accretion_ring_entity"}
	attach = { "loc113" = "vortex_drain_accretion_ring_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_04_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 0 90 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 -15 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 90 90 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 65 0 }}
	locator = { name = "loc111" position = { 0 0 0 } rotation = { 0 115 0 }}
	locator = { name = "loc112" position = { 0 80 0 } rotation = { 0 0 0 }}
	locator = { name = "loc113" position = { 0 -80 0 } rotation = { 0 0 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "vortex_drain_accelerators_ring_entity"}
	attach = { "loc105" = "vortex_drain_compressors_entity"}
	attach = { "loc106" = "vortex_drain_energytwo_entity"}
	attach = { "loc107" = "vortex_drain_accelerator_ring_entity"}
	attach = { "loc108" = "vortex_drain_accelerator_ring_entity"}
	attach = { "loc109" = "vortex_drain_polartechring_entity"}
	attach = { "loc110" = "vortex_drain_generator_ring_entity"}
	attach = { "loc111" = "vortex_drain_generator_ring_entity"}
	attach = { "loc112" = "vortex_drain_accretion_ring_entity"}
	attach = { "loc113" = "vortex_drain_accretion_ring_entity"}


	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "vortex_drain_04_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 90 90 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 65 0 }}
	locator = { name = "loc111" position = { 0 0 0 } rotation = { 0 115 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	
	attach = { "loc105" = "vortex_drain_compressors_entity"}
	attach = { "loc109" = "vortex_drain_polartechring_entity"}
	attach = { "loc110" = "vortex_drain_generator_ring_entity"}
	attach = { "loc111" = "vortex_drain_generator_ring_entity"}

	
	scale = 1.2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

# solar ring, no mesh
entity = {
	name = "big_brain_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 0.85 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_dataring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 2 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_bigdataring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_seam_entity"}
	attach = { "loc103" = "ringworld_sphere_seam_entity"}
	attach = { "loc104" = "ringworld_sphere_seam_entity"}
	attach = { "loc105" = "ringworld_sphere_seam_entity"}
	attach = { "loc106" = "ringworld_sphere_seam_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_seam_entity"}
	attach = { "loc109" = "ringworld_sphere_seam_entity"}
	attach = { "loc110" = "ringworld_sphere_seam_entity"}
	attach = { "loc111" = "ringworld_sphere_seam_entity"}
	attach = { "loc112" = "ringworld_sphere_seam_entity"}
	
	
	scale = 2.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_bigtechring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 2.75 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_datasphere_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 22.5 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 45 0 }}
	locator = { name = "loc104" position = { 0 0 0 } rotation = { 0 67.5 0 }}
	locator = { name = "loc105" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 -22.5 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 -45 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 -67.5 0 }}
	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_dataring_entity"}
	attach = { "loc102" = "big_brain_dataring_entity"}
	attach = { "loc103" = "big_brain_dataring_entity"}
	attach = { "loc104" = "big_brain_dataring_entity"}
	attach = { "loc105" = "big_brain_dataring_entity"}
	attach = { "loc106" = "big_brain_dataring_entity"}
	attach = { "loc107" = "big_brain_dataring_entity"}
	attach = { "loc108" = "big_brain_dataring_entity"}
	
	
	scale = 0.8 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_polar_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
	locator = { name = "loc113" position = { 250 0 0 } rotation = { 180 90 90 }}
	locator = { name = "loc114" position = { -250 0 0 } rotation = { 0 -90 90 }}
		
		
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	attach = { "loc113" = "big_brain_part_entity"}
	attach = { "loc114" = "big_brain_part_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_computer_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
		
		
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_tech_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 0.95 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_main_ring_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}
	locator = { name = "loc104" position = { 0 0 250 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { -125 0 216.5 } rotation = { -30 0 0 }}
	locator = { name = "loc106" position = { -216.5 0 125 } rotation = { -60 0 0 }}
	locator = { name = "loc107" position = { -250 0 0 } rotation = { -90 0 0 }}
	locator = { name = "loc108" position = { -216.5 0 -125 } rotation = { -120 0 0 }}
	locator = { name = "loc109" position = { -125 0 -216.5 } rotation = { -150 0 0 }}	
	locator = { name = "loc110" position = { 0 0 -250 } rotation = { -180 0 0 }}
	locator = { name = "loc111" position = { 125 0 -216.5 } rotation = { -210 0 0 }}
	locator = { name = "loc112" position = { 216.5 0 -125 } rotation = { -240 0 0 }}
		
		
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_seam_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}
	attach = { "loc105" = "ringworld_sphere_tech_entity"}
	attach = { "loc106" = "ringworld_sphere_tech_entity"}
	attach = { "loc107" = "ringworld_sphere_seam_entity"}
	attach = { "loc108" = "ringworld_sphere_tech_entity"}
	attach = { "loc109" = "ringworld_sphere_tech_entity"}
	attach = { "loc110" = "ringworld_sphere_tech_entity"}
	attach = { "loc111" = "ringworld_sphere_tech_entity"}
	attach = { "loc112" = "ringworld_sphere_tech_entity"}
	
	
	scale = 2.25 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

# Two rings at a thirty degrees angle
entity = {
	name = "big_brain_01_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 165 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 15 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_ring_entity"}
	attach = { "loc102" = "big_brain_ring_entity"}

	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_02_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 165 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 -95 0 } rotation = { 0 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_ring_entity"}
	attach = { "loc102" = "big_brain_ring_entity"}
	attach = { "loc103" = "big_brain_polar_ring_entity"}
	attach = { "loc104" = "big_brain_computer_ring_entity"}
	attach = { "loc105" = "big_brain_computer_ring_entity"}

	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_02_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 -95 0 } rotation = { 0 0 0 }}

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc103" = "big_brain_polar_ring_entity"}
	attach = { "loc104" = "big_brain_computer_ring_entity"}
	attach = { "loc105" = "big_brain_computer_ring_entity"}

	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_03_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 165 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 -95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_ring_entity"}
	attach = { "loc102" = "big_brain_ring_entity"}
	attach = { "loc103" = "big_brain_polar_ring_entity"}
	attach = { "loc104" = "big_brain_computer_ring_entity"}
	attach = { "loc105" = "big_brain_computer_ring_entity"}
	attach = { "loc108" = "big_brain_datasphere_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_03_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			

	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc108" = "big_brain_datasphere_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_04_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 165 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 -95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 30 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 150 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_ring_entity"}
	attach = { "loc102" = "big_brain_ring_entity"}
	attach = { "loc103" = "big_brain_polar_ring_entity"}
	attach = { "loc104" = "big_brain_computer_ring_entity"}
	attach = { "loc105" = "big_brain_computer_ring_entity"}
	attach = { "loc106" = "big_brain_main_ring_entity"}
	attach = { "loc107" = "big_brain_main_ring_entity"}
	attach = { "loc108" = "big_brain_datasphere_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_04_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 30 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 150 0 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc106" = "big_brain_main_ring_entity"}
	attach = { "loc107" = "big_brain_main_ring_entity"}
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_05_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 0 0 0 } rotation = { 0 165 0 }}
	locator = { name = "loc102" position = { 0 0 0 } rotation = { 0 15 0 }}
	locator = { name = "loc103" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc104" position = { 0 95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc105" position = { 0 -95 0 } rotation = { 0 0 0 }}
	locator = { name = "loc106" position = { 0 0 0 } rotation = { 0 30 0 }}
	locator = { name = "loc107" position = { 0 0 0 } rotation = { 0 150 0 }}
	locator = { name = "loc108" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 4 0 }}
	locator = { name = "loc111" position = { 0 0 0 } rotation = { 0 -4 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "big_brain_ring_entity"}
	attach = { "loc102" = "big_brain_ring_entity"}
	attach = { "loc103" = "big_brain_polar_ring_entity"}
	attach = { "loc104" = "big_brain_computer_ring_entity"}
	attach = { "loc105" = "big_brain_computer_ring_entity"}
	attach = { "loc106" = "big_brain_main_ring_entity"}
	attach = { "loc107" = "big_brain_main_ring_entity"}
	attach = { "loc108" = "big_brain_datasphere_entity"}
	attach = { "loc109" = "big_brain_bigtechring_entity"}
	attach = { "loc110" = "big_brain_bigdataring_entity"}
	attach = { "loc111" = "big_brain_bigdataring_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

entity = {
	name = "big_brain_05_construction_entity"
	cull_radius = 1000
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc109" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc110" position = { 0 0 0 } rotation = { 0 4 0 }}
	locator = { name = "loc111" position = { 0 0 0 } rotation = { 0 -4 0 }}

	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc109" = "big_brain_bigtechring_entity"}
	attach = { "loc110" = "big_brain_bigdataring_entity"}
	attach = { "loc111" = "big_brain_bigdataring_entity"}
	
	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

# solar arc, no mesh
entity = {
	name = "solar_arc_entity"
	cull_radius = 500
	
	# Here I refer to position values as x,y,z from left to right
	# x,z are on the planetary plane, y is height
	# x = cos(rotation)*radius, y = 0, z = sin(rotation)*radius
	# eg. loc103 
	# cos(30) = 0.866 , sin(30) = 0.5
	# x =  250*0.866 = 216.5 , y = 0 , z = 250*0.5 = 125
	# rotate the ringworld chunk 30 degree iterations
	# planet plane ring			
	
	locator = { name = "loc101" position = { 250 0 0 } rotation = { 90 0 0 }}
	locator = { name = "loc102" position = { 216.5 0 125 } rotation = { 60 0 0 }}
	locator = { name = "loc103" position = { 125 0 216.5 } rotation = { 30 0 0 }}

	
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc101" = "ringworld_sphere_tech_entity"}
	attach = { "loc102" = "ringworld_sphere_tech_entity"}
	attach = { "loc103" = "ringworld_sphere_tech_entity"}
	attach = { "loc104" = "ringworld_sphere_tech_entity"}

	
	scale = 1 # change to increase or decrease distance between stars and rings, also effects planetary ring!
}

# Planetary ring, no mesh
entity = {
	name = "planetary_ring_entity"
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}

	attach = { "loc1" = "solar_ring_entity"}
	
	scale = 0.52 # reduced size to bring it closer to planet
}


###################################################
#Game Entities
###################################################

##################### Solar Rings #################
entity = {
	name = "big_brain_thingy_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 1000	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 10 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 20 0 }}
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 30 0 }}
	locator = { name = "loc5" position = { 0 0 0 } rotation = { 0 40 0 }}
	locator = { name = "loc6" position = { 0 0 0 } rotation = { 0 50 0 }}	
	locator = { name = "loc7" position = { 0 0 0 } rotation = { 0 60 0 }}
	locator = { name = "loc8" position = { 0 0 0 } rotation = { 0 70 0 }}
	locator = { name = "loc9" position = { 0 0 0 } rotation = { 0 80 0 }}	
	locator = { name = "loc10" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc11" position = { 0 0 0 } rotation = { 0 100 0 }}
	locator = { name = "loc12" position = { 0 0 0 } rotation = { 0 110 0 }}
	locator = { name = "loc13" position = { 0 0 0 } rotation = { 0 120 0 }}
	locator = { name = "loc14" position = { 0 0 0 } rotation = { 0 130 0 }}
	locator = { name = "loc15" position = { 0 0 0 } rotation = { 0 140 0 }}
	locator = { name = "loc16" position = { 0 0 0 } rotation = { 0 150 0 }}
	locator = { name = "loc17" position = { 0 0 0 } rotation = { 0 160 0 }}
	locator = { name = "loc18" position = { 0 0 0 } rotation = { 0 170 0 }}
	locator = { name = "loc19" position = { 0 0 0 } rotation = { 0 180 0 }}
	
	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "solar_ring_entity"}
	attach = { "loc2" = "solar_ring_entity"}
	attach = { "loc3" = "solar_ring_entity"}
	attach = { "loc4" = "solar_ring_entity"}
	attach = { "loc5" = "solar_ring_entity"}
	attach = { "loc6" = "solar_ring_entity"}
	attach = { "loc7" = "solar_ring_entity"}
	attach = { "loc8" = "solar_ring_entity"}
	attach = { "loc9" = "solar_ring_entity"}
	attach = { "loc10" = "solar_ring_entity"}
	attach = { "loc11" = "solar_ring_entity"}
	attach = { "loc12" = "solar_ring_entity"}
	attach = { "loc13" = "solar_ring_entity"}
	attach = { "loc14" = "solar_ring_entity"}
	attach = { "loc15" = "solar_ring_entity"}
	attach = { "loc16" = "solar_ring_entity"}
	attach = { "loc17" = "solar_ring_entity"}
	attach = { "loc18" = "solar_ring_entity"}
	attach = { "loc19" = "solar_ring_entity"}
	
	scale = 3
}
# 1 ring w/ star mesh
entity = {
	name = "solar_ring1_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 500	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}

	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	#attach our ringworld pieces to the locations we just created
	attach = { "loc1" = "solar_ring_entity"}
	
	scale = 1
}
# 2 ring w/ star mesh
entity = {
	name = "solar_ring2_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 1000	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}

	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	#attach our ringworld pieces to the locations we just created
	attach = { "loc1" = "solar_ring_entity"}
	attach = { "loc2" = "solar_ring_entity"}
	
	scale = 1
}
# 3 ring w/ star mesh
entity = {
	name = "solar_ring3_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 1000	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 0 90 }}

	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	#attach our ringworld pieces to the locations we just created
	attach = { "loc1" = "solar_ring_entity"}
	attach = { "loc2" = "solar_ring_entity"}
	attach = { "loc3" = "solar_ring_entity"}
	scale = 1
}
# 4 ring w/ star mesh
entity = {
	name = "solar_ring4_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 1000	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 22.5 0 }}

	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 45 0 }}
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 67.5 0 }}
	
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 -67.5 0 }}
	
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 -45 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 -22.5 0 }}

	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "solar_ring_entity"}
	attach = { "loc2" = "solar_ring_entity"}
	attach = { "loc3" = "solar_ring_entity"}
	attach = { "loc4" = "solar_ring_entity"}
	
	scale = 1
}
entity = {
	name = "solar_ring4grid_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 1000	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}

	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 0 45 }}
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 0 -45 }}

	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "solar_ring_entity"}
	attach = { "loc2" = "solar_ring_entity"}
	attach = { "loc3" = "solar_ring_entity"}
	attach = { "loc4" = "solar_ring_entity"}
	
	scale = 1
}
entity = {
	name = "solar_ring5_entity"
	pdxmesh = "rwc_star_mesh"
	cull_radius = 1000	

	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 10 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 20 0 }}
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 30 0 }}
	locator = { name = "loc5" position = { 0 0 0 } rotation = { 0 40 0 }}
	locator = { name = "loc6" position = { 0 0 0 } rotation = { 0 50 0 }}	
	locator = { name = "loc7" position = { 0 0 0 } rotation = { 0 60 0 }}
	locator = { name = "loc8" position = { 0 0 0 } rotation = { 0 70 0 }}
	locator = { name = "loc9" position = { 0 0 0 } rotation = { 0 80 0 }}	
	locator = { name = "loc10" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc11" position = { 0 0 0 } rotation = { 0 100 0 }}
	locator = { name = "loc12" position = { 0 0 0 } rotation = { 0 110 0 }}
	locator = { name = "loc13" position = { 0 0 0 } rotation = { 0 120 0 }}
	locator = { name = "loc14" position = { 0 0 0 } rotation = { 0 130 0 }}
	locator = { name = "loc15" position = { 0 0 0 } rotation = { 0 140 0 }}
	locator = { name = "loc16" position = { 0 0 0 } rotation = { 0 150 0 }}
	locator = { name = "loc17" position = { 0 0 0 } rotation = { 0 160 0 }}
	locator = { name = "loc18" position = { 0 0 0 } rotation = { 0 170 0 }}
	locator = { name = "loc19" position = { 0 0 0 } rotation = { 0 180 0 }}
	
	# idle animations, add to state if you want to add animations
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "solar_ring_entity"}
	attach = { "loc2" = "solar_ring_entity"}
	attach = { "loc3" = "solar_ring_entity"}
	attach = { "loc4" = "solar_ring_entity"}
	attach = { "loc5" = "solar_ring_entity"}
	attach = { "loc6" = "solar_ring_entity"}
	attach = { "loc7" = "solar_ring_entity"}
	attach = { "loc8" = "solar_ring_entity"}
	attach = { "loc9" = "solar_ring_entity"}
	attach = { "loc10" = "solar_ring_entity"}
	attach = { "loc11" = "solar_ring_entity"}
	attach = { "loc12" = "solar_ring_entity"}
	attach = { "loc13" = "solar_ring_entity"}
	attach = { "loc14" = "solar_ring_entity"}
	attach = { "loc15" = "solar_ring_entity"}
	attach = { "loc16" = "solar_ring_entity"}
	attach = { "loc17" = "solar_ring_entity"}
	attach = { "loc18" = "solar_ring_entity"}
	attach = { "loc19" = "solar_ring_entity"}
	
	scale = 3
}

################# Planetary Arc ###################
# Horizontal Planetary arc, no mesh
entity = {
	name = "planetary_arc1_entity"
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}

	attach = { "loc1" = "solar_arc_entity"}
	
	scale = 0.52 # reduced size to bring it closer to planet
}

entity = {
	name = "planetary_arc2_entity"
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 90 0 0 }}

	attach = { "loc1" = "solar_arc_entity"}
	
	scale = 0.52 # reduced size to bring it closer to planet
}

entity = {
	name = "planetary_arc3_entity"
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 180 0 0 }}

	attach = { "loc1" = "solar_arc_entity"}
	
	scale = 0.52 # reduced size to bring it closer to planet
}

entity = {
	name = "planetary_arc4_entity"
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 270 0 0 }}

	attach = { "loc1" = "solar_arc_entity"}
	
	scale = 0.52 # reduced size to bring it closer to planet
}

################# Planetary Rings ##################

# 1 Ring entity with planet mesh
entity = {
	name = "planetary_ring1_entity"
	pdxmesh = "rwc_planet_mesh"	
	cull_radius = 500
		
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	
	default_state = "idle"
	#added events to rotate ring
	state = { name = "idle" animation = "idle" }
		

	attach = { "loc1" = "planetary_ring_entity"}
	
	scale = 1 
}

# 2 Ring entity with planet mesh
entity = {
	name = "planetary_ring2_entity"
	pdxmesh = "rwc_planet_mesh"	
	cull_radius = 500		
		
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }} #rotated 90 to orient the second ring 90
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "planetary_ring_entity"}
	attach = { "loc2" = "planetary_ring_entity"}
	
	scale = 1 
}

# 3 Ring w/ Planet
entity = {
	name = "planetary_ring3_entity"
	pdxmesh = "rwc_planet_mesh"	
	cull_radius = 500		
		
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 0 90 }}
	
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "planetary_ring_entity"}
	attach = { "loc2" = "planetary_ring_entity"}
	attach = { "loc3" = "planetary_ring_entity"}
	
	scale = 1 
}

# 4 ring entity w/ planet
entity = {
	name = "planetary_ring4_entity"
	pdxmesh = "rwc_planet_mesh"	
	cull_radius = 500
			
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 45 0 }}  
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 -45 0 }} 

	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "planetary_ring_entity"}
	attach = { "loc2" = "planetary_ring_entity"}
	attach = { "loc3" = "planetary_ring_entity"}
	attach = { "loc4" = "planetary_ring_entity"}
	
	scale = 1 
}

# 4 ring (grid) entity w/ planet
entity = {
	name = "planetary_ring4grid_entity"
	pdxmesh = "rwc_planet_mesh"	
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 0 45 }}  
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 0 -45 }} 
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "planetary_ring_entity"}
	attach = { "loc2" = "planetary_ring_entity"}
	attach = { "loc3" = "planetary_ring_entity"}
	attach = { "loc4" = "planetary_ring_entity"}
	
	scale = 1 
}

# 5 ring (grid) entity w/ planet
entity = {
	name = "planetary_ring5_entity"
	pdxmesh = "rwc_planet_mesh"	
	cull_radius = 500
		
	# planet plane ring	
	locator = { name = "loc1" position = { 0 0 0 } rotation = { 0 0 0 }}
	locator = { name = "loc2" position = { 0 0 0 } rotation = { 0 90 0 }}
	locator = { name = "loc3" position = { 0 0 0 } rotation = { 0 0 45 }}  
	locator = { name = "loc4" position = { 0 0 0 } rotation = { 0 0 -45 }} 
	locator = { name = "loc5" position = { 0 0 0 } rotation = { 0 0 90 }} 
	default_state = "idle"
	state = { name = "idle" animation = "idle" }

	attach = { "loc1" = "planetary_ring_entity"}
	attach = { "loc2" = "planetary_ring_entity"}
	attach = { "loc3" = "planetary_ring_entity"}
	attach = { "loc4" = "planetary_ring_entity"}
	attach = { "loc5" = "planetary_ring_entity"}

	scale = 1 
}