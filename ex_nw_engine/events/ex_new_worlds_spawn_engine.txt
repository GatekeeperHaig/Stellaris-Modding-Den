namespace = ex_new_worlds_spawn_engine

event = { #this event triggers on game start and monthly pulse
	id = ex_new_worlds_spawn_engine.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	#This event fires only once.
		
	immediate = {				
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			random_owned_planet = { 
				limit = { is_homeworld = yes }
				solar_system = { 
					set_star_flag = homeworld_system
					every_neighboring_system = { set_star_flag = homeworld_surrounding_system }
				}
			}
		}				
		every_planet = { 
			limit = { 
				is_star = no
			}	
			if = {
				limit = {
					is_planet_class = pc_gas_giant 
					has_moon = yes
				}
				every_moon = { set_planet_flag = gas_giant_moon }
			}			
		}	
		every_planet = {
			limit = {				
				solar_system = { 
					starting_system = no
					NOR = {
						has_star_flag = empire_home_system
						has_star_flag = sol_system
						has_star_flag = deneb_system
						has_star_flag = custom_system
						has_star_flag = homeworld_system
						has_star_flag = homeworld_surrounding_system						
					}					
				}
				is_capital = no
				is_homeworld = no
			}
			planet_event = { id = ex_new_worlds_spawn_engine.1 }
		}	
	}
}

planet_event = { 
	id = ex_new_worlds_spawn_engine.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { 
			limit = { is_star = yes }
			adjust_star_size = yes	
		}	
		solar_system = { #this extends support for mods that add binary and trinary systems
			random_planet = { limit = { is_star = yes } set_planet_flag = star_1 save_event_target_as = system_star_1 } 
			if = {
				limit = { any_planet = { is_star = yes NOT = { has_planet_flag = star_1 } } }
				random_planet = { limit = { is_star = yes NOT = { has_planet_flag = star_1 } } set_planet_flag = star_2 save_event_target_as = system_star_2 } 
			}	
			if = {
				limit = { any_planet = { is_star = yes NOR = { has_planet_flag = star_1 has_planet_flag = star_2 } } }
				random_planet = { limit = { is_star = yes NOR = { has_planet_flag = star_1 has_planet_flag = star_2 } } set_planet_flag = star_3 save_event_target_as = system_star_3 } 
			}	
		}			
		if = {
			limit = { is_vanilla_uninhabitable_planet = yes	}
			ex_new_worlds_uninhabitable_planets_spawn_table = yes
			adjust_planet_size = yes
		}	
		if = {
			limit = { is_vanilla_habitable_planet = yes	}
			ex_new_worlds_habitable_planets_spawn_table = yes
			if = {
				limit = { 
					OR = {
						has_owner = no
						AND = {
							has_owner = yes
							owner = { is_ai = yes }
						}
					}
				}
				planet_modifier_cleanup_table = yes 
				planet_modifier_spawn_table = yes
			}					
			if = {
				limit = { any_tile = { has_blocker = yes } }
				every_tile = {
					limit = { has_blocker = yes }
					tile_blocker_cleanup_table = yes
					tile_blocker_spawn_table = yes
				}	
			}	
			if = {
				any_tile = { is_orbital_tile = no has_deposit = yes has_building = no } 
				every_tile = { 
					limit = { is_orbital_tile = no has_deposit = yes has_building = no tile_has_any_strategic_resource = no }
					resource_spawn_table = yes
				}
			}			
			if = { #change presapient/primitive species
				limit = { 
					any_tile = { has_pop = yes }
					OR = {
						any_pop = { is_presapient_pop = yes } 
						AND = {
							exists = owner
							owner = { is_country_type = primitive }
						}
					}	
				}
				random_pop = {
					limit = {
						OR = {
							is_presapient_pop = yes 
							AND = {
								exists = owner
								owner = { is_country_type = primitive }
							}	
						}
					}	
					species_change_table = yes
				}					
			}	
		}
	}
}	