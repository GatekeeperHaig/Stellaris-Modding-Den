namespace = cgm_pe_colonization_automation

event = { #on_monthly_pulse
	id = cgm_pe_colonization_automation.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { has_global_flag = cgm_colonization_automation_enabled }
	
	immediate = { 
		every_country = { 
			limit = { 
				OR = { 
					is_ai = yes
					has_country_flag = cgm_colonization_automation_country_enabled				
				}				
				OR = { 
					is_country_type = default
					is_country_type = awakened_fallen_empire
				}			
				any_owned_ship = { 
					is_ship_class = shipclass_colonizer 
					NOT = { has_ship_flag = assigned_colonizer }
				}
				any_planet_within_border = { 
					NOR = { 
						exists = owner
						has_planet_flag = colonizer_assigned
						has_modifier = holy_planet
					}					
					is_colonizable = yes 
					is_colony = no 		
					is_under_colonization = no
					can_colonize = { who = prev status = yes }	
				}
			}		
			country_event = { id = cgm_pe_colonization_automation.2 days = 1 random = 20 } 
		}
	}
}
country_event = { 
	id = cgm_pe_colonization_automation.2
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = { 	
		set_variable = { which = available_colony_targets value = 0 }
		every_planet_within_border = { 
			limit = { 
				NOR = { 
					exists = owner					
					has_planet_flag = colonizer_assigned
					has_modifier = holy_planet
				}					
				is_colonizable = yes 
				is_colony = no 		
				is_under_colonization = no
				can_colonize = { who = root status = yes }	
				habitability = { who = root.species value > 0.19 } 
			}
			prev = { change_variable = { which = available_colony_targets value = 1 } }
			set_planet_flag = cgm_colonization_target
			if = { 
				limit = { NOT = { has_planet_flag = cgm_colonization_processed } }
				set_colonization_value = yes				
				set_timed_planet_flag = { flag = cgm_colonization_processed days = 3600 }				
			}	
		}
		set_variable = { which = available_colony_ships value = 0 }
		every_owned_ship = { 
			limit = { is_ship_class = shipclass_colonizer NOT = { has_ship_flag = assigned_colonizer } }
			prev = { change_variable = { which = available_colony_ships value = 1 } }
		}	
		while = { 
			limit = { 
				check_variable = { which = available_colony_ships value > 0 }
				check_variable = { which = available_colony_targets value > 0 }
			}	
			random_owned_ship = { 
				limit = { 
					is_ship_class = shipclass_colonizer
					NOT = { has_ship_flag = assigned_colonizer } 
				}					
				species = { save_event_target_as = cgm_colonizing_species }
				save_event_target_as = cgm_colonizer
				log = "[this.GetName] Ship Logged"
				if = { 
					limit = { 
						root = { 
							any_planet_within_border = {
								OR = { 
									habitability = { who = event_target:cgm_colonizing_species value > 0.29 }
									cgm_planet = yes
								}
								colonization_candidate_prerequisite = yes																	
							}	
						}
					}
					log = "[this.GetName] Suitable Planet Exists"
					root =  { 
						if = { 
							limit = { 
								any_planet_within_border = {
									habitability = { who = event_target:cgm_colonizing_species value > 0.59 }
									colonization_candidate_prerequisite = yes							
								}												
							}	
							random_planet_within_border = {
								limit = { 
									colonization_candidate_prerequisite = yes
									habitability = { who = event_target:cgm_colonizing_species value > 0.59 }																		
									NOR = { 
										root = { 
											any_planet_within_border = { 
												NOT = { is_same_value = prevprev } 
												colonization_candidate_prerequisite = yes
												habitability = { who = event_target:cgm_colonizing_species value > 0.59 }
												check_variable = { which = colonization_value value > prevprev } 
											}
										}
										has_planet_flag = colonizer_assigned
										
									}
								}
								save_event_target_as = cgm_colonization_target
								remove_planet_flag = cgm_colonization_target
								set_timed_planet_flag = { flag = colonizer_assigned days = 1080 }
								log = "[this.GetName] is suitable planet"
							}								
						}						
						else_if = { 
							limit = { 
								any_planet_within_border = {
									colonization_candidate_prerequisite = yes
									habitability = { who = event_target:cgm_colonizing_species value > 0.49 }
								}												
							}	
							random_planet_within_border = {
								limit = { 
									colonization_candidate_prerequisite = yes
									habitability = { who = event_target:cgm_colonizing_species value > 0.49 }
									NOR = { 
										root = { 
											any_planet_within_border = { 
												NOT = { is_same_value = prevprev } 
												colonization_candidate_prerequisite = yes
												habitability = { who = event_target:cgm_colonizing_species value > 0.49 }
												check_variable = { which = colonization_value value > prevprev } 
											}
										}
										has_planet_flag = colonizer_assigned										
									}
								}
								save_event_target_as = cgm_colonization_target
								remove_planet_flag = cgm_colonization_target
								set_timed_planet_flag = { flag = colonizer_assigned days = 1080 }
								log = "[this.GetName] is suitable planet"
							}								
						}	
						else_if = { 
							limit = { 
								any_planet_within_border = {
									habitability = { who = event_target:cgm_colonizing_species value > 0.39 }
									colonization_candidate_prerequisite = yes
								}												
							}	
							random_planet_within_border = {
								limit = { 
									habitability = { who = event_target:cgm_colonizing_species value > 0.39 }
									colonization_candidate_prerequisite = yes																		
									NOR = { 
										root = { 
											any_planet_within_border = { 
												NOT = { is_same_value = prevprev } 
												colonization_candidate_prerequisite = yes
												habitability = { who = event_target:cgm_colonizing_species value > 0.39 }
												check_variable = { which = colonization_value value > prevprev } 
											}
										}
										has_planet_flag = colonizer_assigned										
									}
								}
								save_event_target_as = cgm_colonization_target
								remove_planet_flag = cgm_colonization_target
								set_timed_planet_flag = { flag = colonizer_assigned days = 1080 }
								log = "[this.GetName] is suitable planet"
							}								
						}							
						else_if = { 
							limit = { 
								any_planet_within_border = {
									habitability = { who = event_target:cgm_colonizing_species value > 0.29 }
									colonization_candidate_prerequisite = yes
								}												
							}	
							random_planet_within_border = {
								limit = { 
									habitability = { who = event_target:cgm_colonizing_species value > 0.29 }
									colonization_candidate_prerequisite = yes																	
									NOR = { 
										root = { 
											any_planet_within_border = { 
												NOT = { is_same_value = prevprev } 
												has_planet_flag = cgm_colonization_target
												colonization_candidate_prerequisite = yes
												habitability = { who = event_target:cgm_colonizing_species value > 0.29 }
												check_variable = { which = colonization_value value > prevprev } 
											}
										}
										has_planet_flag = colonizer_assigned
										
									}
								}
								save_event_target_as = cgm_colonization_target
								remove_planet_flag = cgm_colonization_target
								set_timed_planet_flag = { flag = colonizer_assigned days = 1080 }
								log = "[this.GetName] is suitable planet"
							}								
						}	
						else_if = { 
							limit = { 
								any_planet_within_border = {
									OR = { 
										habitability = { who = event_target:cgm_colonizing_species value > 0.19 }
										cgm_planet = yes
									}	
									colonization_candidate_prerequisite = yes
								}												
							}	
							random_planet_within_border = {
								limit = { 
									OR = { 
										habitability = { who = event_target:cgm_colonizing_species value > 0.19 }
										cgm_planet = yes
									}
									colonization_candidate_prerequisite = yes																		
									NOR = { 
										root = { 
											any_planet_within_border = { 
												NOT = { is_same_value = prevprev } 
												colonization_candidate_prerequisite = yes
												habitability = { who = event_target:cgm_colonizing_species value > 0.19 }
												check_variable = { which = colonization_value value > prevprev } 
											}
										}
										has_planet_flag = colonizer_assigned
										
									}
								}
								save_event_target_as = cgm_colonization_target
								remove_planet_flag = cgm_colonization_target
								set_timed_planet_flag = { flag = colonizer_assigned days = 1080 }
								log = "[this.GetName] is suitable planet"
							}								
						}
					}
					set_timed_ship_flag = { flag = assigned_colonizer days = 1080 }										
					root = { 
						change_variable = { which = available_colony_targets value = -1 }
						change_variable = { which = available_colony_ships value = -1 }
					}						
					fleet = { 
						fleet_event = { id = cgm_pe_colonization_automation.4 }
					}	
					root = { log = "[this.GetName] repetition finished" }	 
				}
				else = { 
					root = { 
						change_variable = { which = available_colony_ships value = -1 } 
						log = "[this.GetName] repetition finished"
					} 
				}
			}	
		}
	}
}	

fleet_event = { 
	id = cgm_pe_colonization_automation.4
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = { 
		queue_actions = { 
			repeat = {
				max_iterations = 1		
				find_closest_system = { 
					trigger = { 
						id = cgm_pe_fleet_actions_trigger.1
						any_planet = { 
							is_same_value = event_target:cgm_colonization_target 
						}	
					}
					found_system = { 
						move_to = this							
						find_closest_planet = { 
							trigger = { 
								id = cgm_pe_fleet_actions_trigger.2	
								is_same_value = event_target:cgm_colonization_target
							}	
							found_planet = { 
								move_to = this
								orbit_planet = this	
								wait = { duration = 10 }
								effect = { 
									id = cgm_pe_fleet_actions_effect.1
									start_colony = {
										owner = root.owner
										species = event_target:cgm_colonizing_species
									}
									root = { delete_fleet = this } 
								}	
							}
						}	
					}
				}
			}							
		}	
	}						
}	