#Floating Jobs
eludium_expert = {	
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_eludium_mines
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_sr_miners
		produces = {
			sr_eludium = 2
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_edict = mining_subsidies
				}
			}
			energy = 0.5
		}
	}

	weight = {
		weight = @specialist_job_weight # Important job
		mult = value:job_weights_modifier|JOB|mote_harvester|RESOURCE|volatile_motes|
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
			NOT = { has_slavery_type = { type = slavery_indentured } }
		}
		modifier = {
			factor = 2
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { has_technology = tech_droid_workers }
		}
		modifier = {
			factor = 200
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { NOT = { has_technology = tech_droid_workers } }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
	}
}

eludium_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_eludium_mines

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_sr_miners
		produces = {
			sr_eludium = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|mote_harvesting_drone|RESOURCE|volatile_motes|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}	

#Graveyard Jobs
graveyard_driller = {	
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_graveyard_well
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	
	resources = {
		category = planet_sr_miners
		produces = {
			sr_tiyanki_parts = 2
		}
	}

	weight = {
		weight = @specialist_job_weight # Important job
		mult = value:job_weights_modifier|JOB|mote_harvester|RESOURCE|volatile_motes|
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
			NOT = { has_slavery_type = { type = slavery_indentured } }
		}
		modifier = {
			factor = 2
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { has_technology = tech_droid_workers }
		}
		modifier = {
			factor = 200
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { NOT = { has_technology = tech_droid_workers } }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
	}
}

graveyard_drone = {	
	category = complex_drone
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_graveyard_well

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	possible = { can_think = yes }
	
	resources = {
		category = planet_sr_miners
		produces = {
			sr_tiyanki_parts = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|mote_harvesting_drone|RESOURCE|volatile_motes|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}	

#Crucible Jobs
crucible_foundry = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_foundry_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_metallurgists

		#Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_crucible }
			}
			alloys = 3
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_crucible }
			}
			energy = 4
		}

		#Clean Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_clean_crucible }
			}
			alloys = 3.5
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_clean_crucible }
			}
			energy = 4
		}

		#Clean Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_shroud_crucible }
			}
			alloys = 4
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_shroud_crucible }
			}
			energy = 4
			sr_zro = 0.1
		}

		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
			}
			alloys = 2
		}
		upkeep = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
			}
			energy = 2
		}
		upkeep = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
			}
			energy = 4
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight # Fairly important job
		mult = value:job_weights_modifier|JOB|foundry|RESOURCE|alloys|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = foundry
		}
	}
}

crucible_fabricator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists

		#Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_crucible }
			}
			alloys = 4
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_crucible }
			}
			energy = 5
		}

		#Clean Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_clean_crucible }
			}
			alloys = 4.5
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_clean_crucible }
			}
			energy = 5
		}

		#Clean Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_shroud_crucible }
			}
			alloys = 5
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_shroud_crucible }
			}
			energy = 5
			sr_zro = 0.1
		}
		
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
			}
			alloys = 2
		}
		upkeep = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
			}
			energy = 2
		}
		upkeep = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
			}
			energy = 4
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}

		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|fabricator|RESOURCE|alloys|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}

crucible_alloy_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists

		#Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_crucible }
			}
			alloys = 3
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_crucible }
			}
			energy = 4
		}

		#Clean Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_clean_crucible }
			}
			alloys = 3.5
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_clean_crucible }
			}
			energy = 4
		}

		#Clean Crucible
		produces = {
			trigger = {
				planet = { is_planet_class = pc_shroud_crucible }
			}
			alloys = 4
		}
		upkeep = {
			trigger = {
				planet = { is_planet_class = pc_shroud_crucible }
			}
			energy = 4
			sr_zro = 0.1
		}
		
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
			}
			alloys = 2
		}
		upkeep = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
			}
			energy = 2
		}
		upkeep = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
			}
			energy = 4
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|alloy_drone|RESOURCE|alloys|
	}
}

#Techno Jobs
pd_lm_refiner = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_biosynth_lm_refinery
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_refiners
		produces = {
			sr_living_metal = 2
		}
		upkeep = {
			exotic_gases = 1
			volatile_motes = 1
			rare_crystals = 1
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|chemist|RESOURCE|volatile_motes|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = chemist
		}
	}
}

pd_lm_refiner_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_biosynth_lm_refinery

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_refiners
		produces = {
			sr_living_metal = 2
		}
		upkeep = {
			exotic_gases = 1
			volatile_motes = 1
			rare_crystals = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|chemist_drone|RESOURCE|volatile_motes|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}