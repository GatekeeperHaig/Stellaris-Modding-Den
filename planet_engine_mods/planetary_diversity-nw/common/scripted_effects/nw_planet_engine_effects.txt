#do not change this file unless you know what you are doing, it contains effects used by the engine to perform various tasks.
terraforming_switch = {
	from = {
		if = { 
			limit = { NOT = { has_modifier = adapted_environ } }
			add_modifier = { modifier = "adapted_environ" days = -1 }
			reroll_deposits = yes				
		}
		if = { 
			limit = { has_modifier = terraforming_candidate }
			remove_modifier = terraforming_candidate				
		}
	}
}
marginal_switch = {
	from = {
		if = { 
			limit = { NOT = { has_modifier = marginal_environ } }
			add_modifier = { modifier = "marginal_environ" days = -1 }
			reroll_deposits = yes				
		}
		if = { 
			limit = { has_modifier = defrost_candidate }
			remove_modifier = defrost_candidate				
		}
		if = { 
			limit = { has_modifier = detox_candidate }
			remove_modifier = detox_candidate				
		}
		if = { 
			limit = { has_modifier = subterranean_icy_candidate }
			remove_modifier = subterranean_icy_candidate				
		}
	}
}
subterranean_switch = {
	from = {
		if = { 
			limit = { NOT = { has_modifier = underground_colony } }
			add_modifier = { modifier = "underground_colony" days = -1 }
			reroll_deposits = yes				
		}
		if = { 
			limit = { has_modifier = subterranean_rocky_candidate }
			remove_modifier = subterranean_rocky_candidate				
		}
		if = { 
			limit = { has_modifier = subterranean_icy_candidate }
			remove_modifier = subterranean_icy_candidate				
		}
		if = { 
			limit = { has_modifier = defrost_candidate }
			remove_modifier = defrost_candidate				
		}
	}
}
adapted_switch = {
	from = {
		if = { 
			limit = { has_modifier = adapted_environ }
			remove_modifier = adapted_environ
		}
	}
}
make_mammalian = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = MAM
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		

}		
make_avian = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = AVI
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		
}	
make_molluscoid = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = MOL
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		

}		
make_fungoid = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = FUN
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		

}		
make_arthropoid = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = ART
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		

}		
make_reptilian = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = REP
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		

}		
make_humanoid = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = HUM
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		
}		
make_plantoid = {
	random_owned_pop = {
		limit = { 
			is_robot_pop = no
			is_mammalian = no				
			is_exact_same_species = owner_species
		}	
		species = { save_event_target_as = target_species } 
		create_species = {
			name = this
			plural = this
			class = PLANT
			portrait = random
			homeworld = prev
			traits = this
			sapient = yes
			is_mod = no
			immortal = no
		}	
	}	
	every_owned_pop = {
		limit = { is_same_species = event_target:target_species }	
		change_species = last_created					
	}
	owner = { change_dominant_species = { species = last_created change_all = yes } }		

}		
remove_and_count_vanilla_regular_planet_modifiers = {
	set_variable = { which = pm_points value = 0 }
	if = {
		limit = { has_modifier = hazardous_weather }
		remove_modifier = hazardous_weather
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = dangerous_wildlife }
		remove_modifier = dangerous_wildlife
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = weak_magnetic_field }
		remove_modifier = weak_magnetic_field
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = strong_magnetic_field }
		remove_modifier = strong_magnetic_field
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = unstable_tectonics }
		remove_modifier = unstable_tectonics
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = tidal_locked }
		remove_modifier = tidal_locked
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = chthonian_planet }
		remove_modifier = chthonian_planet
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = asteroid_impacts }
		remove_modifier = asteroid_impacts
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = extensive_moon_system }
		remove_modifier = extensive_moon_system
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = carbon_world }
		remove_modifier = carbon_world
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = wild_storms }
		remove_modifier = wild_storms
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = low_gravity }
		remove_modifier = low_gravity
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = high_gravity }
		remove_modifier = high_gravity
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = mineral_rich }
		remove_modifier = mineral_rich
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = ultra_rich }
		remove_modifier = ultra_rich
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = mineral_poor }
		remove_modifier = mineral_poor
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = titanic_life }
		remove_modifier = titanic_life
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = asteroid_belt }
		remove_modifier = asteroid_belt
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = natural_beauty }
		remove_modifier = natural_beauty
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = atmospheric_aphrodisiac }
		remove_modifier = atmospheric_aphrodisiac
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = atmospheric_hallucinogen }
		remove_modifier = atmospheric_hallucinogen
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = lush_planet }
		remove_modifier = lush_planet
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = bleak_planet }
		remove_modifier = bleak_planet
		change_variable = { which = pm_points value = 1 }
	}
	if = {
		limit = { has_modifier = irradiated_planet }
		remove_modifier = irradiated_planet
		change_variable = { which = pm_points value = 1 }
	}
}
make_planet_size_5 = {
	while = { 
		limit = { planet_size > 5 }
		change_planet_size = -1
	}	
}
make_planet_size_6 = {
	while = { 
		limit = { planet_size < 6 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 6 }
		change_planet_size = -1
	}	
}
make_planet_size_7 = {
	while = { 
		limit = { planet_size < 7 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 7 }
		change_planet_size = -1
	}	
}
make_planet_size_8 = {
	while = { 
		limit = { planet_size < 8 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 8 }
		change_planet_size = -1
	}	
}
make_planet_size_9 = {
	while = { 
		limit = { planet_size < 9 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 9 }
		change_planet_size = -1
	}	
}
make_planet_size_10 = {
	while = { 
		limit = { planet_size < 10 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 10 }
		change_planet_size = -1
	}	
}
make_planet_size_11 = {
	while = { 
		limit = { planet_size < 11 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 11 }
		change_planet_size = -1
	}	
}
make_planet_size_12 = {
	while = { 
		limit = { planet_size < 12 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 12 }
		change_planet_size = -1
	}	
}
make_planet_size_13 = {
	while = { 
		limit = { planet_size < 13 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 13 }
		change_planet_size = -1
	}	
}
make_planet_size_14 = {
	while = { 
		limit = { planet_size < 14 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 14 }
		change_planet_size = -1
	}	
}
make_planet_size_15 = {
	while = { 
		limit = { planet_size < 15 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 15 }
		change_planet_size = -1
	}	
}
make_planet_size_16 = {
	while = { 
		limit = { planet_size < 16 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 16 }
		change_planet_size = -1
	}	
}
make_planet_size_17 = {
	while = { 
		limit = { planet_size < 17 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 17 }
		change_planet_size = -1
	}	
}
make_planet_size_18 = {
	while = { 
		limit = { planet_size < 18 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 18 }
		change_planet_size = -1
	}	
}
make_planet_size_19 = {
	while = { 
		limit = { planet_size < 19 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 19 }
		change_planet_size = -1
	}	
}
make_planet_size_20 = {
	while = { 
		limit = { planet_size < 20 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 20 }
		change_planet_size = -1
	}	
}
make_planet_size_21 = {
	while = { 
		limit = { planet_size < 21 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 21 }
		change_planet_size = -1
	}	
}
make_planet_size_22 = {
	while = { 
		limit = { planet_size < 22 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 22 }
		change_planet_size = -1
	}	
}
make_planet_size_23 = {
	while = { 
		limit = { planet_size < 23 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 23 }
		change_planet_size = -1
	}	
}
make_planet_size_24 = {
	while = { 
		limit = { planet_size < 24 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 24 }
		change_planet_size = -1
	}	
}
make_planet_size_25 = {
	while = { 
		limit = { planet_size < 25 }
		change_planet_size = 1
	}	
	while = { 
		limit = { planet_size > 25 }
		change_planet_size = -1
	}	
}

change_owner_species_to_this_planet_preference = {
    every_owned_pop = {
        limit = { is_exact_same_species = owner_species }
        modify_species = {
            species = this
            ideal_planet_class = prev                            
            base = none # makes this replace parent species
        }
    }
    owner = { change_dominant_species = { species = last_created change_all = yes } }
}
remove_negative_planet_modifiers = {
	if = {
		limit = { has_modifier = atmospheric_hallucinogen }
		remove_modifier = atmospheric_hallucinogen
	}
	if = {
		limit = { has_modifier = atmospheric_aphrodisiac }
		remove_modifier = atmospheric_aphrodisiac
	}
	if = {
		limit = { has_modifier = bleak_planet }
		remove_modifier = bleak_planet
	}
	if = {
		limit = { has_modifier = wild_storms }
		remove_modifier = wild_storms
	}
	if = {
		limit = { has_modifier = asteroid_impacts }
		remove_modifier = asteroid_impacts
	}
	if = {
		limit = { has_modifier = unstable_tectonics }
		remove_modifier = unstable_tectonics
	}
	if = {
		limit = { has_modifier = weak_magnetic_field }
		remove_modifier = weak_magnetic_field
	}
	if = {
		limit = { has_modifier = hazardous_weather }
		remove_modifier = hazardous_weather
	}
	if = {
		limit = { has_modifier = dangerous_wildlife }
		remove_modifier = dangerous_wildlife
	}
	if = {
		limit = { has_modifier = irradiated_planet }
		remove_modifier = irradiated_planet
	}
	if = {
		limit = { has_modifier = abandoned_terraforming }
		remove_modifier = abandoned_terraforming
		owner = { end_event_chain = "abandoned_terraforming_chain" }
	}
}

remove_uninhabitable_planet_modifiers = {
	if = {
		limit = { has_modifier = chthonian_planet }
		remove_modifier = chthonian_planet
	}
	if = {
		limit = { has_modifier = extensive_moon_system }
		remove_modifier = extensive_moon_system
	}
	if = {
		limit = { has_modifier = carbon_world }
		remove_modifier = carbon_world
	}
	if = {
		limit = { has_modifier = low_gravity }
		remove_modifier = low_gravity
	}
	if = {
		limit = { has_modifier = high_gravity }
		remove_modifier = high_gravity
	}
	if = {
		limit = { has_modifier = mineral_rich }
		remove_modifier = mineral_rich
	}
	if = {
		limit = { has_modifier = ultra_rich }
		remove_modifier = ultra_rich
	}
	if = {
		limit = { has_modifier = mineral_poor }
		remove_modifier = mineral_poor
	}
	if = {
		limit = { has_modifier = asteroid_belt }
		remove_modifier = asteroid_belt
	}
}

# This is used for uninhabitable worlds only
reroll_modifier = {
	if = {
		limit = { has_regular_vanilla_planet_modifier = yes }
		# if it had a modifier, it gets removed and replaced with the new rules with a chance of not getting one at all
		remove_uninhabitable_planet_modifiers = yes
		roll_modifier = yes
	}
	else_if = {
		limit = { NOT = { has_regular_vanilla_planet_modifier = yes } }
		random_list = {
			1 = {
				# 25% chance the planet will get at least a chance at a modifier if it had none to start with
				roll_modifier = yes
			}
			4 = {
				# do nothing
			}
		}
	}
}

roll_modifier = {
	if = {
		# Rocky worlds
		limit = {
			OR = {
				is_planet_class_pc_molten = yes
				is_planet_class_pc_barren = yes
				is_planet_class_pc_barren_cold = yes
				is_planet_class_pc_toxic = yes
				is_planet_class_pc_frozen = yes
				is_planet_class_pc_dwarf_planetoid = yes	
				is_planet_class_pc_radiated = yes
				is_planet_class_pc_volcanic = yes
				is_planet_class_pc_cold_reducing = yes
				is_planet_class_pc_hot_reducing = yes
				is_planet_class_pc_shattered = yes
				is_planet_class_pc_broken = yes
			}
		}
		random_list = {
			3 = {
				# Do nothing
			}
			0 = {
				# Add low gravity
				add_modifier = { modifier = low_gravity days = -1 }
				modifier = {
					add = 1
					planet_size < 14
				}
				modifier = {
					add = 2
					planet_size < 7
				}
			}
			0 = {
				# Add high gravity
				add_modifier = { modifier = high_gravity days = -1 }
				modifier = {
					add = 1
					planet_size > 19
				}
				modifier = {
					add = 2
					planet_size > 23
				}
			}
		}
		random_list = {
			3 = {
				# Do nothing
			}
			2 = {
				add_modifier = { modifier = mineral_poor days = -1 }
				modifier = {
					factor = 2
					has_planet_modifier = "pm_low_gravity"
				}
			}
			2 = {
				add_modifier = { modifier = mineral_rich days = -1 }
				modifier = {
					factor = 2
					has_planet_modifier = "pm_high_gravity"
				}
			}
			1 = {
				add_modifier = { modifier = ultra_rich days = -1 }
				modifier = {
					factor = 2
					has_planet_modifier = "pm_high_gravity"
				}
			}
			0 = {
				add_modifier = { modifier = carbon_world days = -1 }
				modifier = {
					add = 2
					has_planet_modifier = "pm_high_gravity"
				}
				modifier = {
					factor = 0
					NOR = {
						is_planet_class_pc_barren = yes
						is_planet_class_pc_barren_cold = yes
						is_planet_class_pc_radiated = yes
					}
				}
			}
			1 = {
				add_modifier = { modifier = chthonian_planet days = -1 }
				modifier = {
					add = 2
					planet_size > 15
				}
				modifier = {
					add = 2
					planet_size > 20
				}
				modifier = {
					factor = 0
					is_moon = yes
				}
				modifier = {
					factor = 0
					NOT = {	is_planet_class_pc_radiated = yes }
				}
			}
			1 = {
				add_modifier = { modifier = asteroid_belt days = -1 }
				set_ring = yes
				modifier = {
					factor = 0
					is_moon = yes
				}
				modifier = {
					factor = 0.25
					has_moon = yes
				}
				modifier = {
					factor = 2
					has_planet_modifier = "pm_low_gravity"
				}
				modifier = {
					factor = 2
					has_ring = yes
				}
			}
		}
	}
	else_if = {
		# Gas giants
		limit = { is_gas_giant = yes }
		random_list = {
			1 = {
				# Do nothing
			}
			2 = {
				add_modifier = { modifier = asteroid_belt days = -1 }
				set_ring = yes
				modifier = {
					factor = 0.5
					has_moon = yes
				}
				modifier = {
					factor = 0
					num_moons > 3
				}
			}
			0 = {
				add_modifier = { modifier = extensive_moon_system days = -1 }
				modifier = {
					add = 0.5
					num_moons = 2
				}
				modifier = {
					add = 2.5
					num_moons = 3
				}
				modifier = {
					add = 5
					num_moons = 4
				}
				modifier = {
					add = 10
					num_moons > 4
				}
			}
		}
	}
}