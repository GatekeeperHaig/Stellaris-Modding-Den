### Effects in this file are ran on country scope.
check_income = {
	if = { 
		limit = { 
			OR = {
				is_machine_empire = no
				is_servitor = yes
			}
		}	
		if = {
			limit = { 
				food > 0
				has_monthly_income = { resource = food value > 0 }
			}			
			if = { 
				limit = { check_variable = { which = positive_food_reserve_month value > 0 } }
				change_variable = { which = positive_food_reserve_month value = 1 }
				else = { set_variable = { which = positive_food_reserve_month value = 1 } }
			}			
			if = { 
				limit = { has_country_flag = is_food_starved }
				remove_country_flag = is_food_starved
			}		
			#count full reserve
			set_variable = { which = food_reserve value = 0 }		
			set_variable = { which = food_income value = 0 }
			while = { 
				limit = { food > 9999 }
				add_food = -10000
				change_variable = { which = food_reserve value = 10000 }
			}		
			while = { 
				limit = { food > 999 }
				add_food = -1000
				change_variable = { which = food_reserve value = 1000 }
			}
			while = { 
				limit = { food > 99 }
				add_food = -100
				change_variable = { which = food_reserve value = 100 }
			}		
			while = { 
				limit = { food > 9 }
				add_food = -10
				change_variable = { which = food_reserve value = 10 }
			}				
			while = { 
				limit = { food > 0 }
				add_food = -1
				change_variable = { which = food_reserve value = 1 }
			}						
			#count last month's income - only do this if previous month at least was non-negative, to avoid alerts
			if = { 
				limit = { 
					check_variable = { which = positive_food_reserve_month value > 1 }
					has_monthly_income = { resource = food amount > 4 }
				}					
				add_monthly_resource_mult = { resource = food value = 1.0}
				while = { 
					limit = { food > 9999 }
					add_food = -10000
					change_variable = { which = food_income value = 10000 }
				}		
				while = { 
					limit = { food > 999 }
					add_food = -1000
					change_variable = { which = food_income value = 1000 }
				}
				while = { 
					limit = { food > 99 }
					add_food = -100
					change_variable = { which = food_income value = 100 }
				}		
				while = { 
					limit = { food > 9 }
					add_food = -10
					change_variable = { which = food_income value = 10 }
				}				
				while = { 
					limit = { food > 0 }
					add_food = -1
					change_variable = { which = food_income value = 1 }
				}
			}	
			#restore reserve
			set_variable = { which = reserve_transport value = food_reserve }
			while = { 		
				limit = { check_variable = { which = reserve_transport value > 9999 } }
				add_food = 10000
				change_variable = { which = reserve_transport value = -10000 }		
			}	
			while = { 		
				limit = { check_variable = { which = reserve_transport value > 999 } }
				add_food = 1000
				change_variable = { which = reserve_transport value = -1000 }		
			}		
			while = { 		
				limit = { check_variable = { which = reserve_transport value > 99 } }
				add_food = 100
				change_variable = { which = reserve_transport value = -100 }		
			}		
			while = { 		
				limit = { check_variable = { which = reserve_transport value > 9 } }
				add_food = 10
				change_variable = { which = reserve_transport value = -10 }		
			}		
			while = { 		
				limit = { check_variable = { which = reserve_transport value > 0 } }
				add_food = 1
				change_variable = { which = reserve_transport value = -1 }		
			}			
			else = { 
				if = { 
					limit = { food < 1 }
					set_variable = { which = positive_food_reserve_month value = 0 } 
					set_country_flag = is_food_starved
				}					
				if = { 
					limit = { has_monthly_income = { resource = food amount < 5 } }
					change_variable = { which = food_weight value = 3 }
					if = { 
						limit = { 
							has_monthly_income = { resource = food value < 1 }
							OR = { 
								food < 1
								any_owned_planet = { 
									has_modifier = starvation
									has_orbital_bombardment = no
									has_ground_combat = no
									is_occupied_flag = no
								}	
							}							
						}	
						set_country_flag = is_food_starved
						change_variable = { which = food_weight value = 10 }
					}	
					if = {
						limit = { has_monthly_income = { resource = food value < -10 } }
						change_variable = { which = food_weight value = 4 }
					}
					if = {
						limit = { has_monthly_income = { resource = food value < -20 } }
						change_variable = { which = food_weight value = 5 }
					}	
				}
			}
		}
	}	
	if = {
		limit = { 
			energy > 0
			has_monthly_income = { resource = energy value > 0 }
		}			
		if = { 
			limit = { check_variable = { which = positive_energy_reserve_month value > 0 } }
			change_variable = { which = positive_energy_reserve_month value = 1 }
			else = { set_variable = { which = positive_energy_reserve_month value = 1 } }
		}			
		if = { 
			limit = { has_country_flag = is_energy_starved }
			remove_country_flag = is_energy_starved
		}		
		#count full reserve
		set_variable = { which = energy_reserve value = 0 }		
		set_variable = { which = energy_income value = 0 }
		while = { 
			limit = { energy > 9999 }
			add_energy = -10000
			change_variable = { which = energy_reserve value = 10000 }
		}		
		while = { 
			limit = { energy > 999 }
			add_energy = -1000
			change_variable = { which = energy_reserve value = 1000 }
		}
		while = { 
			limit = { energy > 99 }
			add_energy = -100
			change_variable = { which = energy_reserve value = 100 }
		}		
		while = { 
			limit = { energy > 9 }
			add_energy = -10
			change_variable = { which = energy_reserve value = 10 }
		}				
		while = { 
			limit = { energy > 0 }
			add_energy = -1
			change_variable = { which = energy_reserve value = 1 }
		}						
		#count last month's income - only do this if previous month at least was non-negative, to avoid alerts
		if = { 
			limit = { 
				check_variable = { which = positive_energy_reserve_month value > 1 }
				has_monthly_income = { resource = energy amount > 4 }
			}					
			add_monthly_resource_mult = { resource = energy value = 1.0}
			while = { 
				limit = { energy > 9999 }
				add_energy = -10000
				change_variable = { which = energy_income value = 10000 }
			}		
			while = { 
				limit = { energy > 999 }
				add_energy = -1000
				change_variable = { which = energy_income value = 1000 }
			}
			while = { 
				limit = { energy > 99 }
				add_energy = -100
				change_variable = { which = energy_income value = 100 }
			}		
			while = { 
				limit = { energy > 9 }
				add_energy = -10
				change_variable = { which = energy_income value = 10 }
			}				
			while = { 
				limit = { energy > 0 }
				add_energy = -1
				change_variable = { which = energy_income value = 1 }
			}
		}	
		#restore reserve
		set_variable = { which = reserve_transport value = energy_reserve }
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 9999 } }
			add_energy = 10000
			change_variable = { which = reserve_transport value = -10000 }		
		}	
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 999 } }
			add_energy = 1000
			change_variable = { which = reserve_transport value = -1000 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 99 } }
			add_energy = 100
			change_variable = { which = reserve_transport value = -100 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 9 } }
			add_energy = 10
			change_variable = { which = reserve_transport value = -10 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 0 } }
			add_energy = 1
			change_variable = { which = reserve_transport value = -1 }		
		}				
		else = { 
			if = { 
				limit = { energy < 1 }
				set_variable = { which = positive_energy_reserve_month value = 0 } 
				set_country_flag = is_energy_starved
			}					
			if = { 
				limit = { has_monthly_income = { resource = energy amount < 5 } }
				change_variable = { which = energy_weight value = 3 }
				if = { 
					limit = { 
						has_monthly_income = { resource = energy value < 1 }
						OR = { 
							energy < 1
							has_modifier = energy_deficit
						}							
					}	
					set_country_flag = is_energy_starved
					change_variable = { which = energy_weight value = 10 }
				}	
				if = {
					limit = { has_monthly_income = { resource = energy value < -10 } }
					change_variable = { which = energy_weight value = 4 }
				}
				if = {
					limit = { has_monthly_income = { resource = energy value < -20 } }
					change_variable = { which = energy_weight value = 5 }
				}	
			}
		}
	}
	if = {
		limit = { 
			minerals > 0
			has_monthly_income = { resource = minerals value > 0 }
		}			
		if = { 
			limit = { check_variable = { which = positive_minerals_reserve_month value > 0 } }
			change_variable = { which = positive_minerals_reserve_month value = 1 }
			else = { set_variable = { which = positive_minerals_reserve_month value = 1 } }
		}			
		if = { 
			limit = { has_country_flag = is_minerals_starved }
			remove_country_flag = is_minerals_starved
		}		
		#count full reserve
		set_variable = { which = minerals_reserve value = 0 }		
		set_variable = { which = minerals_income value = 0 }
		while = { 
			limit = { minerals > 9999 }
			add_minerals = -10000
			change_variable = { which = minerals_reserve value = 10000 }
		}		
		while = { 
			limit = { minerals > 999 }
			add_minerals = -1000
			change_variable = { which = minerals_reserve value = 1000 }
		}
		while = { 
			limit = { minerals > 99 }
			add_minerals = -100
			change_variable = { which = minerals_reserve value = 100 }
		}		
		while = { 
			limit = { minerals > 9 }
			add_minerals = -10
			change_variable = { which = minerals_reserve value = 10 }
		}				
		while = { 
			limit = { minerals > 0 }
			add_minerals = -1
			change_variable = { which = minerals_reserve value = 1 }
		}						
		#count last month's income - only do this if previous month at least was non-negative, to avoid alerts
		if = { 
			limit = { 
				check_variable = { which = positive_minerals_reserve_month value > 1 }
				has_monthly_income = { resource = minerals amount > 4 }
			}					
			add_monthly_resource_mult = { resource = minerals value = 1.0}
			while = { 
				limit = { minerals > 9999 }
				add_minerals = -10000
				change_variable = { which = minerals_income value = 10000 }
			}		
			while = { 
				limit = { minerals > 999 }
				add_minerals = -1000
				change_variable = { which = minerals_income value = 1000 }
			}
			while = { 
				limit = { minerals > 99 }
				add_minerals = -100
				change_variable = { which = minerals_income value = 100 }
			}		
			while = { 
				limit = { minerals > 9 }
				add_minerals = -10
				change_variable = { which = minerals_income value = 10 }
			}				
			while = { 
				limit = { minerals > 0 }
				add_minerals = -1
				change_variable = { which = minerals_income value = 1 }
			}
		}	
		#restore reserve
		set_variable = { which = reserve_transport value = minerals_reserve }
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 9999 } }
			add_minerals = 10000
			change_variable = { which = reserve_transport value = -10000 }		
		}	
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 999 } }
			add_minerals = 1000
			change_variable = { which = reserve_transport value = -1000 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 99 } }
			add_minerals = 100
			change_variable = { which = reserve_transport value = -100 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 9 } }
			add_minerals = 10
			change_variable = { which = reserve_transport value = -10 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 0 } }
			add_minerals = 1
			change_variable = { which = reserve_transport value = -1 }		
		}			
		if = { 
			limit = { 
				OR = {
					is_ai = yes
					has_policy_flag = building_automation_enabled 
				}
				has_monthly_income = { resource = minerals amount > 49 } 
				check_variable = { which = positive_minerals_reserve_month value > 2 }
			}	
			set_variable = { which = building_construction_budget value = minerals_income }
			if = { 
				limit = { is_ai = yes }
				multiply_variable = { which = building_construction_budget value = 0.2 }
				else = { 
					if = { 
						limit = { has_policy_flag = budget_preset_1 }
						multiply_variable = { which = building_construction_budget value = 0.1 }
						else = { 
							if = { 
								limit = { has_policy_flag = budget_preset_2 }
								multiply_variable = { which = building_construction_budget value = 0.2 }					
								else = { 
									if = { 
										limit = { has_policy_flag = budget_preset_3 }
										multiply_variable = { which = building_construction_budget value = 0.3 }												
									}
								}
							}
						}
					}
				}
			}
		}	
		else = { 
			if = { 
				limit = { minerals < 1 }
				set_variable = { which = positive_minerals_reserve_month value = 0 } 
				set_country_flag = is_minerals_starved
			}					
			if = { 
				limit = { has_monthly_income = { resource = minerals amount < 5 } }
				change_variable = { which = minerals_weight value = 3 }
				if = { 
					limit = { 
						has_monthly_income = { resource = minerals value < 1 }
						OR = { 
							minerals < 1
							has_modifier = mineral_deficit
						}							
					}	
					set_country_flag = is_minerals_starved
					change_variable = { which = minerals_weight value = 10 }
				}	
				if = {
					limit = { has_monthly_income = { resource = minerals value < -10 } }
					change_variable = { which = minerals_weight value = 4 }
				}
				if = {
					limit = { has_monthly_income = { resource = minerals value < -20 } }
					change_variable = { which = minerals_weight value = 5 }
				}	
			}
		}
	}
	#count stored society research and check income
	set_variable = { which = society_research_reserve value = 0 }		
	set_variable = { which = society_research_income value = 0 }
	while = { 
		limit = { stored_society_points > 9999 }
		add_society_research = -10000
		change_variable = { which = society_research_reserve value = 10000 }
	}		
	while = { 
		limit = { stored_society_points > 999 }
		add_society_research = -1000
		change_variable = { which = society_research_reserve value = 1000 }
	}
	while = { 
		limit = { stored_society_points > 99 }
		add_society_research = -100
		change_variable = { which = society_research_reserve value = 100 }
	}		
	while = { 
		limit = { stored_society_points > 9 }
		add_society_research = -10
		change_variable = { which = society_research_reserve value = 10 }
	}				
	while = { 
		limit = { stored_society_points > 0 }
		add_society_research = -1
		change_variable = { which = society_research_reserve value = 1 }
	}						
	add_monthly_resource_mult = { resource = society_research value = 1.0}
	while = { 
		limit = { stored_society_points > 9999 }
		add_society_research = -10000
		change_variable = { which = society_research_income value = 10000 }
	}		
	while = { 
		limit = { stored_society_points > 999 }
		add_society_research = -1000
		change_variable = { which = society_research_income value = 1000 }
	}
	while = { 
		limit = { stored_society_points > 99 }
		add_society_research = -100
		change_variable = { which = society_research_income value = 100 }
	}		
	while = { 
		limit = { stored_society_points > 9 }
		add_society_research = -10
		change_variable = { which = society_research_income value = 10 }
	}				
	while = { 
		limit = { stored_society_points > 0 }
		add_society_research = -1
		change_variable = { which = society_research_income value = 1 }
	}		
	#restore reserve
	set_variable = { which = reserve_transport value = society_research_reserve }
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 9999 } }
		add_society_research = 10000
		change_variable = { which = reserve_transport value = -10000 }		
	}	
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 999 } }
		add_society_research = 1000
		change_variable = { which = reserve_transport value = -1000 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 99 } }
		add_society_research = 100
		change_variable = { which = reserve_transport value = -100 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 9 } }
		add_society_research = 10
		change_variable = { which = reserve_transport value = -10 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 0 } }
		add_society_research = 1
		change_variable = { which = reserve_transport value = -1 }		
	}		

	#count stored physics research and check income
	set_variable = { which = physics_research_reserve value = 0 }		
	set_variable = { which = physics_research_income value = 0 }
	while = { 
		limit = { stored_physics_points > 9999 }
		add_physics_research = -10000
		change_variable = { which = physics_research_reserve value = 10000 }
	}		
	while = { 
		limit = { stored_physics_points > 999 }
		add_physics_research = -1000
		change_variable = { which = physics_research_reserve value = 1000 }
	}
	while = { 
		limit = { stored_physics_points > 99 }
		add_physics_research = -100
		change_variable = { which = physics_research_reserve value = 100 }
	}		
	while = { 
		limit = { stored_physics_points > 9 }
		add_physics_research = -10
		change_variable = { which = physics_research_reserve value = 10 }
	}				
	while = { 
		limit = { stored_physics_points > 0 }
		add_physics_research = -1
		change_variable = { which = physics_research_reserve value = 1 }
	}						
	add_monthly_resource_mult = { resource = physics_research value = 1.0}
	while = { 
		limit = { stored_physics_points > 9999 }
		add_physics_research = -10000
		change_variable = { which = physics_research_income value = 10000 }
	}		
	while = { 
		limit = { stored_physics_points > 999 }
		add_physics_research = -1000
		change_variable = { which = physics_research_income value = 1000 }
	}
	while = { 
		limit = { stored_physics_points > 99 }
		add_physics_research = -100
		change_variable = { which = physics_research_income value = 100 }
	}		
	while = { 
		limit = { stored_physics_points > 9 }
		add_physics_research = -10
		change_variable = { which = physics_research_income value = 10 }
	}				
	while = { 
		limit = { stored_physics_points > 0 }
		add_physics_research = -1
		change_variable = { which = physics_research_income value = 1 }
	}		
	#restore reserve
	set_variable = { which = reserve_transport value = physics_research_reserve }
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 9999 } }
		add_physics_research = 10000
		change_variable = { which = reserve_transport value = -10000 }		
	}	
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 999 } }
		add_physics_research = 1000
		change_variable = { which = reserve_transport value = -1000 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 99 } }
		add_physics_research = 100
		change_variable = { which = reserve_transport value = -100 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 9 } }
		add_physics_research = 10
		change_variable = { which = reserve_transport value = -10 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 0 } }
		add_physics_research = 1
		change_variable = { which = reserve_transport value = -1 }		
	}	
	#count stored engineering research and check income
	set_variable = { which = engineering_research_reserve value = 0 }		
	set_variable = { which = engineering_research_income value = 0 }
	while = { 
		limit = { stored_engineering_points > 9999 }
		add_engineering_research = -10000
		change_variable = { which = engineering_research_reserve value = 10000 }
	}		
	while = { 
		limit = { stored_engineering_points > 999 }
		add_engineering_research = -1000
		change_variable = { which = engineering_research_reserve value = 1000 }
	}
	while = { 
		limit = { stored_engineering_points > 99 }
		add_engineering_research = -100
		change_variable = { which = engineering_research_reserve value = 100 }
	}		
	while = { 
		limit = { stored_engineering_points > 9 }
		add_engineering_research = -10
		change_variable = { which = engineering_research_reserve value = 10 }
	}				
	while = { 
		limit = { stored_engineering_points > 0 }
		add_engineering_research = -1
		change_variable = { which = engineering_research_reserve value = 1 }
	}						
	add_monthly_resource_mult = { resource = engineering_research value = 1.0}
	while = { 
		limit = { stored_engineering_points > 9999 }
		add_engineering_research = -10000
		change_variable = { which = engineering_research_income value = 10000 }
	}		
	while = { 
		limit = { stored_engineering_points > 999 }
		add_engineering_research = -1000
		change_variable = { which = engineering_research_income value = 1000 }
	}
	while = { 
		limit = { stored_engineering_points > 99 }
		add_engineering_research = -100
		change_variable = { which = engineering_research_income value = 100 }
	}		
	while = { 
		limit = { stored_engineering_points > 9 }
		add_engineering_research = -10
		change_variable = { which = engineering_research_income value = 10 }
	}				
	while = { 
		limit = { stored_engineering_points > 0 }
		add_engineering_research = -1
		change_variable = { which = engineering_research_income value = 1 }
	}		
	#restore reserve
	set_variable = { which = reserve_transport value = engineering_research_reserve }
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 9999 } }
		add_engineering_research = 10000
		change_variable = { which = reserve_transport value = -10000 }		
	}	
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 999 } }
		add_engineering_research = 1000
		change_variable = { which = reserve_transport value = -1000 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 99 } }
		add_engineering_research = 100
		change_variable = { which = reserve_transport value = -100 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 9 } }
		add_engineering_research = 10
		change_variable = { which = reserve_transport value = -10 }		
	}		
	while = { 		
		limit = { check_variable = { which = reserve_transport value > 0 } }
		add_engineering_research = 1
		change_variable = { which = reserve_transport value = -1 }		
	}					
}		
### The effect below checks the resource requrements of the country
check_resource_requirements = {
	switch = {
		trigger = has_country_flag
		society_research_focus_factor_1 = { remove_country_flag = society_research_focus_factor_1 }
		society_research_focus_factor_2 = { remove_country_flag = society_research_focus_factor_2 }
		physics_research_focus_factor_1 = { remove_country_flag = physics_research_focus_factor_1 }
		physics_research_focus_factor_2 = { remove_country_flag = physics_research_focus_factor_2 }
		engineering_research_focus_factor_1 = { remove_country_flag = engineering_research_focus_factor_1 }
		engineering_research_focus_factor_2 = { remove_country_flag = engineering_research_focus_factor_2 }
		energy_focus_factor_1 = { remove_country_flag = energy_focus_factor_1 }
		energy_focus_factor_2 = { remove_country_flag = energy_focus_factor_2 }
		minerals_focus_factor_1 = { remove_country_flag = minerals_focus_factor_1 }
		minerals_focus_factor_2 = { remove_country_flag = minerals_focus_factor_2 }
		food_delimited = { remove_country_flag = food_delimited }
		food_focus_factor_1 = { remove_country_flag = food_focus_factor_1 }
		food_focus_factor_2 = { remove_country_flag = food_focus_factor_2 }
		food_focus_factor_3 = { remove_country_flag = food_focus_factor_3 }
		food_focus_factor_4 = { remove_country_flag = food_focus_factor_4 }
		unity_focus = { remove_country_flag = unity_focus }
	}
	if = {
		limit = {
			check_variable = { which = society_research_income value < physics_research_income }
			check_variable = { which = society_research_income value < engineering_research_income }
		}
		multiply_variable = { which = society_research_income value = 1.25 }
		if = {
			limit = {
				check_variable = { which = society_research_income value < physics_research_income }
				check_variable = { which = society_research_income value < engineering_research_income }
			}
			set_country_flag = society_research_focus_factor_2
			else = {
				if = {
					limit = {
						OR = {
							check_variable = { which = society_research_income value < physics_research_income }
							check_variable = { which = society_research_income value < engineering_research_income }
						}
					}
					set_country_flag = society_research_focus_factor_1
				}
			}
		}
		else = {
			if = {
				limit = {
					check_variable = { which = physics_research_income value < society_research_income }
					check_variable = { which = physics_research_income value < engineering_research_income }
				}
				multiply_variable = { which = physics_research_income value = 1.25 }
				if = {
					limit = {
						check_variable = { which = physics_research_income value < society_research_income }
						check_variable = { which = physics_research_income value < engineering_research_income }
					}
					set_country_flag = physics_research_focus_factor_2
					else = {
						if = {
							limit = {
								OR = {
									check_variable = { which = physics_research_income value < society_research_income }
									check_variable = { which = physics_research_income value < engineering_research_income }
								}
							}
							set_country_flag = physics_research_focus_factor_1
						}
					}
				}
				else = {
					if = {
						limit = {
							check_variable = { which = engineering_research_income value < society_research_income }
							check_variable = { which = engineering_research_income value < physics_research_income }
						}
						multiply_variable = { which = engineering_research_income value = 1.25 }
						if = {
							limit = {
								check_variable = { which = engineering_research_income value < society_research_income }
								check_variable = { which = engineering_research_income value < physics_research_income }
							}
							set_country_flag = engineering_research_focus_factor_2
							else = {
								if = {
									limit = {
										OR = {
											check_variable = { which = engineering_research_income value < society_research_income }
											check_variable = { which = engineering_research_income value < physics_research_income }
										}
									}
									set_country_flag = engineering_research_focus_factor_1
								}
							}
						}
					}
				}
			}
		}
	}
	if = {
		limit = {
			check_variable = { which = minerals_income value > 10 }
			check_variable = { which = energy_income value > 10 }
		}
		if = {
			limit = {
				check_variable = { which = minerals_income value > energy_income }
			}
			divide_variable = { which = minerals_income value = energy_income }
			if = {
				limit = {
					check_variable = { which = minerals_income value > 2 }
				}
				set_country_flag = energy_focus_factor_2
				else = {
					if = {
						limit = {
							check_variable = { which = minerals_income value > 1.49 }
						}
						set_country_flag = energy_focus_factor_1
					}
				}
			}
			else = {
				if = {
					limit = {
						check_variable = { which = energy_income value > minerals_income }
					}
					divide_variable = { which = energy_income value = minerals_income }
					if = {
						limit = {
							check_variable = { which = energy_income value > 2 }
						}
						set_country_flag = minerals_focus_factor_2
						else = {
							if = {
								limit = {
									check_variable = { which = energy_income value > 1.49 }
								}
								set_country_flag = minerals_focus_factor_1
							}
						}
					}
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				is_machine_empire = no
				is_servitor = yes				
				is_synth_empire = yes				
			}
			any_owned_pop = { is_colony_pop = yes is_robot_pop = no is_growing = yes }	
		}
		if = { 
			limit = { has_monthly_income = { resource = food value > 0 } }			
			set_variable = { which = num_growing_planets value = 0 }
			every_owned_planet = {
				limit = { is_colony = yes has_growing_pop = yes free_pop_tiles > 0 }
				prev = {
					change_variable = { which = num_growing_planets value = 1 }
				}
			}
			if = {
				limit = {
					check_variable = { which = num_growing_planets value > 0 }
				}
				set_variable = { which = food_requirment value = 0 }
				while = {
					limit = {
						check_variable = { which = num_growing_planets value > 0 }
					}
					change_variable = { which = food_requirment value = 100 }
					change_variable = { which = num_growing_planets value = -1 }
				}
				if = {
					limit = {
						check_variable = { which = food_requirment value > food_income }
					}
					set_country_flag = food_delimited
					else = {
						set_variable = { which = food_requirment_check value = food_requirment }
						multiply_variable = { which = food_requirment_check value = 1.25 }
						if = {
							limit = {
								check_variable = { which = food_requirment_check value > food_income }
							}
							set_country_flag = food_focus_factor_1
							else = {
								set_variable = { which = food_requirment_check value = food_requirment }
								multiply_variable = { which = food_requirment_check value = 1.5 }
								if = {
									limit = {
										check_variable = { which = food_requirment_check value > food_income }
									}
									set_country_flag = food_focus_factor_2
									else = {
										set_variable = { which = food_requirment_check value = food_requirment }
										multiply_variable = { which = food_requirment_check value = 1.75 }
										if = {
											limit = {
												check_variable = { which = food_requirment_check value > food_income }
											}
											set_country_flag = food_focus_factor_3
											else = {
												set_variable = { which = food_requirment_check value = food_requirment }
												multiply_variable = { which = food_requirment_check value = 2 }
												if = {
													limit = {
														check_variable = { which = food_requirment_check value > food_income }
													}
													set_country_flag = food_focus_factor_4
												}
											}
										}
									}
								}
							}
						}
					}
				}				
			}
		}
		else = { set_country_flag = food_delimited }
	}	
	if = {
		limit = {
			NOR = { has_country_flag = food_focus_factor_3 has_country_flag = food_focus_factor_4 has_country_flag = energy_focus_factor_2 has_country_flag = minerals_focus_factor_2 }
			has_monthly_income = { resource = energy value > 50 }
			has_monthly_income = { resource = minerals value > 200 }
		}
		set_country_flag = unity_focus
	}
}
calculate_number_of_required_shipyard_systems = {
	set_variable = { which = num_controlled_systems value = 0 }
	set_variable = { which = num_existing_shipyard_systems value = 0 }
	every_system_within_border = {
		prev = {
			change_variable = { which = num_controlled_systems value = 1 }
		}
		if = { 
			limit = { has_star_flag = shipyard_system }
			change_variable = { which = num_existing_shipyard_systems value = 1 }
		}	
	}
	set_variable = { which = required_shipyard_systems value = num_controlled_systems }
	divide_variable = { which = required_shipyard_systems value = 30 }
	divide_variable = { which = required_shipyard_systems value = 1000 }
	multiply_variable = { which = required_shipyard_systems value = 1000 }
	subtract_variable = { which = required_shipyard_systems value = num_existing_shipyard_systems }
}