	NGameplay = {
		DECADENCE_START = 20	# After this many years of being awakened, an awakened empire will experience decadence
		DECADENCE_CHANCE = 0.5	# Chance of decadence increasing each month (multiplied by total size of empire & subjects)
		DECADENCE_INCREASE = 2	# How much does decadence increase per time?
		DECADENCE_MAX = 100		# Max decadence
	
		FTL_MAGNET_DISTANCE = 50	# The distance at which ships will warp in when caught by an FTL snare
	
		FALLEN_EMPIRE_RESOURCE_STORAGE_MULT = 10
		FALLEN_EMPIRE_REPEATABLE_TECHS = 5
		FALLEN_EMPIRE_FLEET_POWER = 0.85
		CRISIS_FLEET_POWER = 0.75
		
		SHIP_SUBLIGHT_SPEED_MULT = 5 				# General speed multiplier for ship movement within solar systems
		MISSILE_SUBLIGHT_SPEED_MULT = 5 			# General speed multiplier for ship movement within solar systems

		CONSTRUCTION_SHIP_WORK_SPEED_MULT = 1	# Construction ship construction speed multiplier
		OUTPOST_STATION_BUILD_SPEED_MULT = 0.3	# Applied when building outpost stations

		LEADER_ADMIRAL_FLEET_COMBAT_BASE_EXPERIENCE					= 10 # Leader Admiral base experience from fleet combat
		LEADER_ADMIRAL_FLEET_COMBAT_EXPERIENCE_SCALE				= 0.4 # Scale factor used when calculating experience gain for Admiral
		LEADER_ADMIRAL_FLEET_COMBAT_SHIPS_KILLED_CONVERSION			= 0.25 # Scale factor for total number of ships killed after combat when calculating experience gain for Admiral
		LEADER_ADMIRAL_FLEET_COMBAT_SHIPS_LOST_CONVERSION			= 0.1 # Scale factor for total number of ships lost after combat when calculating experience gain for Admiral

		# War-score from fleet-battles = WAR_SCORE_SHIP_KILL_MUL * (WAR_SCORE_FLEET_COMBAT_WIN_BASE + ((loser_fleet_value_lost / loser_fleet_value_total) * (1 - ((winner_fleet_value_lost * WAR_SCORE_SHIP_KILL_WINNER_MUL) / winner_fleet_value_total))))
		WAR_SCORE_SHIP_KILL_MUL 			= 0.25		# Multiplier of warscore gained
		WAR_SCORE_SHIP_KILL_WINNER_MUL		= 0.75		# Multiplier of warscore loss for the sinking of ships for the winner
		WAR_SCORE_FLEET_COMBAT_WIN_BASE		= 0.0		# Base score for winning a fleet combat
		WAR_SCORE_PLANET_BASE				= 10.0		# Relative warscore value of a planet
		WAR_SCORE_PLANET_POP				= 0.5		# Relative warscore value of a planet for every Pop
		WAR_SCORE_OCCUPATION_MUL			= 1.5		# 150% warscore gained from completely occupying the opponents
		WAR_SCORE_PLANET_MIN 				= 5.0		# Warscore from 1 planet will never be less than this
		WAR_SCORE_WARGOAL_MULT				= 2.0		# Wargoal planets are worth this much more
		WAR_SCORE_MAJOR_WAR_MULT			= 0.33		# All warscore gains are multiplied by this in a major war
		WAR_SCORE_SUBJECT_MULT				= 0.5		# Planets of subjects have this multiplier attached to their warscore value
		WAR_SCORE_SUBJECT_FE_MULT			= 0.1		# Planets of Fallen/Awakened Empire subjects have this multiplier attached to their warscore value
		
		DEBRIS_BASE_COST					= 0	# Base cost of special project for analyzing debris
		DEBRIS_ANALYZED_AREA_POINTS			= 5	# Points * Level given for each component analyzed
		DEBRIS_ANALYZED_TECH_PROGRESS		= 0.10	# Tech progress added when analyzing component that require tech you don't have
		DEBRIS_DAYS							= 1800	# How many days the debris is visible for
		DEBRIS_RESEARCH_TIME				= 90	# How many days it takes to analyze 1 debris.

		BASE_FLEET_SIZE						= 10	# Number of ships allowed in a fleet at game start

		FEDERATION_FLEET_SIZE				= 0.2	# Federation fleet capacity is this % of all members' fleets

		START_REPARATION_TIMER_DAYS				= 30	# Number of days after taking damage before a ship can repair in orbit
		STATION_SELF_REPAIR_TIMER_DAYS			= 10	# Number of days after taking damage before a station will start self-repairing
		STATION_SELF_REPAIR_RATE				= 0.01 # How fast stations self-repair (% of max health each day)

		#SHIP_COST_RESOURCE = "minerals" # resource to pay ships with

		FLEET_MAX_SHIPS										= 500
		NAVY_SIZE_MAX										= 9999	# Max value of Naval Capacity
		NAVY_SIZE_BASE 										= 10	# Base value of Naval Capacity
		NAVY_SIZE_POP_MULT									= 0.20	# Mult value of Naval Capacity for each Pop
		NAVY_SIZE_SPACEPORT_LEVEL							= { 5 6 7 8 9 10 } # Naval Capacity per spaceport level
		NAVY_SIZE_HABITAT_ADD								= 8	# Per habitat
		
	}


	NShip = {	
		AGGRESSIVE_STANCE_MIN_POWER_MULT	= 0.2			# Fleets that are less than our military power x this will be ignored by aggressive fleets that are bombarding
	
		DESIGNER_WEAPON_PREF_MUL			= 1.33			# How much does weapon preference tags in the ship designer affect the weight it assigns a weapon?
		DESIGNER_WEAPON_STACKING_DIV		= 0.25			# The higher this is the more the ship designer will try to vary which weapon types are used on its sections
		
		ENERGY_MAINTENANCE_MUL				= 0.004		# Ship Maintenance Multiplier Percentage of the cost of the ship
		MINERAL_MAINTENANCE_MUL				= 0.004		# Ship Maintenance Multiplier Percentage of the cost of the ship
		REPAIR_RATE							= 0.01		# Repair rate per day
		ABANDONED_STATION_DECAY_RATE		= 0.003		# Abandoned stations lose this amount of health per day
		REPAIR_SHIELD_MUL					= 1.0		# Shields regen faster when ship is being repaired.
		POOR_MAINTENANCE_PENALTY			= 0.01		# 1% percent max hit points penalty each day for poor maintenance (energy < 0)
		
		FALLEN_EMPIRE_MAINTENANCE_MULT		= 0.25
		AWAKENED_FALLEN_EMPIRE_MAINTENANCE_MULT		= 0.5
		AWAKENED_FALLEN_EMPIRE_NAVAL_CAPACITY 	= 600
		AWAKENED_FALLEN_EMPIRE_NAVAL_PLANET_MIN 	= 10
		AWAKENED_FALLEN_EMPIRE_NAVAL_CAPACITY_PER_PLANET 	= 10
		FALLEN_EMPIRE_NAVAL_CAPACITY 	= 600
		
		STRIKE_CRAFT_COMBAT_REGEN 			= 0.2

		MOVE_SHIP_TO_FLEET_MAX_DIST			= 50.0

		COST_SECTION_MUL					= 0.25
	    COST_SECTION_BASE					= 50.0
	    COST_SECTION_ADD_SMALL_WEAPON_SLOT	= 10.0
		COST_SECTION_ADD_MEDIUM_WEAPON_SLOT	= 20.0
		COST_SECTION_ADD_LARGE_WEAPON_SLOT	= 30.0
		COST_SECTION_ADD_TORPEDO_WEAPON_SLOT = 20.0
		COST_SECTION_ADD_EXTRA_LARGE_WEAPON_SLOT	= 30.0
		COST_SECTION_ADD_AUX_WEAPON_SLOT	= 10.0
		COST_SECTION_ADD_SMALL_UTIL_SLOT	= 10.0
		COST_SECTION_ADD_MEDIUM_UTIL_SLOT	= 30.0
		COST_SECTION_ADD_LARGE_UTIL_SLOT	= 60.0
		COST_SECTION_ADD_AUX_UTIL_SLOT		= 10.0

		FLEET_MOVE_MAX_DIST_SHIPS			= 10.0		# Max distance that ships are allowed to travel before last ship

		FLEET_BASE_FORMATION_SCALE			= 2.0
		FLEET_BASE_FORMATION_DIV			= 10
		FLEET_FORMATION_WARP_MULT 			= 6.0
		FLEET_SIZE_FORMATION_WARP_DIV		= 3

		MOVE_TO_ACTION_THRESHOLD			= 5.0	# distance threshold used by move_to fleet action to determine when the fleet arrived

		MILITARY_POWER_HEALTH_WEIGHT		= 0.5
		MILITARY_POWER_SHIELD_WEIGHT		= 0.66	# compared to health
		MILITARY_POWER_DAMAGE_WEIGHT		= 0.5
		MILITARY_POWER_SCALE				= 0.12
		MILITARY_POWER_EXPONENT				= 0.75	# math: power = ( ( effective_health * damage_per_day ) ^ exponent ) * scale
		
		MILITARY_POWER_HIGH					= 10000
		MILITARY_POWER_REDUCE				= 0.05
		MILITARY_POWER_MAX_REDUCE			= 0.85
		
		# below values determine how large an effect special values such as shield penetration have on the military power of a weapon
		MILITARY_POWER_ARMOR_PENETRATION_WEIGHT = 1.0	# larger value = adds more military power
		MILITARY_POWER_SHIELD_PENETRATION_WEIGHT = 0.5
		MILITARY_POWER_SHIELD_DAMAGE_WEIGHT = 0.33		
		MILITARY_POWER_TRACKING_WEIGHT = -0.33	# at 0% tracking
		MILITARY_POWER_RANGE_DIV = 100	# smaller value = adds more military power
		MILITARY_POWER_MISSILE_MULT = 0.85		# overall military power of missiles is lowered due to being vulnerable to PD
		MILITARY_POWER_PD_MULT = 0.5		# overall military power of PD is lowered because they can only hit missiles
		
		DEFAULT_ARMOR_RATIO = 0.4
		DEFAULT_SHIELD_RATIO = 0.5
		MIN_COMBAT_SPEED_FOR_AFTERBURNERS = 1.25
		
		MILITARY_POWER_SPACEPORT_BASE_MULT		= 0.7
		MILITARY_POWER_SPACEPORT_LEVEL_MULT		= -0.05
		
		EXCESS_POWER_BONUS_THRESHOLD_MAX	= 1.0 	# 0.5 means 0-50% excess power linearly scales ship_excess_power modifier between 0-1.
		EXCESS_POWER_BONUS_THRESHOLD_MIN	= 0.05 # min value for excess power to be used.
	}

	NCombat = {
		# When ships are attacking they will try to stay at max range and orbit their target.
		# If the ship is closer than max range this value determines how fast it will "back off" in order to get to max range.
		# 0.0 means that the ship will not back off and orbit with whatever radius it already has
		# 1.0 means that the ship will prioritize orbit velocity the same as "back-off"-velocity. i.e a 45ยบ angle
		COMBAT_BACK_OFF_RATE					= 0.04
		
		FORMATION_POS_AHEAD_OF_PARENT			= 0.5

		SHIP_SMOOTH_ROTATION_THRESHOLD			= 3.141 # Used to smooth rotation rate of ships. equation is "y = x * ( min ( 1.0 x / SHIP_SMOOTH_ROTATION_THRESHOLD ) )" where x is the wanted delta rotation this tick and y the resulting delta rotation
		
		COMBAT_TARGET_STICKYNESS				= 1.5	# The higher this is, the less likely ships are to switch targets
		RANDOM_TARGETING_WEIGHT					= 0.5

		COMBAT_DETECT_RANGE_MULT				= 1.05	# Range to engage in combat with other ships is <fleets max attack range> * COMBAT_DETECT_RANGE_MULT
		COMBAT_DETECT_RANGE_MIN					= 10
		COMBAT_AREA_MIN_ATTACK_RADIUS			= 0.2
		COMBAT_EMERGENCY_FTL_PENALTY_HITPOINTS 	= 0.20 # x% of max hitpoints in penalty for doing ftl jump
		COMBAT_EMERGENCY_FTL_LOST_RISK 			= 0.01 # x% risk of ship becoming forever lost when jumping.
		COMBAT_EMERGENCY_FTL_SURVIVE_CHANCE 	= 0.50 # x% chance to survive with 1 health even if ship should have died
		COMBAT_EMERGENCY_FTL_WINDUP				= 2.0 	# how many days it takes from the button press to the actual jump. same timer for all FTL types
		COMBAT_BASE_DAYS_UNTIL_EMERGENCY_FTL 	= 30.0	# how many days a fleet should be in combat until they can emergency ftl
		CIVILIAN_EMERGENCY_FTL_MULT				= 0.25

		MISSILE_HIGH_CONTROL_DISTANCE				= 5.0 # if the missile is closer to the target than MISSILE_HIGH_CONTROL_DISTANCE it will turn sharply
		MISSILE_HIGH_CONTROL_INTERPOLATION_RANGE	= 5.0 # how long the missile will interpolate between "smooth controls" and "full control"
		MISSILE_BASE_ROTATION_SPEED					= 0.001 # base rotation rate of missiles in radians per tick
		MISSILE_RETARGET_CHANCE_START				= 100 # How likely a missile is to find a new target in range the first time its target is lost
		MISSILE_RETARGET_CHANCE_REDUCTION			= 35 # How much the chance for a missile to find a new target is reduced each retargeting after the first

		SHIP_TARGETING_NUM_SHOTS_FOR_LOW_HEALTH_BONUS = 5
		DAMAGE_REDUCTION = 70								# armor / DAMAGE_REDUCTION
		SIZE_MULTIPLIER_DAMAGE_REDUCTION_EFFECT = 0.15		# how much does ship size reduce damage reduction from armor (higher number = more armor required for same DR on a larger ship)
		DAMAGE_REDUCTION_MAX_SHIP_SIZE = 10		# ship sizes over this don't affect how much armor is needed
		DAMAGE_REDUCTION_HIGH = 0.75							# above this level of damage reduction require even more armor
		DAMAGE_REDUCTION_HIGH_SCALING = 0.5							
		DAMAGE_REDUCTION_MAX = 0.9							# can't have more damage reduction than this
	}
	
	NEconomy = {
		MILITARY_STATION_MAINTENANCE_MUL	= -0.25		# Monthly military station maintenance reduction

		WORMHOLE_STATION_MAINTENANCE 		= 0.25		# Monthly wormhole station maintenance
		CONSTRUCTION_SHIP_MAINTENANCE 		= 1.0 	# Monthly construction ship maintenance
		SCIENCE_SHIP_MAINTENANCE			= 1.0 	# Monthly science ship maintenance
		COLONY_SHIP_MAINTENANCE 			= 8.0 		# Monthly colony ship maintenance
		CONSTRUCTION_SHIP_PRODUCTION		= 100.0 	# Construction ship production cost
		SCIENCE_SHIP_PRODUCTION				= 100.0 	# Science ship production cost
		SPONSORED_COLONY_SHIP_COST_MULT		= 0.0	# Sponsored colony ship energy cost = colony ship mineral cost * (1 + MULT)
		FLEET_UPGRADE_TIME_COST_MULT		= 0.75		# Upgrade fleet cost
		FLEET_UPGRADE_MINERAL_COST_BASE		= 5.0		# mineral cost to upgrade a ship is always at least this regardless of relative design cost
		FLEET_UPGRADE_MINERAL_COST_MULT		= 1.0		# mineral cost of ship upgrade is abs( price difference between old and new designs * FLEET_UPGRADE_MINERAL_COST_MULT )
		OBSERVATION_STATION_MAINTENANCE		= 1.0		# Monthly observation station maintenance
		SPACEPORT_UPGRADE_COSTS				= { 200.0 250.0 300.0 350.0 400.0 } # Mineral costs for upgrading the spaceport
		SEVERE_DEFICIT_VALUE				= 0.8		# Balance/Income smaller than this value counts as severe
		OUTPOST_STATION_MINERAL_COST		= 200		# Mineral cost to build outpost
		OUTPOST_STATION_INFLUENCE_COST		= 0.0		# Influence cost to build outpost
		OUTPOST_STATION_MAINTENANCE			= 3		# Monthly outpost station EC maintenance
		OUTPOST_STATION_INFLUENCE_MAINTENANCE = 1.0	# Monthly outpost station Influence maintenance

	}

	NAI = {
		AI_NO_RETREAT_LIMIT = 3						# At fewer owner/controlled planets than this, the AI will fight to the death in their home systems
	
		CRISIS_THREAT_THRESHOLD_UPPER = 100			# At this crisis threat, AI drops other priorities and focuses on fighting the crisis
		CRISIS_THREAT_THRESHOLD_LOWER = 10			# Below this threshold, AI stops focusing on crisis fighting
	
		CRISIS_MILITARY_POWER_MULT_DEFAULT = 1.5		# AI willing to engage crisis factions at these odds normally
		CRISIS_MILITARY_POWER_MULT_CRISIS_FIGHTER = 0.6		# AI willing to engage crisis factions at these odds if they prioritize crisis fighting
		CRISIS_MILITARY_POWER_MULT_INHABITED_SYSTEM = 0.4		# AI willing to engage crisis factions at these odds in systems of others under attack by crisis
		CRISIS_MILITARY_POWER_MULT_OWN_SYSTEM = 0.33		# AI willing to engage crisis factions at these odds in their own systems
		CRISIS_MILITARY_POWER_MULT_DESPERATION = 0.10		# AI willing to engage crisis factions at these odds when down to their last few worlds
		
		BOSS_MILITARY_POWER = 40000			# The military power at which AI feels safe to engage a 'boss' creature
		FALLEN_EMPIRE_AVOID_DISTANCE = 100
	
		MAX_SHIPS_BUILD_PER_WEEK = 10					
		MAX_SHIPS_DISBAND_PER_WEEK = 5
		
		MIN_FLEET_FOR_OFFENSIVE = 2000
		
		WARLEADER_WARGOAL_FACTOR = 1.5					# AI is this much more likely to pick wargoals against the enemy war leader instead of their allies
	
		AI_AGGRESSIVENESS_LOW_MULT = 0.5		
		AI_AGGRESSIVENESS_HIGH_MULT = 2.0			
		AI_AGGRESSIVENESS_BASE = 25			# Base chance AI will declare a war (multiplied by personality aggressiveness score)
		AI_AGGRESSIVENESS_PROPAGATOR_BOXED_IN_MULT = 10	# When a warlike 'propagator' personality is boxed in aggression is multiplied by this value
		AI_AGGRESSIVENESS_BOXED_IN_MULT = 4	# When an AI can no longer peacefully expand aggression is multiplied by this value
		AI_AGGRESSIVENESS_NO_COLONY_TARGET_MULT = 2 # When an AI has no immediate colony targets and at least MAX_PLANETS_FOR_BUDGET_FACTOR planets (but is not boxed in) aggression is multiplied by this value
	
		AI_BUDGETING_START_YEARS = 15					# These variables are used for some of the AI's budgeting to ensure it prioritizes the right things early on
		AI_BUDGETING_MID_YEARS = 30
		AI_BUDGETING_LATE_YEARS = 50
	
		MILITARY_STATION_BUDGET_FRACTION = 0.05	# AI will spend this fraction of their income on military stations
		SAVINGS_BUDGET_FRACTION = 0.00 		# AI will spend this fraction of their income on savings (normally not needed as fleets in dock will result in energy surplus)
		ARMY_BUDGET_FRACTION = 0.05   			# AI will spend this fraction of their income on armies
		NAVY_BUDGET_FRACTION = 0.15 			# AI will spend this fraction of their income on ships
		STATION_BUDGET_FRACTION = 0.25 		# AI will spend this fraction of their income on stations
		BUILDING_BUDGET_FRACTION = 0.40 		# AI will spend this fraction of their income on buildings
		ROBOT_BUDGET_FRACTION = 0.10			# AI will spend this fraction of their income on robots (transfered to stations & buildings if they don't use robots)
		
		DANGER_BUDGET_FACTOR = 0.1				# When there are potential dangers increase navy budget by this amount
		SHIPSIZE_BUDGET_FACTOR = 0.025			# For each ship size unlocked increase navy budget by this amount
		NAVAL_CAPACITY_BUDGET_MAX = 100		# At this naval capacity AI puts max budget into ships
		PLANET_BUDGET_FACTOR = 0.20			# When AI has few planets it will decrease building/mil station budget by this and put it into colonies/stations instead
		MAX_PLANETS_FOR_BUDGET_FACTOR = 5		# At this amount of planets budget is normalized

		MINERAL_MILITARY_STATION_BUDGET_FRACTION = 0.04	# AI will spend this fraction of their stored minerals on military stations
		MINERAL_NAVY_BUDGET_FRACTION = 0.14 			# AI will spend this fraction of their stored minerals on ships
		MINERAL_STATION_BUDGET_FRACTION = 0.19			# AI will spend this fraction of their stored minerals on stations (used for spaceport instead when it needs a new spaceport)
		MINERAL_BUILDING_BUDGET_FRACTION = 0.24			# AI will spend this fraction of their stored minerals on buildings (used for spaceport instead when it needs a new spaceport)
		MINERAL_SPACEPORT_BUDGET_FRACTION = 0.04		# AI will spend this fraction of their stored minerals on spaceport modules
		MINERAL_COLONY_BUDGET_FRACTION = 0.14
		MINERAL_ARMY_BUDGET_FRACTION = 0.04				# AI will spend this fraction on armies
		MINERAL_TILE_BLOCKER_BUDGET_FRACTION = 0.04		# AI will spend this fraction on tile blockers
		MINERAL_ROBOT_BUDGET_FRACTION = 0.09			# AI will spend this fraction of their stored minerals on robots (transfered to buildings if they don't use robots)
		MINERAL_MEGASTRUCTURE_BUDGET_FRACTION = 0.09	# AI will spend this fraction of their stored minerals on megastructures (taken from stations & buildings)
		
		ROBOT_EMPIRE_EXTRA_ROBOT_BUDGET = 0.33			# If the empire is a machine/synthetic empire, this amount of all other budget is transfered into constructing robot pops
		
		DISBAND_THRESHOLD = 0.8			# If budget does not cover at least this fraction of the navy maintenance disband ships & stations
		MIN_NAVY_BUDGET = 4			# Always add this amount to the navy budget so we can have at least a few ships
		MIN_ARMY_BUDGET = 2			# Always add this amount to the army budget so we can have at least a few armies
		
		# Below values are increased when mineral storage capacity goes up
		ABS_MAX_MINERALS_STORED_MILITARY_STATIONS = 2000	# Max regardless of cap multiplier
		MAX_MINERALS_STORED_MILITARY_STATIONS = 1000	# Minerals AI will store for mil stations when it needs more
		MIN_MINERALS_STORED_MILITARY_STATIONS = 100	# Minerals AI will store for mil stations when it does not need more
		ABS_MAX_MINERALS_STORED_NAVY = 5000				# Max regardless of cap multiplier
		MAX_MINERALS_STORED_NAVY = 1000				# Minerals AI will store for navy when it needs more
		MIN_MINERALS_STORED_NAVY = 0				# Minerals AI will store for navy when it does not need more 
		ABS_MAX_MINERALS_STORED_SPACEPORT = 1000		# Max regardless of cap multiplier
		MAX_MINERALS_STORED_SPACEPORT = 500		# Minerals AI will store for spaceport when it needs more
		MIN_MINERALS_STORED_SPACEPORT = 250		# Minerals AI will store for spaceport when it does not need more
		# Above values are increased when mineral storage capacity goes up
		
		MAX_MINERALS_SPENT_ON_NAVY = 0.50			# Spend no more than this fraction of mineral income on navy maintenance

		EXPAND_NAVY_LIMIT_FACTOR = 4			# If the AI Navy maintenance is this much bigger than the opponents navy will not be expanded

		MIN_NAVY_SIZE_FOR_ADMIRAL = 10		# AI wants a navy of at least this fleetsize before buying an admiral

		ABORT_MISSION_LIMIT = 0.50				# MilitaryPower fraction below this level will result in AI escaping battle

		THREAT_TRUCE_MONTHS = 12				# AI will not consider the opponent a threat if this many months are left on a truce
		FLEET_BALANCE_THREAT = 0.5				# If FleetPower of AI / FleetPower of Enemy is lower than this AI will consider the country a threat
		ENERGY_MONTHS_FACTOR_WAR = 12			# Energy are supposed to last this many months when used to buy new ships in war
		ENEMY_FLEET_POWER_MULT = 1.2			# AI will need the the fleet power of the enemy multiplied by this value to become offensive in an offensive war
		ENEMY_ARMY_POWER_MULT = 1.0				# AI will need the the military power of the enemy multiplied by this value to land armies on planet
		ENEMY_NEUTRALS_FLEET_POWER_MULT = 2	# AI will need the the fleet power of the enemy multiplied by this value to attack neutrals and space hostiles
		ENEMY_FLEET_POWER_HOME_SYSTEM_MULT = 1.0 # AI will need the fleet power of the enemy multiplied by this value to attack hostiles in own systems
		PRIO_BASE_FRACTION = 0.80				# Prio base fraction for example if prio is assault arsenal fraction will be set to this value

		START_WEAPON_TECH_AREA_MULT = 2		# Weapons within the same tech area as the start weapon will be weighted (multiplied) by this value when deciding tech strategies
		FRACTION_PERSONALITY_MULT = 2			# Techs that apply to a certain personality will be multiplied by this value + tolerance/hierarchical value (interval: -2 +2) divided by this value
		
		CRISIS_FLEET_SIZE_LIMIT_LOWER = 130	# Swarm fleet will aim for this size before attacking targets
		CRISIS_NAVY_SIZE_LIMIT = 130			# Swarm fleet will aim for this size before attacking targets
		CRISIS_ARMY_LIMIT = 100				# Swarms will not build more armies if it has this many armies already
		
		ARSENAL_FLEET_SIZE = 200					# AI will have arsenal fleets of this size
		
	}