namespace = planet_destruction

# Neutron Beam
planet_event = {
	id = planet_destruction.300
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = owner
				owner = { NOT = { is_same_value = from.owner } }
			}
			from.owner = {
				country_event = { id = planet_destruction.301 }
			}
		}

		# Swarm Situation Log counter
		if = {
			limit = {
				owner = { is_country_type = swarm }
			}
			every_country = {
				limit = { has_event_chain = "prethoryn_scourge_chain" }
				add_event_chain_counter = {
					event_chain = "prethoryn_scourge_chain"
					counter = "infested_worlds"
					amount = -1 
				}
				add_event_chain_counter = {
					event_chain = "prethoryn_scourge_chain"
					counter = "infested_worlds_cleansed"
					amount = 1 
				}
			}
		}

		if = {
			limit = {
				exists = owner
				owner = {
					NOT = { is_same_value = from.owner }
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
			# Generate threat
			add_threat = { who = from.owner amount = 3 }
			# modifier for allies + those upset by genocide
			every_country = {
				limit = {
					NOR = {
						is_same_value = from.owner
						is_same_value = root.owner
						AND = {
							has_federation = yes
							is_in_federation_with = from.owner
						}
					}
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						AND = {
							has_federation = yes
							is_in_federation_with = root.owner
						}
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							OR = {
								is_egalitarian = yes
								is_xenophile = yes
								is_spiritualist = yes
							}
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_swept_a_world
					who = from.owner
				}
			}
			# modifiers for victim
			owner = {
				add_opinion_modifier = {
					modifier = opinion_swept_my_world
					who = from.owner
				}
				if = {
					limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
					add_modifier = {
						modifier = colossus_victim
						days = 10800 # 30 years
					}
				}
			}
		}
		else_if = {
			limit = {
				exists = owner
				owner = { is_country_type = primitive }
			}
			# modifier for allies + those upset by genocide
			every_country = {
				limit = {
					NOT = { is_same_value = from.owner }
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					is_country_type = default
					NOR = {
						is_xenophobe = yes
						is_homicidal = yes
						is_xenophile = yes
					}
				}
				add_opinion_modifier = {
					modifier = opinion_swept_a_primitive_world
					who = from.owner
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = from.owner }
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							is_xenophile = yes
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_swept_a_primitive_world_phile
					who = from.owner
				}
			}
		}
		# Add war exhaustion to planet owner 
		owner = {
			add_static_war_exhaustion = {
				attacker = from.fleet.owner
				location = root
				value_for_planet_destruction = 1.0
			}
		}
		destroy_colony = yes
		add_modifier = {
			modifier = neutron_bombarded
			days = 3600
		}		
		# Special graphics for Habitats and Ring Worlds
		if = {
			limit = {
				is_planet_class = pc_habitat
			}
			spawn_habitat_neutron_effect = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_ringworld_habitable
			}
			spawn_ringworld_neutron_effect = yes
		}
		if = {
			limit = {
				OR = {
					is_planet_class = pc_habitat
					is_planet_class = pc_ringworld_habitable
				}
			}
			# nothing
		}
		else = {
			switch = {
				trigger = is_planet_class
				pc_desert = { change_pc = pc_desert }
				pc_arid = { change_pc = pc_arid }
				pc_savannah = { change_pc = pc_savannah }
				pc_ocean = { change_pc = pc_ocean }
				pc_continental = { change_pc = pc_continental }
				pc_tropical = { change_pc = pc_tropical }
				pc_tundra = { change_pc = pc_tundra }
				pc_arctic = { change_pc = pc_arctic }
				pc_alpine = { change_pc = pc_alpine }
				pc_tidallylocked = { change_pc = pc_tidallylocked }
				pc_mangrove = { change_pc = pc_mangrove }
				pc_desertislands = { change_pc = pc_desertislands }
				pc_hajungle = { change_pc = pc_hajungle }
				pc_cascadian = { change_pc = pc_cascadian }
				pc_swamp = { change_pc = pc_swamp }
				pc_subarctic = { change_pc = pc_subarctic }
				pc_glacial = { change_pc = pc_glacial }
				pc_geothermal = { change_pc = pc_geothermal }
				pc_sandsea = { change_pc = pc_sandsea }
				pc_mesa = { change_pc = pc_mesa }
				pc_oasis = { change_pc = pc_oasis }
				pc_hadesert = { change_pc = pc_hadesert }
				pc_steppe = { change_pc = pc_steppe }
				pc_frozen_desert = { change_pc = pc_frozen_desert }
				pc_boreal = { change_pc = pc_boreal }
				pc_ammonia = { change_pc = pc_ammonia }
				pc_methane = { change_pc = pc_methane }
				pc_crystal = { change_pc = pc_crystal }
				pc_floating = { change_pc = pc_floating }
				pc_graveyard = { change_pc = pc_graveyard }
				pc_mushroom = { change_pc = pc_mushroom }
				pc_city = { change_pc = pc_city }
				pc_geometallic_terraforming = { change_pc = pc_geometallic_terraforming }
				pc_geomorteus_terraforming = { change_pc = pc_geomorteus_terraforming }
				pc_greenhouse_hot_terraforming = { change_pc = pc_greenhouse_hot_terraforming }
				pc_greenhouse_cold_terraforming = { change_pc = pc_greenhouse_cold_terraforming }
				pc_molten_terraforming = { change_pc = pc_molten_terraforming }
				pc_barren_terraforming = { change_pc = pc_barren_terraforming }
				pc_barren_cold_terraforming = { change_pc = pc_barren_cold_terraforming }
				pc_toxic_terraforming = { change_pc = pc_toxic_terraforming }
				pc_frozen_terraforming = { change_pc = pc_frozen_terraforming }
				pc_asteroidal_planetoid = { change_pc = pc_asteroidal_planetoid }
				pc_ice_asteroidal_planetoid = { change_pc = pc_ice_asteroidal_planetoid }
				pc_crystal_asteroidal_planetoid = { change_pc = pc_crystal_asteroidal_planetoid }				
			}
		}
		# For Infested worlds
		if = {
			limit = { is_planet_class = pc_infested }
			random_list = {
				50 = { change_pc = pc_barren }
				50 = { change_pc = pc_barren_cold }
			}
			add_modifier = { modifier = "terraforming_candidate" days = -1 }
		}
	}
}
# God Ray
planet_event = {
	id = planet_destruction.400
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = owner
				owner = { NOT = { is_same_value = from.owner } }
			}
			from.owner = {
				country_event = { id = planet_destruction.401 }
			}
		}
		if = {
			limit = {
				exists = owner
				owner = {
					NOT = { is_same_value = from.owner }
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
			# Generate threat
			add_threat = { who = from.owner amount = 3 }
			# modifier for allies + those upset by conversion
			every_country = {
				limit = {
					NOR = {
						is_same_value = from.owner
						is_same_value = root.owner
						AND = {
							has_federation = yes
							is_in_federation_with = from.owner
						}
					}
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						AND = {
							has_federation = yes
							is_in_federation_with = root.owner
						}
						has_ai_personality = awakened_fallen_empire_materialist
						AND = {
							is_country_type = default
							OR = {
								is_materialist = yes
								is_egalitarian = yes
								has_authority = auth_machine_intelligence
							}
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_converted_a_world
					who = from.owner
				}
			}
			# modifiers for victim
			owner = {
				add_opinion_modifier = {
					modifier = opinion_converted_my_world
					who = from.owner
				}
				if = {
					limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
					add_modifier = {
						modifier = colossus_victim
						days = 10800 # 30 years
					}
				}
			}
			# Add war exhaustion to planet owner 
			owner = {
				add_static_war_exhaustion = {
					attacker = from.fleet.owner
					location = root
					value_for_planet_destruction = 1.0
				}
			}
		}
		every_owned_pop = {
			limit = {
				OR = {
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
					has_trait = trait_hive_mind
					has_living_standard = { # Bio-trophies die without care
						country = root.owner
						type = living_standard_organic_trophy
					}
				}
			}
			kill_pop = yes
		}
		every_owned_pop = {
			limit = {
				NOR = {
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
					has_trait = trait_hive_mind
					has_living_standard = {
						country = root.owner
						type = living_standard_organic_trophy
					}
				}
			}
			pop_change_ethic = ethic_spiritualist
		}
		# Special graphics for Habitats and Ring Worlds
		if = {
			limit = {
				is_planet_class = pc_habitat
			}
			spawn_habitat_divine_effect = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_ringworld_habitable
			}
			spawn_ringworld_divine_effect = yes
		}
		if = {
			limit = {
				OR = {
					is_planet_class = pc_habitat
					is_planet_class = pc_ringworld_habitable
				}
			}
			# nothing
		}
		else = {
			switch = {
				trigger = is_planet_class
				pc_desert = { change_pc = pc_desert }
				pc_arid = { change_pc = pc_arid }
				pc_savannah = { change_pc = pc_savannah }
				pc_ocean = { change_pc = pc_ocean }
				pc_continental = { change_pc = pc_continental }
				pc_tropical = { change_pc = pc_tropical }
				pc_tundra = { change_pc = pc_tundra }
				pc_arctic = { change_pc = pc_arctic }
				pc_alpine = { change_pc = pc_alpine }
				pc_tidallylocked = { change_pc = pc_tidallylocked }
				pc_mangrove = { change_pc = pc_mangrove }
				pc_desertislands = { change_pc = pc_desertislands }
				pc_hajungle = { change_pc = pc_hajungle }
				pc_cascadian = { change_pc = pc_cascadian }
				pc_swamp = { change_pc = pc_swamp }
				pc_subarctic = { change_pc = pc_subarctic }
				pc_glacial = { change_pc = pc_glacial }
				pc_geothermal = { change_pc = pc_geothermal }
				pc_sandsea = { change_pc = pc_sandsea }
				pc_mesa = { change_pc = pc_mesa }
				pc_oasis = { change_pc = pc_oasis }
				pc_hadesert = { change_pc = pc_hadesert }
				pc_steppe = { change_pc = pc_steppe }
				pc_frozen_desert = { change_pc = pc_frozen_desert }
				pc_boreal = { change_pc = pc_boreal }
				pc_ammonia = { change_pc = pc_ammonia }
				pc_methane = { change_pc = pc_methane }
				pc_crystal = { change_pc = pc_crystal }
				pc_floating = { change_pc = pc_floating }
				pc_graveyard = { change_pc = pc_graveyard }
				pc_mushroom = { change_pc = pc_mushroom }
				pc_city = { change_pc = pc_city }
				pc_geometallic_terraforming = { change_pc = pc_geometallic_terraforming }
				pc_geomorteus_terraforming = { change_pc = pc_geomorteus_terraforming }
				pc_greenhouse_hot_terraforming = { change_pc = pc_greenhouse_hot_terraforming }
				pc_greenhouse_cold_terraforming = { change_pc = pc_greenhouse_cold_terraforming }
				pc_molten_terraforming = { change_pc = pc_molten_terraforming }
				pc_barren_terraforming = { change_pc = pc_barren_terraforming }
				pc_barren_cold_terraforming = { change_pc = pc_barren_cold_terraforming }
				pc_toxic_terraforming = { change_pc = pc_toxic_terraforming }
				pc_frozen_terraforming = { change_pc = pc_frozen_terraforming }
				pc_asteroidal_planetoid = { change_pc = pc_asteroidal_planetoid }
				pc_ice_asteroidal_planetoid = { change_pc = pc_ice_asteroidal_planetoid }
				pc_crystal_asteroidal_planetoid = { change_pc = pc_crystal_asteroidal_planetoid }				
			}
		}
		add_modifier = {
			modifier = god_rayed
			days = 3600
		}
		# self-raying
		if = {
			limit = {
				exists = owner
				owner = { is_same_value = from.owner }
			}
			add_modifier = {
				modifier = uneasy_faith
				days = 3600
			}
		}
	}
}
# Nanobot Assimilation
planet_event = {
	id = planet_destruction.500
	hide_window = yes

	is_triggered_only = yes

	immediate = { # remove hive mind?
		from.owner = { country_event = { id = planet_destruction.501 } }
		if = {
			limit = {
				exists = owner
				owner = {
					NOT = { is_same_value = from.owner }
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
			# Generate threat
			add_threat = { who = from.owner amount = 3 }
			# modifier for allies + those upset by robots
			every_country = {
				limit = {
					NOR = {
						is_same_value = from.owner
						is_same_value = root.owner
						AND = {
							has_federation = yes
							is_in_federation_with = from.owner
						}
					}
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						AND = {
							has_federation = yes
							is_in_federation_with = root.owner
						}
						has_ai_personality = awakened_fallen_empire_spiritualist
						AND = {
							is_country_type = default
							OR = {
								is_egalitarian = yes
								is_spiritualist = yes
							}
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_assimilated_a_world
					who = from.owner
				}
			}
			# modifiers for victim
			owner = {
				add_opinion_modifier = {
					modifier = opinion_assimilated_my_world
					who = from.owner
				}
				if = {
					limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
					add_modifier = {
						modifier = colossus_victim
						days = 10800 # 30 years
					}
				}
			}
		}
		else_if = {
			limit = {
				exists = owner
				owner = { is_country_type = primitive }
			}
			# modifier for allies + those upset by genocide
			every_country = {
				limit = {
					NOR = { is_same_value = from.owner }
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					is_country_type = default
					NOR = {
						is_xenophobe = yes
						is_homicidal = yes
						is_xenophile = yes
					}
				}
				add_opinion_modifier = {
					modifier = opinion_assimilated_a_primitive_world
					who = from.owner
				}
			}
			every_country = {
				limit = {
					NOR = { is_same_value = from.owner }
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							is_xenophile = yes
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_assimilated_a_primitive_world_phile
					who = from.owner
				}
			}
		}
		# Add war exhaustion to planet owner 
		owner = {
			add_static_war_exhaustion = {
				attacker = from.fleet.owner
				location = root
				value_for_planet_destruction = 1.0
			}
		}
		if = {
			limit = {
				exists = owner
				owner = { is_same_value = from.owner }
			}
			# already owned
		}
		else = {
			set_owner = from.owner
		}
		every_owned_pop = {
			limit = {
				is_valid_pop_for_PLANET_KILLER_NANOBOTS = yes
			}
			modify_species = {
				species = this
				add_trait = trait_cybernetic
				add_traits_at_start_of_list = yes
				change_scoped_species = yes
			}
		}
		every_owned_pop = {
			limit = {
				OR = {
					has_trait = trait_hive_mind
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
				}
			}
			kill_pop = yes
		}
		every_owned_pop = {
			limit = {
				has_modifier = pop_recently_conquered
			}
			remove_modifier = pop_recently_conquered
		}
		every_owned_pop = {
			set_citizenship_type = {
				type = citizenship_full_machine
				cooldown = yes
			}
		}
		# Special graphics for Habitats and Ring Worlds
		if = {
			limit = {
				is_planet_class = pc_habitat
			}
			spawn_habitat_nanobot_effect = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_ringworld_habitable
			}
			spawn_ringworld_nanobot_effect = yes
		}
		if = {
			limit = {
				OR = {
					is_planet_class = pc_habitat
					is_planet_class = pc_ringworld_habitable
				}
			}
			# nothing
		}
		else = {
			switch = {
				trigger = is_planet_class
				pc_desert = { change_pc = pc_desert }
				pc_arid = { change_pc = pc_arid }
				pc_savannah = { change_pc = pc_savannah }
				pc_ocean = { change_pc = pc_ocean }
				pc_continental = { change_pc = pc_continental }
				pc_tropical = { change_pc = pc_tropical }
				pc_tundra = { change_pc = pc_tundra }
				pc_arctic = { change_pc = pc_arctic }
				pc_alpine = { change_pc = pc_alpine }
				pc_tidallylocked = { change_pc = pc_tidallylocked }
				pc_mangrove = { change_pc = pc_mangrove }
				pc_desertislands = { change_pc = pc_desertislands }
				pc_hajungle = { change_pc = pc_hajungle }
				pc_cascadian = { change_pc = pc_cascadian }
				pc_swamp = { change_pc = pc_swamp }
				pc_subarctic = { change_pc = pc_subarctic }
				pc_glacial = { change_pc = pc_glacial }
				pc_geothermal = { change_pc = pc_geothermal }
				pc_sandsea = { change_pc = pc_sandsea }
				pc_mesa = { change_pc = pc_mesa }
				pc_oasis = { change_pc = pc_oasis }
				pc_hadesert = { change_pc = pc_hadesert }
				pc_steppe = { change_pc = pc_steppe }
				pc_frozen_desert = { change_pc = pc_frozen_desert }
				pc_boreal = { change_pc = pc_boreal }
				pc_ammonia = { change_pc = pc_ammonia }
				pc_methane = { change_pc = pc_methane }
				pc_crystal = { change_pc = pc_crystal }
				pc_floating = { change_pc = pc_floating }
				pc_graveyard = { change_pc = pc_graveyard }
				pc_mushroom = { change_pc = pc_mushroom }
				pc_city = { change_pc = pc_city }
				pc_geometallic_terraforming = { change_pc = pc_geometallic_terraforming }
				pc_geomorteus_terraforming = { change_pc = pc_geomorteus_terraforming }
				pc_greenhouse_hot_terraforming = { change_pc = pc_greenhouse_hot_terraforming }
				pc_greenhouse_cold_terraforming = { change_pc = pc_greenhouse_cold_terraforming }
				pc_molten_terraforming = { change_pc = pc_molten_terraforming }
				pc_barren_terraforming = { change_pc = pc_barren_terraforming }
				pc_barren_cold_terraforming = { change_pc = pc_barren_cold_terraforming }
				pc_toxic_terraforming = { change_pc = pc_toxic_terraforming }
				pc_frozen_terraforming = { change_pc = pc_frozen_terraforming }
				pc_asteroidal_planetoid = { change_pc = pc_asteroidal_planetoid }
				pc_ice_asteroidal_planetoid = { change_pc = pc_ice_asteroidal_planetoid }
				pc_crystal_asteroidal_planetoid = { change_pc = pc_crystal_asteroidal_planetoid }				
			}
		}
	}
}
