pop_category_biosynth = {
	parent = planet_pops
}

planet_jobs = {
	parent = planets

	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	triggered_produces_modifier = {
		key = planet_jobs_slave
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = slave
			has_job_category = worker
		}
	}

	triggered_produces_modifier = {
		key = planet_psionic_jobs
		modifier_types = {
			mult
		}
		trigger = {
			has_trait = trait_psionic
		}
	}

	triggered_produces_modifier = {
		key = planet_cyborg_jobs
		modifier_types = {
			mult
		}
		trigger = {
			has_trait = trait_cybernetic
		}
	}

	triggered_produces_modifier = {
		key = habitat_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = { is_planet_class = pc_habitat }
		}
	}

	triggered_produces_modifier = {
		key = non_artificial_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = { is_artificial = no }
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
				is_pop_category = simple_drone
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding worker drones
		key = planet_jobs_worker_only
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding complex drones
		key = planet_jobs_specialist_only
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = ruler
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = simple_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = complex_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_and_simple_drone
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = complex_drone
				is_pop_category = simple_drone
			}

		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_robotic
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}

	#triggered_produces_modifier = {
	#	key = planet_jobs_organics
	#	modifier_types = {
	#		mult
	#	}
	#	trigger = {
	#		is_robot_pop = no
	#	}
	#}

	triggered_produces_modifier = {
		key = planet_pops_biosynth
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				has_trait = trait_organic_fourschildren
				has_trait = trait_organic_fourschildren_2
			}
		}
	}
}

planet_pops = {
	parent = planets
	generate_mult_modifiers = {
		upkeep
	}
	modifier_category = pop

	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_cyborgs
		modifier_types = {
			mult
		}
		trigger = {
			has_trait = trait_cybernetic
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop = no
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
		}
		trigger = {
			is_unemployed = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_biosynth
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				has_trait = trait_organic_fourschildren
				has_trait = trait_organic_fourschildren_2
			}
		}
	}
}
