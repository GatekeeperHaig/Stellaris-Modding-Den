on_game_start = {
	events = {
		cgm_ai_routines.0 #records number of hyperlane connections for every system and set other init stuff
		cgm_ai_routines.8 #prevents update window
	}
}
on_game_start_country = {
	events = {
		core_game_mechanics_and_ai_base.0 #checking game host for MP and recording hyperlanes if not gamestart
	}
}
on_press_begin = {
	events = {
		core_game_mechanics_and_ai_base.1 #main menu event		
	}
}
on_monthly_pulse = {
	events = {
		cgm_ai_routines.0#records number of hyperlane connections for every system and set other init stuff
		cgm_ai_routines.1# fire only once, sets the first month passed flag and records number of hyperlane connections for every system if the mod is loaded into a savegame	
		cgm_ai_routines.2# main ai routines hub event
	}
}
on_megastructure_upgraded = {
	events = {
		cgm_building_operations.2
	}
}	
on_megastructure_built = {
	events = {
		cgm_building_operations.2
	}
}	

on_yearly_pulse = {
	events = {
		cgm_auto.21 #update all planet modifier weights. force recalculation of planet weights when something changed
	}
}

on_colonized = {
	events = {
		cgm_auto.22 #update planet modifier weights. force recalculation of planet weights when something changed (single planet)
	}
}

on_building_complete = {
	events = {
		cgm_buildings.3 #checking whether the building built gives a planet modifier. Removing a flag that is used to gate planet building checks.
	}	
}	
on_building_repaired = {
	events = {
		cgm_buildings.3 #checking whether the building repaired gives a planet modifier. Removing a flag that is used to gate planet building checks.
	}
}
on_building_upgraded = {
	events = {
		cgm_buildings.3 #checking whether the upgraded building gave a planet modifier bonus. Removing a flag that is used to gate planet building checks.
	}
}
on_building_demolished = {
	events = {
		cgm_buildings.4 #checking whether the building demolished/ruined used to give a planet modifier. Removing a flag that is used to gate planet building checks.
	}	
}	
on_building_ruined = {
	events = {
		cgm_buildings.4 #checking whether the building demolished/ruined used to give a planet modifier. Removing a flag that is used to gate planet building checks.
	}	
}
on_building_replaced = {	
	events = {
		cgm_buildings.5 #checking whether the building replaced used to give a planet modifier or if the new building does. Removing a flag that is used to gate planet building checks.
	}		
}	
on_modification_complete = {
	events = {
		cgm_buildings.6 #removes pop flags from the species that was modified, allow for a recheck on the planet base. 
	}
}	
on_pop_rights_change = {
	events = {
		cgm_buildings.7 #removes pop flags from pops whose rights were changed, allow for a recheck on the planet base. 
	}
}
on_pop_enslaved = {
	events = {
		cgm_buildings.7 #removes pop flags from pops that were enslaved, allow for a recheck on the planet base. 
	}
}
on_pop_emancipated = {
	events = {
		cgm_buildings.7 #removes pop flags from pops that were emancipated, allow for a recheck on the planet base. 
	}
}
on_purge_begun = {
	events = {
		cgm_buildings.8 #sets a planet pop recheck flag.
	}
}
on_purge_canceled = {
	events = {
		cgm_buildings.8 #sets a planet pop recheck flag.
	}	
}
on_purge_complete = {
	events = {
		cgm_buildings.9 #sets a planet pop recheck flag.
	}
}	
on_planet_conquer = {
	events = {
		cgm_buildings.10 #sets a planet pop recheck flag and re-enables planet building check.
	}
}
on_planet_transfer = {#Note: This will be also called on game start 
	events = {
		cgm_buildings.10 #sets a planet pop recheck flag and re-enables planet building check.
	}
}

on_ruler_set = { #called on any new empire once. Called pretty rarely otherwise.
	events = {
		cgm_ai_routines.7 #set country flags on new empires. 
	}
}