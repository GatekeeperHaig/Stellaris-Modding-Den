namespace = ex_new_worlds_spawn_engine

event = { #this event triggers on game start and monthly pulse
	id = ex_new_worlds_spawn_engine.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	#This event fires only once.
		
	immediate = {				
		every_planet = { 
			limit = { 
				is_star = no
			}	
			if = {
				limit = {
					is_planet_class = pc_gas_giant
					has_moon = yes
				}
				every_moon = { set_planet_flag = gas_giant_moon }
			}	
		}	
		every_planet = {
			limit = {				
				solar_system = { 
					starting_system = no
					NOR = {
						has_star_flag = sol_system
						has_star_flag = sol
						has_star_flag = deneb_system
						has_star_flag = custom_system
					}					
				}
				is_capital = no
				is_homeworld = no
			}			
			planet_event = { id = ex_new_worlds_spawn_engine.1 }
			planet_event = { id = ex_new_worlds_spawn_engine.2 }
		}
	}
}



planet_event = { 
	id = ex_new_worlds_spawn_engine.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { 
			limit = { is_star = yes }
		#	ex_new_worlds_adjust_star_size = yes #this feature is currently not in use. It can be enabled at any time by uncommenting this part. 	
			if = { 
				limit = {
					solar_system = { NOT = { any_planet = { NOT = { is_same_value = root } has_planet_flag = system_star_1 } } }
					set_planet_flag = system_star_1
				}
				else = {
					if = { 
						limit = {
							solar_system = { NOT = { any_planet = { NOT = { is_same_value = root } has_planet_flag = system_star_2 } } }
							set_planet_flag = system_star_2
						}				
						else = {
							if = { 
								limit = {
									solar_system = { NOT = { any_planet = { NOT = { is_same_value = root } has_planet_flag = system_star_3 } } }
									set_planet_flag = system_star_3
								}	
							}
						}
					}
				}				
			}	
		}
		if = {
			limit = { 
				is_vanilla_habitable_planet = yes
				any_tile = { has_pop = yes }
				any_pop = { has_regular_habitability_trait = yes }
				OR = {					
					any_pop = { is_presapient_pop = yes }
					AND = {
						exists = owner
						OR = {
							owner = { is_country_type = primitive }
							AND = {
								is_colony = yes				
								any_pop = {
									has_regular_habitability_trait = yes
									OR = {
										is_subspecies = yes
										NOT = { species = { is_same_value = owner.species }	}																		
									}										
								}	
							}	
						}	
					}
				}	
			}
			every_owned_pop = {
				limit = { has_regular_habitability_trait = yes }
				check_habitability_trait_correspondence = yes
			}	
		}				
		if = {
			limit = { is_vanilla_uninhabitable_planet = yes	}
			ex_new_worlds_uninhabitable_planets_spawn_table = yes			
			ex_new_worlds_adjust_uninhabitable_planet_size = yes
			if = {
				limit = { has_regular_planet_modifier = yes	}
				remove_regular_planet_modifiers = yes 
				ex_new_worlds_planet_modifier_spawn_engine = yes
			}					
		}	
		if = {
			limit = { is_vanilla_habitable_planet = yes	}
			ex_new_worlds_habitable_planets_spawn_table = yes
			if = {
				limit = { any_tile = { has_blocker = yes has_regular_blocker = yes } }
				every_tile = {
					limit = { has_blocker = yes has_regular_blocker = yes }
					remove_blocker = yes
					tile_blocker_spawn_table = yes
				}	
			}			
			if = {
				limit = { 
					has_regular_planet_modifier = yes
					OR = {
						has_owner = no
						AND = {
							has_owner = yes
							owner = { is_ai = yes }
						}
					}
				}
				remove_regular_planet_modifiers = yes 
				ex_new_worlds_planet_modifier_spawn_engine = yes
			}			
			if = {
				limit = { any_tile = { is_orbital_tile = no has_deposit = yes has_regular_vanilla_deposit = yes has_building = no } }
				every_tile = { 
					limit = { has_deposit = yes has_regular_vanilla_deposit = yes has_building = no is_orbital_tile = no }
					clear_deposits = yes
					ex_new_worlds_planetary_resource_spawn_table = yes
				}				
			}
		}	
		if = {
			limit = { any_tile = { is_orbital_tile = yes has_deposit = yes has_regular_vanilla_deposit = yes } }
			random_tile = { 
				limit = { is_orbital_tile = yes has_deposit = yes has_regular_vanilla_deposit = yes }
				clear_deposits = yes
				orbital_resource_spawn_table = yes
			}				
		}						
	}
}

planet_event = { 
	id = ex_new_worlds_spawn_engine.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_planet_class = pc_geocrystalline
			is_planet_class = pc_marginal
			is_planet_class = pc_marginal_dry
			is_planet_class = pc_marginal_cold
			is_planet_class = pc_greenhouse_cold
			is_planet_class = pc_retinal
			is_planet_class = pc_lush
		}
	}	
	
	immediate = {
		ex_new_worlds_adjust_inhabitable_planet_size = yes
		if = {
			limit = { NOT = { any_tile = { has_deposit = yes } } }				
			every_tile = {
				limit = { is_orbital_tile = no has_deposit = no has_building = no } 
				random_list = { 
					60 = { ex_new_worlds_planetary_resource_spawn_table = yes } 
					40 = { } 
				} 
			}
			else = {
				every_tile = { 
					limit = { has_deposit = yes has_regular_vanilla_deposit = yes has_building = no is_orbital_tile = no }
					clear_deposits = yes
					ex_new_worlds_planetary_resource_spawn_table = yes
				}			
			}					
		}						 					
		if = {
			limit = { NOT = { any_tile = { has_blocker = yes } } }
			every_tile = {
				limit = { is_orbital_tile = no has_building = no has_pop = no }
				random_list = { 
					55 = { tile_blocker_spawn_table = yes } 
					45 = { } 
				}
			}
			else = {
				every_tile = {
					limit = { has_blocker = yes has_regular_blocker = yes }
					remove_blocker = yes
					tile_blocker_spawn_table = yes
				}				
			}					
		}				
		if = {
			limit = {
				OR = {
					any_tile = { has_pop = yes pop = { is_presapient_pop = yes } }
					AND = {
						has_owner = yes
						OR = {
							AND = {
								is_colony = yes				
								any_pop = {
									has_regular_habitability_trait = yes
									OR = {
										NOT = { species = { is_same_value = owner.species } }
										is_subspecies = yes
									}
								}										
							}	
							owner = { is_country_type = primitive }
						}	
					}
				}	
				any_tile = {
					has_pop = yes
					pop = { has_regular_habitability_trait = yes }
				}	
			}
			ex_nw_change_habitability_trait_correspondence = yes
		}								
		if = { #change presapient/primitive species
			limit = { 
				any_tile = { has_pop = yes }
				OR = {
					any_pop = { is_presapient_pop = yes } 
					AND = {
						exists = owner
						owner = { is_country_type = primitive }
					}
				}	
			}
			random_pop = {
				limit = {
					OR = {
						is_presapient_pop = yes 
						AND = {
							exists = owner
							owner = { is_country_type = primitive }
						}	
					}
				}	
				ex_new_worlds_species_change_table = yes
			}					
		}	
	}	
}