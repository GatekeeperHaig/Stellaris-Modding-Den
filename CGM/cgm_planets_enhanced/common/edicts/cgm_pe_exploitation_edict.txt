country_edict = {
	name = cgm_pe_menu_edict
	length = 0
	cost = { }
	effect = {
		hidden_effect = { country_event = { id = cgm_pe_spawn_engine.3 } } 
	}
	potential = {
		has_global_flag = cgm_pe_spawn_engine_fired
		is_ai = no
		OR = {
			is_multiplayer = no
			AND = { is_multiplayer = yes has_country_flag = cgm_game_host }
		}
	}
}
planet_edict = {
	name = "open_cgm_exploitation_menu"
	cost = {}
	length = 0
	potential = { 
		NOR = { 
			has_planet_flag = cgm_deep_core_mining
			has_planet_flag = cgm_geothermal_tap
			has_planet_flag = cgm_tectonic_engineering
			has_planet_flag = cgm_harvest
		}	
	}			
	allow = {
		custom_tooltip = {
			fail_text = "requires_planetary_specialization_technologies"		
			owner = { 
				OR = {
					has_technology = "tech_tectonic_engineering"
					has_technology = "tech_soil_harvesting"
					has_technology = "tech_deep_core_mining"
					has_technology = "tech_geothermal_tap"
				}
			}	
		}	
		custom_tooltip = {
			fail_text = "requires_non_artificial_planet"		
			is_artificial = no
		}	
		custom_tooltip = {
			fail_text = "requires_non_machine_world"		
			NOT = { is_planet_class = pc_machine }
		}		
		custom_tooltip = {
			fail_text = "requires_non_terraforming_uninhabitable_or_asteroid"		
			cgm_planet = no
		}				
	}	
	effect = { hidden_effect = { planet_event = { id = cgm_planetary_exploitation.1 } }	}
	ai_weight = { weight = 0 }
}
planet_edict = { 
	name = "deactivate_terraformer"
	cost = {}
	length = 0 
	potential = { has_planet_flag = terraformer_active }
	effect = { 
		custom_tooltip = "terraformer_deactivation_warning"
		hidden_effect = { 
			planet = { 
				if = { 
					limit = { building_terraformer_baseline }
					owner = { change_variable = { which = available_terraforming_points value = 1 } }
				}	
				else_if = { 
					limit = { has_planet_flag = building_terraformer_increased }
					owner = { change_variable = { which = available_terraforming_points value = 2 } }
				}				
				else = { owner = { change_variable = { which = available_terraforming_points value = 3 } } }													
				remove_planet_flag = terraformer_active
				set_planet_flag = terraformer_inactive	
				random_tile = { 
					limit = { has_terraformer = yes } 
					remove_building = yes
					set_building = building_terraformer_inactive
				}	
			}	
		}
	}
	ai_weight = { weight = 0 }
}	
planet_edict = { 
	name = "baseline_terraformer_speed"
	cost = {}
	length = 0 
	potential = { 
		NOT = { has_planet_flag = baseline_terraformer_speed }		
		OR = { 
			has_building = building_terraformer_inactive
			has_building = building_terraformer_maximal
			has_building = building_terraformer_increased
		}	
	}
	allow = {
		custom_tooltip = {
			fail_text = "requires_1_sr_terraforming_agents"			
			OR = { 
				root = { 
					exists = owner 
					owner = { check_variable = { which = available_terraforming_points value > 0 } }
				}	
				has_building = building_terraformer_increased
				has_building = building_terraformer_maximal
			}	
		}	
	}
	effect = { 
		hidden_effect = { 
			planet = { 
				if = { 
					limit = { has_planet_flag = increased_terraformer_speed }
					owner = { change_variable = { which = available_terraforming_points value = 1 } }
				}				
				else_if = { 
					limit = { has_planet_flag = maximal_terraformer_speed }
					owner = { change_variable = { which = available_terraforming_points value = 2 } }
				}								
				else = { owner = { change_variable = { which = available_terraforming_points value = -1 } } }				
				remove_planet_flag = increased_terraformer_speed
				remove_planet_flag = maximal_terraformer_speed				
				remove_planet_flag = terraformer_inactive
				set_planet_flag = terraformer_active						
				set_planet_flag = baseline_terraformer_speed 
				random_tile = { 
					limit = { has_terraformer = yes } 
					remove_building = yes
					set_building = building_terraformer_baseline
				}			
			}	
		}
	}
	ai_weight = { weight = 5 }
}	
planet_edict = { 
	name = "increased_terraformer_speed"
	cost = {}
	length = 0 
	potential = { 
		NOT = { has_planet_flag = increased_terraformer_speed }		
		OR = { 
			has_building = building_terraformer_inactive
			has_building = building_terraformer_maximal
			has_building = building_terraformer_baseline
		}	
	}
	allow = {
		custom_tooltip = {
			fail_text = "requires_2_sr_terraforming_agents"			
			OR = { 
				root = { 
					exists = owner 
					owner = { check_variable = { which = available_terraforming_points value > 1 } }
				}	
				root = { 
					exists = owner 
					owner = { check_variable = { which = available_terraforming_points value > 0 } }
					prev = { has_building = building_terraformer_baseline }
				}	
				has_building = building_terraformer_maximal
			}	
		}	
	}
	effect = { 
		hidden_effect = { 
			planet = { 
				if = { 
					limit = { has_planet_flag = baseline_terraformer_speed }					
					owner = { change_variable = { which = available_terraforming_points value = -1 } }
				}				
				else_if = { 
					limit = { has_planet_flag = maximal_terraformer_speed }					
					owner = { change_variable = { which = available_terraforming_points value = 1 } }
				}								
				else = { owner = { change_variable = { which = available_terraforming_points value = -2 } } }							
				remove_planet_flag = baseline_terraformer_speed
				remove_planet_flag = maximal_terraformer_speed
				remove_planet_flag = terraformer_inactive
				set_planet_flag = terraformer_active			
				set_planet_flag = increased_terraformer_speed 
				random_tile = { 
					limit = { has_terraformer = yes } 
					remove_building = yes
					set_building = building_terraformer_increased
				}				
			}	
		}
	}
	ai_weight = { weight = 5 }
}	
planet_edict = { 
	name = "maximal_terraformer_speed"
	cost = {}
	length = 0 
	potential = { 
		NOT = { has_planet_flag = maximal_terraformer_speed }		
		OR = { 
			has_building = building_terraformer_inactive
			has_building = building_terraformer_increased
			has_building = building_terraformer_baseline
		}	
	}
	allow = {
		custom_tooltip = {
			fail_text = "requires_3_sr_terraforming_agents"			
			OR = { 
				root = { 
					exists = owner 
					owner = { check_variable = { which = available_terraforming_points value > 2 } }
				}	
				root = { 
					exists = owner 
					owner = { check_variable = { which = available_terraforming_points value > 0 } }
					prev = { has_building = building_terraformer_increased }
				}				
				root = { 
					exists = owner 
					owner = { check_variable = { which = available_terraforming_points value > 1 } }
					prev = { has_building = building_terraformer_baseline }
				}					
			}	
		}	
	}
	effect = { 
		hidden_effect = { 
			planet = { 
				if = { 
					limit = { has_planet_flag = baseline_terraformer_speed }					
					owner = { change_variable = { which = available_terraforming_points value = -2 } }
				}				
				else_if = { 
					limit = { has_planet_flag = increased_terraformer_speed }					
					owner = { change_variable = { which = available_terraforming_points value = -1 } }
				}								
				else = { owner = { change_variable = { which = available_terraforming_points value = -3 } } }							
				remove_planet_flag = baseline_terraformer_speed
				remove_planet_flag = increased_terraformer_speed
				remove_planet_flag = terraformer_inactive
				set_planet_flag = terraformer_active			
				set_planet_flag = maximal_terraformer_speed 
				random_tile = { 
					limit = { has_terraformer = yes } 
					remove_building = yes
					set_building = building_terraformer_maximal
				}			
			}	
		}
	}
	ai_weight = { weight = 5 }
}	