namespace = custom_difficulty
country_event = {
	id = custom_difficulty.50
	trigger = { has_global_flag = custom_difficulty_activate_custom_mode }
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		 #ai
		if = {
			limit = {
				is_country_type = default
				is_ai = yes
				or = {
					has_global_flag = custom_difficulty_activate_player_vassal_ai_boni
					not = { exists = overlord }
					and = {
						exists = overlord
						overlord = { is_ai = yes }
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = { which = custom_difficulty_random_handicap_perc value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_country_flag = custom_difficulty_jobs_changed
				set_country_flag = custom_difficulty_cap_changed
				set_country_flag = custom_difficulty_upkeep_changed
				set_country_flag = custom_difficulty_ship_cost_changed
				set_country_flag = custom_difficulty_stability_changed
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_country_flag = custom_difficulty_damage_changed
				set_country_flag = custom_difficulty_hull_changed
				set_country_flag = custom_difficulty_armor_changed
				set_country_flag = custom_difficulty_shield_changed
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_random_handicap_perc value = event_target:custom_difficulty_var_storage }
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_ai_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_ai_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_ai_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_ai_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_ai_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_ai_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_ai_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_ai_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_ai_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_ai_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_ai_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_ai_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding ai bonuses
			country_event = { id = custom_difficulty.81 }
		}
		 #fe
		if = {
			limit = {
				or = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = ascended_empire
					is_country_type = eternal_empire
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_fe_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_fe_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_fe_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_fe_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_fe_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_fe_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_fe_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_fe_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_fe_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_fe_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_fe_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_fe_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding ai bonuses
			country_event = { id = custom_difficulty.81 }
		}
		 #leviathan
		if = {
			limit = {
				or = {
					is_country_type = guardian
					is_country_type = guardian_dragon
					is_country_type = guardian_stellarite
					is_country_type = guardian_wraith
					is_country_type = guardian_hiver
					is_country_type = guardian_horror
					is_country_type = guardian_fortress
					is_country_type = guardian_dreadnought
					is_country_type = guardian_sphere
					is_country_type = guardian_scavenger_bot
					is_country_type = guardian_elderly_tiyanki
					is_country_type = ldragon_country
					is_country_type = guardian_hatchling
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_leviathan_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_leviathan_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_leviathan_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_leviathan_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_leviathan_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_leviathan_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_leviathan_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_leviathan_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_leviathan_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_leviathan_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_leviathan_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_leviathan_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding crisis bonuses
			country_event = { id = custom_difficulty.82 }
		}
		 #player
		if = {
			limit = {
				or = {
					is_ai = no
					and = {
						has_global_flag = custom_difficulty_deactivate_player_vassal_ai_boni
						exists = overlord
						overlord = { is_ai = no }
					}
				}
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_player_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_player_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_player_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_player_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_player_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_player_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_player_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_player_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_player_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_player_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_player_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_player_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding player bonuses
			country_event = { id = custom_difficulty.80 }
		}
		 #crisis
		if = {
			limit = {
				or = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
					is_country_type = cybrex_empire
					is_country_type = sentinels
					is_country_type = portal_holders
					is_country_type = feral_prethoryn
					is_country_type = feral_prethoryn_infighting
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_crisis_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_crisis_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_crisis_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_crisis_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_crisis_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_crisis_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_crisis_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_crisis_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_crisis_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_crisis_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_crisis_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_crisis_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding crisis bonuses
			country_event = { id = custom_difficulty.82 }
		}
		 #marauders
		if = {
			limit = {
				or = {
					is_country_type = dormant_marauders
					is_country_type = ruined_marauders
					is_country_type = awakened_marauders
					is_country_type = marauder_raiders
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_marauders_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_marauders_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_marauders_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_marauders_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_marauders_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_marauders_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_marauders_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_marauders_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_marauders_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_marauders_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_marauders_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_marauders_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding crisis bonuses
			country_event = { id = custom_difficulty.82 }
		}
		 #other
		if = {
			limit = {
				NOR = {
					is_country_type = ai_empire
					is_country_type = ascended_empire
					is_country_type = awakened_fallen_empire
					is_country_type = awakened_marauders
					is_country_type = cybrex_empire
					is_country_type = default
					is_country_type = dormant_marauders
					is_country_type = eternal_empire
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = fallen_empire
					is_country_type = feral_prethoryn
					is_country_type = feral_prethoryn_infighting
					is_country_type = guardian
					is_country_type = guardian_dragon
					is_country_type = guardian_dreadnought
					is_country_type = guardian_elderly_tiyanki
					is_country_type = guardian_fortress
					is_country_type = guardian_hatchling
					is_country_type = guardian_hiver
					is_country_type = guardian_horror
					is_country_type = guardian_scavenger_bot
					is_country_type = guardian_sphere
					is_country_type = guardian_stellarite
					is_country_type = guardian_wraith
					is_country_type = ldragon_country
					is_country_type = marauder_raiders
					is_country_type = portal_holders
					is_country_type = ruined_marauders
					is_country_type = sentinels
					is_country_type = swarm
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_other_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_other_jobs_value }
				set_variable = { which = custom_difficulty_cap_value value = custom_difficulty_other_cap_value }
				set_variable = { which = custom_difficulty_upkeep_value value = custom_difficulty_other_upkeep_value }
				set_variable = { which = custom_difficulty_ship_cost_value value = custom_difficulty_other_ship_cost_value }
				set_variable = { which = custom_difficulty_stability_value value = custom_difficulty_other_stability_value }
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = custom_difficulty_other_diplo_upkeep_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_other_damage_value }
				set_variable = { which = custom_difficulty_hull_value value = custom_difficulty_other_hull_value }
				set_variable = { which = custom_difficulty_armor_value value = custom_difficulty_other_armor_value }
				set_variable = { which = custom_difficulty_shield_value value = custom_difficulty_other_shield_value }
				set_variable = { which = custom_difficulty_fire_rate_value value = custom_difficulty_other_fire_rate_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_cap_changed
				set_variable = { which = custom_difficulty_cap_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_upkeep_changed
				set_variable = { which = custom_difficulty_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_ship_cost_changed
				set_variable = { which = custom_difficulty_ship_cost_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_stability_changed
				set_variable = { which = custom_difficulty_stability_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_diplo_upkeep_changed
				set_variable = { which = custom_difficulty_diplo_upkeep_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_hull_changed
				set_variable = { which = custom_difficulty_hull_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_armor_changed
				set_variable = { which = custom_difficulty_armor_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_shield_changed
				set_variable = { which = custom_difficulty_shield_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_fire_rate_changed
				set_variable = { which = custom_difficulty_fire_rate_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.71 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.70 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.72 }
			}
			 #adding ai bonuses
			country_event = { id = custom_difficulty.81 }
		}
	}
}
country_event = {
	id = custom_difficulty.51
	trigger = { has_global_flag = custom_difficulty_activate_simple_mode }
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		 #ai
		if = {
			limit = {
				is_country_type = default
				is_ai = yes
				or = {
					has_global_flag = custom_difficulty_activate_player_vassal_ai_boni
					not = { exists = overlord }
					and = {
						exists = overlord
						overlord = { is_ai = yes }
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = { which = custom_difficulty_random_handicap_perc value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_country_flag = custom_difficulty_jobs_changed
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_random_handicap_perc value = event_target:custom_difficulty_var_storage }
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_ai_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_ai_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_ai_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding ai bonuses
			country_event = { id = custom_difficulty.84 }
		}
		 #fe
		if = {
			limit = {
				or = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = ascended_empire
					is_country_type = eternal_empire
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_fe_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_fe_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_fe_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding ai bonuses
			country_event = { id = custom_difficulty.84 }
		}
		 #leviathan
		if = {
			limit = {
				or = {
					is_country_type = guardian
					is_country_type = guardian_dragon
					is_country_type = guardian_stellarite
					is_country_type = guardian_wraith
					is_country_type = guardian_hiver
					is_country_type = guardian_horror
					is_country_type = guardian_fortress
					is_country_type = guardian_dreadnought
					is_country_type = guardian_sphere
					is_country_type = guardian_scavenger_bot
					is_country_type = guardian_elderly_tiyanki
					is_country_type = ldragon_country
					is_country_type = guardian_hatchling
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_leviathan_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_leviathan_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_leviathan_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding crisis bonuses
			country_event = { id = custom_difficulty.85 }
		}
		 #player
		if = {
			limit = {
				or = {
					is_ai = no
					and = {
						has_global_flag = custom_difficulty_deactivate_player_vassal_ai_boni
						exists = overlord
						overlord = { is_ai = no }
					}
				}
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_player_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_player_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_player_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding player bonuses
			country_event = { id = custom_difficulty.83 }
		}
		 #crisis
		if = {
			limit = {
				or = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
					is_country_type = cybrex_empire
					is_country_type = sentinels
					is_country_type = portal_holders
					is_country_type = feral_prethoryn
					is_country_type = feral_prethoryn_infighting
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_crisis_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_crisis_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_crisis_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding crisis bonuses
			country_event = { id = custom_difficulty.85 }
		}
		 #marauders
		if = {
			limit = {
				or = {
					is_country_type = dormant_marauders
					is_country_type = ruined_marauders
					is_country_type = awakened_marauders
					is_country_type = marauder_raiders
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_marauders_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_marauders_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_marauders_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding crisis bonuses
			country_event = { id = custom_difficulty.85 }
		}
		 #other
		if = {
			limit = {
				NOR = {
					is_country_type = ai_empire
					is_country_type = ascended_empire
					is_country_type = awakened_fallen_empire
					is_country_type = awakened_marauders
					is_country_type = cybrex_empire
					is_country_type = default
					is_country_type = dormant_marauders
					is_country_type = eternal_empire
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = fallen_empire
					is_country_type = feral_prethoryn
					is_country_type = feral_prethoryn_infighting
					is_country_type = guardian
					is_country_type = guardian_dragon
					is_country_type = guardian_dreadnought
					is_country_type = guardian_elderly_tiyanki
					is_country_type = guardian_fortress
					is_country_type = guardian_hatchling
					is_country_type = guardian_hiver
					is_country_type = guardian_horror
					is_country_type = guardian_scavenger_bot
					is_country_type = guardian_sphere
					is_country_type = guardian_stellarite
					is_country_type = guardian_wraith
					is_country_type = ldragon_country
					is_country_type = marauder_raiders
					is_country_type = portal_holders
					is_country_type = ruined_marauders
					is_country_type = sentinels
					is_country_type = swarm
				}
				is_ai = yes
			}
			event_target:custom_difficulty_var_storage = {
				set_variable = { which = custom_difficulty_station_value value = custom_difficulty_other_station_value }
				set_variable = { which = custom_difficulty_jobs_value value = custom_difficulty_other_jobs_value }
				set_variable = { which = custom_difficulty_damage_value value = custom_difficulty_other_damage_value }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_station_changed
				set_variable = { which = custom_difficulty_station_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_jobs_changed
				set_variable = { which = custom_difficulty_jobs_value value = event_target:custom_difficulty_var_storage }
			}
			if = {
				limit = {
					not = {
						check_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
					}
				}
				set_country_flag = custom_difficulty_damage_changed
				set_variable = { which = custom_difficulty_damage_value value = event_target:custom_difficulty_var_storage }
			}
			 #removing ai bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_ai_modifier_active }
				country_event = { id = custom_difficulty.74 }
			}
			 #removing player bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_player_modifier_active }
				country_event = { id = custom_difficulty.73 }
			}
			 #removing crisis bonuses if they exist
			if = {
				limit = { has_country_flag = custom_difficulty_crisis_modifier_active }
				country_event = { id = custom_difficulty.75 }
			}
			 #adding ai bonuses
			country_event = { id = custom_difficulty.84 }
		}
	}
}
