#This file was created by script!
#Instead of editing it, you should change the origin files or the script and rerun the script!
#Python files that can be directly used for a rerun (storing all parameters from the last run) should be in the main directory
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # Do not remove or rename this
 # Possible Variables for Buildings:
 # strategic_resource: strategic resource, deprecated, strategic resource used by the building.
 # allow: trigger to check for allowing construction of building.
 # prerequisites: Tech requirements for building.
 # empire_unique: boolean, can only build one if set to true.
 # cost: resource table, cost of building.
 # is_orbital: boolean, can only be built in orbital station.
 # modifier: modifier, deprecated, applies a modifier to planet.
 # base_buildtime: int, number of days for construction.
 # requires_pop, boolean, building will require a pop for production.
 # required_resources, resource table, required resources for production.
 # produced_resources, resource table, produced resources in production.
 # upgrades, buildings list, buildings this building can upgrade into.
 # is_listed, boolean, toggles if this building is shown in the non-upgrade buildable list.
 # planet_unique, toggles if one can build multiple of this type on a single planet.
 #
 # BALANCE
 # can change the time and cost of all common buildings with these variables below
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # Do not remove or rename this
 # Possible Variables for Buildings:
 # strategic_resource: strategic resource, deprecated, strategic resource used by the building.
 # allow: trigger to check for allowing construction of building.
 # prerequisites: Tech requirements for building.
 # empire_unique: boolean, can only build one if set to true.
 # cost: resource table, cost of building.
 # is_orbital: boolean, can only be built in orbital station.
 # modifier: modifier, deprecated, applies a modifier to planet.
 # base_buildtime: int, number of days for construction.
 # requires_pop, boolean, building will require a pop for production.
 # required_resources, resource table, required resources for production.
 # produced_resources, resource table, produced resources in production.
 # upgrades, buildings list, buildings this building can upgrade into.
 # is_listed, boolean, toggles if this building is shown in the non-upgrade buildable list.
 # planet_unique, toggles if one can build multiple of this type on a single planet.
 #
 # BALANCE
 # can change the time and cost of all common buildings with these variables below
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # Do not remove or rename this
 # Possible Variables for Buildings:
 # strategic_resource: strategic resource, deprecated, strategic resource used by the building.
 # allow: trigger to check for allowing construction of building.
 # prerequisites: Tech requirements for building.
 # empire_unique: boolean, can only build one if set to true.
 # cost: resource table, cost of building.
 # is_orbital: boolean, can only be built in orbital station.
 # modifier: modifier, deprecated, applies a modifier to planet.
 # base_buildtime: int, number of days for construction.
 # requires_pop, boolean, building will require a pop for production.
 # required_resources, resource table, required resources for production.
 # produced_resources, resource table, produced resources in production.
 # upgrades, buildings list, buildings this building can upgrade into.
 # is_listed, boolean, toggles if this building is shown in the non-upgrade buildable list.
 # planet_unique, toggles if one can build multiple of this type on a single planet.
 #
 # BALANCE
 # can change the time and cost of all common buildings with these variables below
building_bunkers = {
	base_buildtime = 80
	icon = "building_bunkers_tycoon"
	is_listed = yes
	planet_unique = yes
	defense_armies = 3
	immune_to_bombardment = yes
	start_tech = yes
	tier = 0
	potential = {
		planet = { NOT = { is_planet_class = pc_habitat } }
	}
	cost = { minerals = 150 }
	required_resources = { energy = 1 }
	planet_modifier = { planet_unrest_add = -10 planet_orbital_bombardment_damage = -0.15 }
	allow = {
		if = {
			limit = {
				owner = { NOT = { has_authority = auth_machine_intelligence } }
			}
			custom_tooltip = {
				text = "requires_building_capital_1"
				planet = {
					OR = {
						has_building = "building_capital_1"
						has_building = "building_capital_2"
						has_building = "building_capital_3"
					}
				}
			}
		}
		if = {
			limit = { owner = { has_authority = auth_machine_intelligence } }
			custom_tooltip = {
				text = "requires_building_machine_capital_1"
				planet = {
					OR = {
						has_building = "building_machine_capital_1"
						has_building = "building_machine_capital_2"
						has_building = "building_machine_capital_3"
					}
				}
			}
		}
	}
	ai_allow = {
		NOR = {
			has_resource = { type = sr_betharian amount > 0 }
			has_resource = { type = sr_alien_pets amount > 0 }
		}
		NOT = { owner = { has_country_flag = cgm_disable_vanilla_building_AI } }
	}
	ai_weight = { weight = 0 }
}
building_defense_center = {
	base_buildtime = 360
	planet_unique = yes
	icon = "building_defense_center"
	defense_armies = 2
	cost = { minerals = 150 }
	show_tech_unlock_if = { NOT = { has_authority = auth_machine_intelligence } }
	potential = {
		NOT = { owner = { has_authority = auth_machine_intelligence } }
	}
	destroy_if = {
		exists = owner
		owner = { has_authority = auth_machine_intelligence }
	}
	allow = {
		custom_tooltip = {
			text = "requires_building_capital_2"
			planet = {
				OR = { has_building = "building_capital_2" has_building = "building_capital_3" }
			}
		}
	}
	required_resources = { energy = 2 }
	army_modifier = { army_defense_damage_mult = 0.2 army_defense_morale_mult = 0.2 }
	ai_allow = {
		NOR = {
			has_resource = { type = sr_betharian amount > 0 }
			has_resource = { type = sr_alien_pets amount > 0 }
		}
		NOT = {
			planet = {
				owner = {
					any_owned_planet = {
						NOT = { is_same_value = from }
						has_building = building_military_academy
					}
				}
			}
		}
		 # If planet only has slaves/robots, keep it to mining and farming...
		is_slave_tile_or_planet = no
		NOT = { owner = { has_country_flag = cgm_disable_vanilla_building_AI } }
	}
	ai_weight = {
		weight = 10
		modifier = {
			weight = 150
			from.owner = {
				OR = { has_ethic = "ethic_pacifist" has_ethic = "ethic_fanatic_pacifist" }
			}
		}
		modifier = {
			weight = 0
			from = {
				sector_controlled = yes
				NOT = { has_building = building_defense_center }
			}
		}
	}
	prerequisites = { "tech_planet_defense" }
}
 #Machine Empire Defense Center
building_defense_network = {
	base_buildtime = 360
	planet_unique = yes
	icon = "building_defense_network"
	defense_armies = 2
	cost = { minerals = 150 }
	show_tech_unlock_if = { has_authority = auth_machine_intelligence }
	potential = { owner = { has_authority = auth_machine_intelligence } }
	destroy_if = {
		exists = owner
		owner = { NOT = { has_authority = auth_machine_intelligence } }
	}
	allow = {
		custom_tooltip = {
			text = "requires_building_machine_capital_2"
			planet = {
				OR = { has_building = "building_machine_capital_2" has_building = "building_machine_capital_3" }
			}
		}
	}
	required_resources = { energy = 2 }
	army_modifier = { army_defense_damage_mult = 0.2 army_defense_morale_mult = 0.2 }
	ai_allow = {
		NOR = {
			has_resource = { type = sr_betharian amount > 0 }
			has_resource = { type = sr_alien_pets amount > 0 }
		}
		NOT = {
			planet = {
				owner = {
					any_owned_planet = {
						NOT = { is_same_value = from }
						has_building = building_military_academy
					}
				}
			}
		}
		 # If planet only has slaves/robots, keep it to mining and farming...
		is_slave_tile_or_planet = no
		NOT = { owner = { has_country_flag = cgm_disable_vanilla_building_AI } }
	}
	ai_allow = {
		NOR = {
			has_resource = { type = sr_betharian amount > 0 }
			has_resource = { type = sr_alien_pets amount > 0 }
		}
	}
	ai_weight = {
		weight = 20
		modifier = {
			weight = 0
			from = {
				sector_controlled = yes
				NOT = { has_building = building_commando_hub }
			}
		}
	}
	prerequisites = { "tech_planet_defense" }
}
 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
 # Do not remove or rename this
 # Possible Variables for Buildings:
 # strategic_resource: strategic resource, deprecated, strategic resource used by the building.
 # allow: trigger to check for allowing construction of building.
 # prerequisites: Tech requirements for building.
 # empire_unique: boolean, can only build one if set to true.
 # cost: resource table, cost of building.
 # is_orbital: boolean, can only be built in orbital station.
 # modifier: modifier, deprecated, applies a modifier to planet.
 # base_buildtime: int, number of days for construction.
 # requires_pop, boolean, building will require a pop for production.
 # required_resources, resource table, required resources for production.
 # produced_resources, resource table, produced resources in production.
 # upgrades, buildings list, buildings this building can upgrade into.
 # is_listed, boolean, toggles if this building is shown in the non-upgrade buildable list.
 # planet_unique, toggles if one can build multiple of this type on a single planet.
 #
 # BALANCE
 # can change the time and cost of all common buildings with these variables below
@b0time = 120
@b0cost = 30
@b0effect = 1
@b0upkeep = 1
@b1time = 210
@b1cost = 60
@b1effect = 2
@b1upkeep = 1
@b2time = 180
@b2cost = 90
@b2effect = 3
@b2upkeep = 1.5
@b3time = 180
@b3cost = 120
@b3effect = 4
@b3upkeep = 2
@b4time = 180
@b4cost = 150
@b4effect = 5
@b4upkeep = 2.5
@b5time = 180
@b5cost = 180
@b5effect = 8
@b5upkeep = 3
@feupkeep = 4
@feproduction = 12
@science1 = 1
@science2 = 2
@science3 = 3
@science4 = 4
@science5 = 6
