namespace = ex_spawn_engine_3

event = { #game start event only. Note: the event name is tuned respective of other mods that load in the same array.
	id = ex_spawn_engine_3.0
	hide_window = yes
	fire_only_once = yes
	
	immediate = { 
		set_global_flag = guillis_planet_modifiers_active
		every_planet = { 
			if = { #this adds a unique flag to gas giant moons, which is checked through a scripted trigger (see common/scripted_triggers/ex_engine_triggers.txt )
				limit = {
					is_planet_class = pc_gas_giant
					has_moon = yes
					any_moon = { NOT = { has_planet_flag = gas_giant_moon } }
				}
				every_moon = { set_planet_flag = gas_giant_moon }
			}				
			if = {
				limit = { #i'll add conditions for STNH and some other stuff later.
					NAND = { 
						has_owner = yes
						owner = { is_country_type = default }
						is_capital = yes
					}
				}		
				planet_event = { id = ex_spawn_engine_3.1 } #we need to fire secondary events since we have fire_only_once toggled
			}	
		}
	}
}

planet_event = { 
	id = ex_spawn_engine_3.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_regular_planet_modifiers = yes
		if = { #if after the removal some modifiers are still present, these either come from other mods or are special vanilla modifiers. We will record their numbers in variable = other_pm_points.
			limit = { num_modifiers > 0 } 
			set_variable = { which = other_pm_points value = 0 }	
			check_modifier_numbers = yes #first step - store the number of non-vanilla modifiers in a variable (variable = other_pm_points )
		}				
		set_variable = { which = pm_points value = 0 } #we are adding a variable for each planet that will be used to determine the number of planet modifiers
		if = { #stars only 					
			limit = { is_star = yes	} 
			random_list = { #0.33 = x*1 + x/3 *2	
				73.33 = { break = yes } #keep the value at 0
				20 = { change_variable = { which = pm_points value = 1 } }
				6.66 = { change_variable = { which = pm_points value = 2 } }
			}	
		}
		if = { 
			limit = { #regular habitable planets only
				is_colonizable = yes
				NOR = {
					is_special_planet = yes
					is_unusual_planet = yes
					is_artificial_habitable_planet = yes
					is_machine_planet = yes
				}	
			} 
			random_list = { #1.5 = x*1 + x/2*2+x/4*3
				21.25 = { break = yes } #keep the value at 0
				45 = { change_variable = { which = pm_points value = 1 } }
				22.5 = { change_variable = { which = pm_points value = 2 } }
				11.25 = { change_variable = { which = pm_points value = 3 } }
			}	
		}	
		if = { 
			limit = { #uninhabitable planets and irregular habitable planets
				OR = {
					AND = {
						is_colonizable = no
						is_star = no
						is_megastructure = no
					}	
					is_special_planet = yes
					is_unusual_planet = yes
					is_artificial_planet = yes
				}	
			} 
			random_list = { #1.2 = x*1 + x/2*2+x/4*3
				21.25 = { break = yes } #keep the value at 0
				45 = { change_variable = { which = pm_points value = 1 } }
				22.5 = { change_variable = { which = pm_points value = 2 } }
				11.25 = { change_variable = { which = pm_points value = 3 } }
			}	
		}				
		if = { 
			limit = { is_machine_planet = yes } 
			random_list = { 
				75 = { break = yes } #keep the value at 0
				25 = { change_variable = { which = pm_points value = 1 } }
			}	
		}							
		#other_pm_points - recording non-vanilla and special modifiers is subtracted from pm_points to make sure we are not spawning too many modifiers anywhere.
		subtract_variable = { which = pm_points value = other_pm_points }
		if = { 
			limit = { check_variable = { which = pm_points value > 0 } }
			else = { break = yes } #if the number of pm_points is 0 or lower, terminate the effect otherwise continue
			#now we are setting variables into the planet's scope, to be used to determine variable distribution
			set_variable = { which = positive_pm_points value = 0 }
			set_variable = { which = neutal_pm_points value = 0 }
			set_variable = { which = mixed_pm_points value = 0 }
			set_variable = { which = negative_pm_points value = 0 }
			while = { #we are going to assign pm_points to the planet, according to the above scheme - positive, neutral, mixed, negative. 
				limit = { check_variable = { which = pm_points value > 0 } }	
				random_list = { #please use the modifier field to make sure stuff is properly balanced
					25 = { 
						change_variable = { which = positive_pm_points value = 1 }
						modifier = { factor = 1 is_star = yes }							
						modifier = { factor = 1 is_regular_uninhabitable_planet = yes }
						modifier = { factor = 1 is_regular_habitable_planet = yes }
						modifier = { factor = 1 is_special_planet = yes }
						modifier = { factor = 1 is_unusual_planet = yes }
						modifier = { factor = 1 is_artificial_planet = yes }
						modifier = { factor = 1 is_machine_planet = yes }					
					}
					25 = { 
						change_variable = { which = neutal_pm_points value = 1 }
						modifier = { factor = 1 is_star = yes }							
						modifier = { factor = 1 is_regular_uninhabitable_planet = yes }
						modifier = { factor = 1 is_regular_habitable_planet = yes }
						modifier = { factor = 1 is_special_planet = yes }
						modifier = { factor = 1 is_unusual_planet = yes }
						modifier = { factor = 1 is_artificial_planet = yes }
						modifier = { factor = 1 is_machine_planet = yes }							
					}
					25 = { 
						change_variable = { which = mixed_pm_points value = 1 }
						modifier = { factor = 1 is_star = yes }							
						modifier = { factor = 1 is_regular_uninhabitable_planet = yes }
						modifier = { factor = 1 is_regular_habitable_planet = yes }
						modifier = { factor = 1 is_special_planet = yes }
						modifier = { factor = 1 is_unusual_planet = yes }
						modifier = { factor = 1 is_artificial_planet = yes }
						modifier = { factor = 1 is_machine_planet = yes }							
					}
					25 = { 
						change_variable = { which = negative_pm_points value = 1 }
						modifier = { factor = 1 is_star = yes }							
						modifier = { factor = 1 is_regular_uninhabitable_planet = yes }
						modifier = { factor = 1 is_regular_habitable_planet = yes }
						modifier = { factor = 1 is_special_planet = yes }
						modifier = { factor = 1 is_unusual_planet = yes }
						modifier = { factor = 1 is_artificial_planet = yes }
						modifier = { factor = 1 is_machine_planet = yes }							
					}
				}	
				change_variable = { which = pm_points value = -1 }
			}	
		}
	}
}	

country_event = { #this is a contingency - in case the mod is not loaded in gamestart, but is nonetheless present. 
	id = ex_spawn_engine_2.2
	hide_window = yes
	fire_only_once = yes
	
	trigger = { NOT = { has_global_flag = guillis_planet_modifiers_active } }
	
	immediate = { set_global_flag = guillis_planet_modifiers_active }
}
