 #this = tile
 #prev = planet
 #prevprev = country
 #Build the building that fits the category defined in the name of each trigger.
 #Check if unique buildings of that category can be build first and do so if possible
 #Leave the 'succesful ->set flag' at the end as it is
cgm_add_special_building = {
	log = "trying to build special on tile [prev.cgm_curTile]"
	 #SPECIAL BUILDING NUMBER 1:
	if = {
		limit = {
			prev.owner = {
				check_variable = { which = cgm_special_bestBuilding value = 1 }
			}
		}
		add_building_construction = building_autochthon_monument
	}
	if = {
		limit = {
			or = { has_building = yes has_building_construction = yes }
		}
		prevprev = { set_country_flag = cgm_auto_built }
	}
}
#Special SEARCH effect:
# this = planet
#  prev/owner = country
cgm_search_for_special_building = {
	 #TODO search for special building!
	 #define tmp global event target to the planet we want to build on and a tile specification on that scope. We can later use those to build when this weight is better than the general one
	 #cgm_special_bestWeight named like this for easier comparison! Local scope!
	log = "searching for special buildings on planet [this.GetName]"
	set_variable = { which = cgm_special_bestWeight value = 10 }	 
	if = {
		limit = {
			has_planet_flag = fortify_planet
			multiply_variable = { which = cgm_special_bestWeight value = 4 }
		}
	}
	if = {
		limit = {
			check_variable = { which = cgm_special_bestWeight value > prev }
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = prev }
			set_variable = { which = cgm_special_bestBuilding value = 2 }
		}
		save_global_event_target_as = cgm_best_planet_for_special
		break = yes
	}	
	if = {
		limit = { 
			OR = {
				AND = { 
					is_habitat = no
					OR = { 
						AND = { 
							prev = { is_machine_empire = no is_spiritualist = no }
							NOR = { 
								has_building = building_autochthon_monument
								has_building = building_heritage_site
								has_building = building_hypercomms_forum
								has_building = building_autocurating_vault
							}
						}	
						AND = { 
							prev = { is_spiritualist = yes }
							NOR = { 
								has_building = building_temple
								has_building = building_holotemple
								has_building = building_sacred_nexus
								has_building = building_citadel_of_faith
							}
						}				
						AND = { 
							prev = { is_machine_empire = yes }
							NOR = { 
								has_building = building_uplink_node
								has_building = building_network_junction
								has_building = building_system_conflux
								has_building = building_alpha_hub
							}
						}	
					}	
				}
				AND = { 
					is_habitat = yes
					OR = { 
						AND = { 
							prev = { is_machine_empire = no }
							NOR = { 
								has_building = building_hab_cultural_center
								has_building = building_autocurating_vault
								has_building = building_citadel_of_faith
							}
						}						
						AND = { 
							prev = { is_machine_empire = yes }
							NOR = { 
								has_building = building_uplink_node
								has_building = building_network_junction
								has_building = building_system_conflux
								has_building = building_alpha_hub
							}
						}	
					}
				}
			}	
			prev = {
				check_variable = { which = cgm_special_bestWeight value < 20 }
			}
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = 20 }
			set_variable = { which = cgm_special_bestBuilding value = 1 }
		}
		save_global_event_target_as = cgm_best_planet_for_special
		break = yes
	}	
	if = {	
		limit = { 
			is_capital = yes
			has_capital_3 = yes
			OR = { 
				AND = { 
					prev = { has_ascension_perk = ap_mind_over_matter }	
					NOT = { has_building = building_psi_corps }
				}	
				AND = { 
					prev = { is_machine_empire = no has_technology = tech_galactic_benevolence }	
					NOT = { has_building = building_ministry_benevolence }
				}				
			}
			prev = {
				check_variable = { which = cgm_special_bestWeight value < 30 }
			}
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = 30 }
			set_variable = { which = cgm_special_bestBuilding value = 1 }
		}
		save_global_event_target_as = cgm_best_planet_for_special		
		break = yes
	}			
}

### Adjacancy 
add_base_res_adjacency_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	add_building_construction = building_power_hub_1
	if = {
		limit = {
			or = { has_building = yes has_building_construction = yes }
		}
		prevprev = { set_country_flag = cgm_auto_built }
	}
}
add_science_adjacency_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	add_building_construction = building_basic_science_lab_1
	if = {
		limit = {
			or = { has_building = yes has_building_construction = yes }
		}
		prevprev = { set_country_flag = cgm_auto_built }
	}
}

### Resources
add_energy_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	if = { 
		limit = { has_any_tile_strategic_resource = yes }
		if = { 
			limit = { has_resource = { type = sr_betharian amount > 0 } planets_enhanced_enabled = no }
			add_building_construction = betharian_power_plant
			if = {
				limit = { OR = { has_building_construction = yes has_building = yes } }
				prev.owner = { set_country_flag = cgm_auto_built }
				break = yes
				else = { break = yes } #we want to break in any case, since we won't be building anything else on this tile	
			}	
			#else = { 
			#	if = { 
			#	limit = { has_resource = { type = sr_alien_pets amount > 0 } planets_enhanced_enabled = yes }
			#	planet_enhanced_resource_effects = yes #or whatever we will call this 
			#	else = { check for other mods and their APIs			
		}	
		break = yes #we want to break in any case, since we won't be building anything else on this tile
		else = { 
			if = { 
				limit = { 
					prev.owner = { NOT = { has_country_flag = energy_focus_2 } }				
					OR = { 
						new_building_content_enabled = no
						AND = { 
							new_building_content_enabled = yes
							has_resource = { type = energy amount < 2 } #we do not want to build on more than 1 energy anything other than tile restricted buildings
						}
					}	
				}	
				add_building_construction = building_galactic_stock_exchange
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 			
					add_building_construction = building_probability_engine	
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }
				}							
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 			
					add_building_construction = building_akx_worm_1
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_power_hub_1
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }			
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_visitor_center
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_hive_synapse
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_control_center
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}
				if = {
					limit = { 
						NOR = { has_building_construction = yes has_building = yes }
						prev = { has_planet_flag = build_neuro_electric_amplifier }
					} 
					add_building_construction = building_neuro_electric_amplifier
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				#if = { 
				#	limit = { #check other mod triggers } #replicate as needed per mod
				#	API effects
				#	if = {
				#		limit = { OR = { has_building_construction = yes has_building = yes } }
				#		prev.owner = { set_country_flag = cgm_auto_built }
				#		break = yes
				#	}
				#}		
				if = {
					limit = { new_building_content_enabled = no }
					if = { 
						limit = { prev = { is_habitat = no } }
						add_building_construction = building_power_plant_1
						else = { add_building_construction = building_hab_solar_power_processor }
					}	
					if = {
						limit = { OR = { has_building_construction = yes has_building = yes } }
						prev.owner = { set_country_flag = cgm_auto_built }
						break = yes
					}
					else = {
						if = { 
							limit = { has_resource = { type = energy amount > 0 } }
							if = { 
								limit = { has_resource = { type = energy amount = 1 } }
								add_building_construction = building_isotope_refinery_1_1
								else = { 
									if = { 
										limit = { has_resource = { type = energy amount = 2 } }
										add_building_construction = building_isotope_refinery_1_2
										else = { 
											if = { 
												limit = { has_resource = { type = energy amount = 3 } }
												add_building_construction = building_isotope_refinery_1_3
												else = { 
													if = { 
														limit = { has_resource = { type = energy amount = 4 } }
														add_building_construction = building_isotope_refinery_1_4									
														else = { 
															if = { 
																limit = { has_resource = { type = energy amount = 5 } }
																add_building_construction = building_isotope_refinery_1_5
															}
														}
													}
												}
											}
										}
									}
								}
							}	
							else = { 
								if = { 
									limit = { has_deposit = no }
									add_building_construction = building_economic_district_1
								}
							}					
						}
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
					}		
				}
				else = { 
					if = {
						limit = { new_building_content_enabled = no }
						if = { 
							limit = { prev = { is_habitat = no } }
							add_building_construction = building_power_plant_1
							else = { add_building_construction = building_hab_solar_power_processor }
						}	
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}						
						else = {
							if = { 
								limit = { has_resource = { type = energy amount > 0 } }
								if = { 
									limit = { has_resource = { type = energy amount = 1 } }
									add_building_construction = building_isotope_refinery_1_1
									else = { 
										if = { 
											limit = { has_resource = { type = energy amount = 2 } }
											add_building_construction = building_isotope_refinery_1_2
											else = { 
												if = { 
													limit = { has_resource = { type = energy amount = 3 } }
													add_building_construction = building_isotope_refinery_1_3
													else = { 
														if = { 
															limit = { has_resource = { type = energy amount = 4 } }
															add_building_construction = building_isotope_refinery_1_4									
															else = { 
																if = { 
																	limit = { has_resource = { type = energy amount = 5 } }
																	add_building_construction = building_isotope_refinery_1_5
																}
															}
														}
													}
												}
											}
										}
									}
								}	
								else = { 
									if = { 
										limit = { has_deposit = no }
										add_building_construction = building_economic_district_1
									}
								}					
							}
							if = {
								limit = { OR = { has_building_construction = yes has_building = yes } }
								prev.owner = { set_country_flag = cgm_auto_built }
								break = yes
							}					
						}		
					}
				}	
			}
		}	
	}
}	
add_minerals_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	if = { 
		limit = { has_any_tile_strategic_resource = yes }
	#	ADD API effects
		break = yes
		else = { 
			if = { 
				limit = { 
					prev.owner = { NOT = { has_country_flag = minerals_focus_2 } }				
					OR = { 
						new_building_content_enabled = no
						AND = { 
							new_building_content_enabled = yes
							has_resource = { type = minerals amount < 2 } #we do not want to build on more than 1 minerals anything other than tile restricted buildings
						}
					}	
				}	
				if = {
					limit = { 
						NOR = { has_building_construction = yes has_building = yes }
						prev = { has_planet_flag = build_slave_processing }
					} 
					add_building_construction = building_slave_processing
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { 
						NOR = { has_building_construction = yes has_building = yes }
						prev = { has_planet_flag = build_neuro_electric_amplifier }
					} 
					add_building_construction = building_neuro_electric_amplifier
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}		
				#if = { 
				#	limit = { #check other mod triggers } #replicate as needed per mod
				#	API effects
				#	if = {
				#		limit = { OR = { has_building_construction = yes has_building = yes } }
				#		prev.owner = { set_country_flag = cgm_auto_built }
				#		break = yes
				#	}
				#}					
				if = {
					limit = { new_building_content_enabled = no }
					if = { 
						limit = { prev = { is_habitat = no } }
						add_building_construction = building_mining_network_1
						else = { add_building_construction = building_hab_astro_mining_facility }
					}	
					if = {
						limit = { OR = { has_building_construction = yes has_building = yes } }
						prev.owner = { set_country_flag = cgm_auto_built }
						break = yes
					}		
					else = {
						if = { 
							limit = { has_resource = { type = minerals amount > 0 } }
							if = { 
								limit = { has_resource = { type = minerals amount = 1 } }
								add_building_construction = building_mining_complex_1_1
								else = { 
									if = { 
										limit = { has_resource = { type = minerals amount = 2 } }
										add_building_construction = building_mining_complex_1_2
										else = { 
											if = { 
												limit = { has_resource = { type = minerals amount = 3 } }
												add_building_construction = building_mining_complex_1_3
												else = { 
													if = { 
														limit = { has_resource = { type = minerals amount = 4 } }
														add_building_construction = building_mining_complex_1_4									
														else = { 
															if = { 
																limit = { has_resource = { type = minerals amount = 5 } }
																add_building_construction = building_mining_complex_1_5
															}
														}
													}
												}
											}
										}
									}
								}
							}	
							else = { 
								if = { 
									limit = { has_deposit = no }
									add_building_construction = building_manufacturing_complex_1
								}
							}					
						}
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
					}		
				}
				else = { 
					if = {
						limit = { new_building_content_enabled = no }
						if = { 
							limit = { prev = { is_habitat = no } }
							add_building_construction = building_mining_network_1
							else = { add_building_construction = building_hab_astro_mining_facility }
						}	
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}		
						else = {
							if = { 
								limit = { has_resource = { type = minerals amount > 0 } }
								if = { 
									limit = { has_resource = { type = minerals amount = 1 } }
									add_building_construction = building_mining_complex_1_1
									else = { 
										if = { 
											limit = { has_resource = { type = minerals amount = 2 } }
											add_building_construction = building_mining_complex_1_2
											else = { 
												if = { 
													limit = { has_resource = { type = minerals amount = 3 } }
													add_building_construction = building_mining_complex_1_3
													else = { 
														if = { 
															limit = { has_resource = { type = minerals amount = 4 } }
															add_building_construction = building_mining_complex_1_4									
															else = { 
																if = { 
																	limit = { has_resource = { type = minerals amount = 5 } }
																	add_building_construction = building_mining_complex_1_5
																}
															}
														}
													}
												}
											}
										}
									}
								}	
								else = { 
									if = { 
										limit = { has_deposit = no }
										add_building_construction = building_manufacturing_complex_1
									}
								}					
							}
							if = {
								limit = { OR = { has_building_construction = yes has_building = yes } }
								prev.owner = { set_country_flag = cgm_auto_built }
								break = yes
							}					
						}		
					}
				}	
			}
		}	
	}
}	
add_food_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	if = { 
		limit = { has_any_tile_strategic_resource = yes }
	#	API effects
		break = yes
		else = { 
			if = { 
				limit = { 
					prev.owner = { NOT = { has_country_flag = food_focus_2 } }				
					OR = { 
						new_building_content_enabled = no
						AND = { 
							new_building_content_enabled = yes
							has_resource = { type = food amount < 2 } #we do not want to build on more than 1 food anything other than tile restricted buildings
						}
					}	
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_paradise_dome
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { 
						NOR = { has_building_construction = yes has_building = yes }
						new_building_content_enabled = yes
					} 
					add_building_construction = building_agricultural_processor_1
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}			
				#if = { 
				#	limit = { #check other mod triggers } #replicate as needed per mod
				#	API effects
				#	if = {
				#		limit = { OR = { has_building_construction = yes has_building = yes } }
				#		prev.owner = { set_country_flag = cgm_auto_built }
				#		break = yes
				#	}
				#}					
				if = {
					limit = { new_building_content_enabled = no }
					if = { 
						limit = { prev = { is_habitat = no } }
						add_building_construction = building_hydroponic_farms_1
						add_building_construction = building_nutrient_paste_facility
						else = { 
							add_building_construction = building_hab_agri_bay
							add_building_construction = building_nutrient_paste_facility
						}
					}	
					if = {
						limit = { OR = { has_building_construction = yes has_building = yes } }
						prev.owner = { set_country_flag = cgm_auto_built }
						break = yes
					}						
					else = {
						if = { 
							limit = { has_resource = { type = food amount > 0 } }
							if = { 
								limit = { has_resource = { type = food amount = 1 } }
								add_building_construction = building_farming_complex_1_1
								else = { 
									if = { 
										limit = { has_resource = { type = food amount = 2 } }
										add_building_construction = building_farming_complex_1_2
										else = { 
											if = { 
												limit = { has_resource = { type = food amount = 3 } }
												add_building_construction = building_farming_complex_1_3
												else = { 
													if = { 
														limit = { has_resource = { type = food amount = 4 } }
														add_building_construction = building_farming_complex_1_4									
														else = { 
															if = { 
																limit = { has_resource = { type = food amount = 5 } }
																add_building_construction = building_farming_complex_1_5
															}
														}
													}
												}
											}
										}
									}
								}
							}	
							else = { 
								if = { 
									limit = { has_deposit = no }
									add_building_construction = building_hydroponic_farm_1
								}
							}					
						}
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
					}		
				}
				else = { 
					if = {
						limit = { new_building_content_enabled = no }
						if = { 
							limit = { prev = { is_habitat = no } }
							add_building_construction = building_hydroponic_farms_1
							add_building_construction = building_nutrient_paste_facility
							else = { 
								add_building_construction = building_hab_agri_bay
								add_building_construction = building_nutrient_paste_facility
							}
						}	
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}			
						else = {
							if = { 
								limit = { has_resource = { type = food amount > 0 } }
								if = { 
									limit = { has_resource = { type = food amount = 1 } }
									add_building_construction = building_farming_complex_1_1
									else = { 
										if = { 
											limit = { has_resource = { type = food amount = 2 } }
											add_building_construction = building_farming_complex_1_2
											else = { 
												if = { 
													limit = { has_resource = { type = food amount = 3 } }
													add_building_construction = building_farming_complex_1_3
													else = { 
														if = { 
															limit = { has_resource = { type = food amount = 4 } }
															add_building_construction = building_farming_complex_1_4									
															else = { 
																if = { 
																	limit = { has_resource = { type = food amount = 5 } }
																	add_building_construction = building_farming_complex_1_5
																}
															}
														}
													}
												}
											}
										}
									}
								}	
								else = { 
									if = { 
										limit = { has_deposit = no }
										add_building_construction = building_hydroponic_farm_1
									}
								}					
							}
							if = {
								limit = { OR = { has_building_construction = yes has_building = yes } }
								prev.owner = { set_country_flag = cgm_auto_built }
								break = yes
							}					
						}		
					}
				}	
			}
		}	
	}
}	
add_society_research_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	if = { 
		limit = { has_any_tile_strategic_resource = yes }
		if = { 
			limit = { has_resource = { type = sr_alien_pets amount > 0 } planets_enhanced_enabled = no }
			add_building_construction = building_xeno_zoo
			add_building_construction = building_animal_evaluation_laboratory
			if = {
				limit = { OR = { has_building_construction = yes has_building = yes } }
				prev.owner = { set_country_flag = cgm_auto_built }
				break = yes
				else = { break = yes } #we want to break in any case, since we won't be building anything else on this tile
			}	
			#else = { 
			#	if = { 
			#	limit = { has_resource = { type = sr_alien_pets amount > 0 } planets_enhanced_enabled = yes }
			#	planet_enhanced_resource_effects = yes #or whatever we will call this 
			#	else = { check for other mods and their APIs			
		}	
		break = yes
		else = { 
			if = { 
				limit = { 			
					prev.owner = { NOT = { has_country_flag = society_research_focus_2 } }				
					OR = { 
						new_building_content_enabled = no
						AND = { 
							new_building_content_enabled = yes
							has_resource = { type = society_research amount < 2 } #we do not want to build on more than 1 society_research anything other than tile restricted buildings
						}
					}	
				}	
				add_building_construction = building_institute
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_singularity_core
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}		
				if = {
					limit = { 
						new_building_content_enabled = no
						prev = { has_planet_flag = build_clone_vats }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_clone_vats
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}					
				if = {
					limit = { 
						new_building_content_enabled = no
						prev = { has_planet_flag = build_war_factory }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_war_factory
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}		
				if = {
					limit = { 
						new_building_content_enabled = no
						prev = { has_planet_flag = build_military_academy }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_military_academy
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}					
				if = {
					limit = { 
						prev = { has_planet_flag = build_pop_growth_building }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_clinic
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { 
						NOR = { has_building_construction = yes has_building = yes }
						new_building_content_enabled = yes
					} 
					add_building_construction = building_akx_worm_2
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}							
				#if = { 
				#	limit = { #check other mod triggers } #replicate as needed per mod
				#	API effects
				#	if = {
				#		limit = { OR = { has_building_construction = yes has_building = yes } }
				#		prev.owner = { set_country_flag = cgm_auto_built }
				#		break = yes
				#	}
				#}		
				if = {
					limit = { new_building_content_enabled = no }
					if = { 
						limit = { prev = { is_habitat = no } }
						add_building_construction = building_biolab_1
						add_building_construction = building_physics_lab_1
						add_building_construction = building_engineering_facility_1
						add_building_construction = building_basic_science_lab_1
						else = { add_building_construction = building_hab_laboratory_module }
					}	
					if = {
						limit = { OR = { has_building_construction = yes has_building = yes } }
						prev.owner = { set_country_flag = cgm_auto_built }
						break = yes
					}
					else = {
						if = { 
							limit = { has_resource = { type = society_research amount > 0 } }
							if = { 
								limit = { has_resource = { type = society_research amount = 1 } }
								add_building_construction = building_society_lab_1_1
								else = { 
									if = { 
										limit = { has_resource = { type = society_research amount = 2 } }
										add_building_construction = building_society_lab_1_2
										else = { 
											if = { 
												limit = { has_resource = { type = society_research amount = 3 } }
												add_building_construction = building_society_lab_1_3
												else = { 
													if = { 
														limit = { has_resource = { type = society_research amount = 4 } }
														add_building_construction = building_society_lab_1_4									
														else = { 
															if = { 
																limit = { has_resource = { type = society_research amount = 5 } }
																add_building_construction = building_society_lab_1_5
															}
														}
													}
												}
											}
										}
									}
								}
							}	
							else = { 
								if = { 
									limit = { has_deposit = no }
									add_building_construction = building_sociological_campus_1
								}
							}					
						}
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
					}		
				}
				else = { 
					if = {
						limit = { new_building_content_enabled = no }
						if = { 
							limit = { prev = { is_habitat = no } }
							add_building_construction = building_biolab_1
							add_building_construction = building_physics_lab_1
							add_building_construction = building_engineering_facility_1
							add_building_construction = building_basic_science_lab_1
							else = { add_building_construction = building_hab_laboratory_module }
						}	
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
						else = {
							if = { 
								limit = { has_resource = { type = society_research amount > 0 } }
								if = { 
									limit = { has_resource = { type = society_research amount = 1 } }
									add_building_construction = building_society_lab_1_1
									else = { 
										if = { 
											limit = { has_resource = { type = society_research amount = 2 } }
											add_building_construction = building_society_lab_1_2
											else = { 
												if = { 
													limit = { has_resource = { type = society_research amount = 3 } }
													add_building_construction = building_society_lab_1_3
													else = { 
														if = { 
															limit = { has_resource = { type = society_research amount = 4 } }
															add_building_construction = building_society_lab_1_4									
															else = { 
																if = { 
																	limit = { has_resource = { type = society_research amount = 5 } }
																	add_building_construction = building_society_lab_1_5
																}
															}
														}
													}
												}
											}
										}
									}
								}	
								else = { 
									if = { 
										limit = { has_deposit = no }
										add_building_construction = building_sociological_campus_1
									}
								}					
							}
							if = {
								limit = { OR = { has_building_construction = yes has_building = yes } }
								prev.owner = { set_country_flag = cgm_auto_built }
								break = yes
							}					
						}		
					}
				}	
			}
		}	
	}
}	
add_physics_research_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	if = { 
		limit = { has_any_tile_strategic_resource = yes }
		#API EFFECTS
		break = yes
		else = { 
			if = { 
				limit = { 			
					prev.owner = { NOT = { has_country_flag = physics_research_focus_2 } }				
					OR = { 
						new_building_content_enabled = no
						AND = { 
							new_building_content_enabled = yes
							has_resource = { type = physics_research amount < 2 } #we do not want to build on more than 1 physics_research anything other than tile restricted buildings
						}
					}	
				}
				add_building_construction = building_institute
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_singularity_core
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_akx_worm_3
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				#if = { 
				#	limit = { #check other mod triggers } #replicate as needed per mod
				#	API effects
				#	if = {
				#		limit = { OR = { has_building_construction = yes has_building = yes } }
				#		prev.owner = { set_country_flag = cgm_auto_built }
				#		break = yes
				#	}
				#}		
				if = {
					limit = { new_building_content_enabled = no }
					if = { 
						limit = { prev = { is_habitat = no } }
						add_building_construction = building_physics_lab_1
						add_building_construction = building_biolab_1						
						add_building_construction = building_engineering_facility_1
						add_building_construction = building_basic_science_lab_1
						else = { add_building_construction = building_hab_laboratory_module }
					}	
					if = {
						limit = { OR = { has_building_construction = yes has_building = yes } }
						prev.owner = { set_country_flag = cgm_auto_built }
						break = yes
					}
					else = {
						if = { 
							limit = { has_resource = { type = physics_research amount > 0 } }
							if = { 
								limit = { has_resource = { type = physics_research amount = 1 } }
								add_building_construction = building_physics_lab_1_1
								else = { 
									if = { 
										limit = { has_resource = { type = physics_research amount = 2 } }
										add_building_construction = building_physics_lab_1_2
										else = { 
											if = { 
												limit = { has_resource = { type = physics_research amount = 3 } }
												add_building_construction = building_physics_lab_1_3
												else = { 
													if = { 
														limit = { has_resource = { type = physics_research amount = 4 } }
														add_building_construction = building_physics_lab_1_4									
														else = { 
															if = { 
																limit = { has_resource = { type = physics_research amount = 5 } }
																add_building_construction = building_physics_lab_1_5
															}
														}
													}
												}
											}
										}
									}
								}
							}	
							else = { 
								if = { 
									limit = { has_deposit = no }
									add_building_construction = building_physics_campus_1
								}
							}					
						}
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
					}		
				}
				else = { 
					if = {
						limit = { new_building_content_enabled = no }
						if = { 
							limit = { prev = { is_habitat = no } }
							add_building_construction = building_physics_lab_1
							add_building_construction = building_biolab_1							
							add_building_construction = building_engineering_facility_1
							add_building_construction = building_basic_science_lab_1
							else = { add_building_construction = building_hab_laboratory_module }
						}	
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
						else = {
							if = { 
								limit = { has_resource = { type = physics_research amount > 0 } }
								if = { 
									limit = { has_resource = { type = physics_research amount = 1 } }
									add_building_construction = building_physics_lab_1_1
									else = { 
										if = { 
											limit = { has_resource = { type = physics_research amount = 2 } }
											add_building_construction = building_physics_lab_1_2
											else = { 
												if = { 
													limit = { has_resource = { type = physics_research amount = 3 } }
													add_building_construction = building_physics_lab_1_3
													else = { 
														if = { 
															limit = { has_resource = { type = physics_research amount = 4 } }
															add_building_construction = building_physics_lab_1_4									
															else = { 
																if = { 
																	limit = { has_resource = { type = physics_research amount = 5 } }
																	add_building_construction = building_physics_lab_1_5
																}
															}
														}
													}
												}
											}
										}
									}
								}	
								else = { 
									if = { 
										limit = { has_deposit = no }
										add_building_construction = building_physics_campus_1
									}
								}					
							}
							if = {
								limit = { OR = { has_building_construction = yes has_building = yes } }
								prev.owner = { set_country_flag = cgm_auto_built }
								break = yes
							}					
						}		
					}
				}	
			}
		}	
	}
}	
add_engineering_research_building = {
	log = "trying to build standard on tile [prev.cgm_curTile]"
	if = { 
		limit = { has_any_tile_strategic_resource = yes }
		#API EFFECTS
		break = yes
		else = { 
			if = { 
				limit = { 			
					prev.owner = { NOT = { has_country_flag = engineering_research_focus_2 } }				
					OR = { 
						new_building_content_enabled = no
						AND = { 
							new_building_content_enabled = yes
							has_resource = { type = engineering_research amount < 2 } #we do not want to build on more than 1 engineering_research anything other than tile restricted buildings
						}
					}	
				}
				add_building_construction = building_institute
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_singularity_core
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { NOR = { has_building_construction = yes has_building = yes } } 
					add_building_construction = building_akx_worm_3
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}	
				if = {
					limit = { 
						new_building_content_enabled = no
						prev = { has_planet_flag = build_planetary_shield_generator }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_planetary_shield_generator
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}		
				if = {
					limit = { 
						new_building_content_enabled = no
						prev = { has_planet_flag = build_war_factory }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_war_factory
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}		
				if = {
					limit = { 
						new_building_content_enabled = no
						prev = { has_planet_flag = build_military_academy }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_military_academy
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}						
				if = {
					limit = { 
						prev = { has_planet_flag = build_pop_growth_building }
						NOR = { has_building_construction = yes has_building = yes }
					} 
					add_building_construction = building_spare_parts_depot
					else = { prev.owner = { set_country_flag = cgm_auto_built } break = yes }							
				}					
				#if = { 
				#	limit = { #check other mod triggers } #replicate as needed per mod
				#	API effects
				#	if = {
				#		limit = { OR = { has_building_construction = yes has_building = yes } }
				#		prev.owner = { set_country_flag = cgm_auto_built }
				#		break = yes
				#	}
				#}		
				if = {
					limit = { new_building_content_enabled = no }
					if = { 
						limit = { prev = { is_habitat = no } }
						add_building_construction = building_engineering_facility_1
						add_building_construction = building_physics_lab_1
						add_building_construction = building_biolab_1												
						add_building_construction = building_basic_science_lab_1
						else = { add_building_construction = building_hab_laboratory_module }
					}	
					if = {
						limit = { OR = { has_building_construction = yes has_building = yes } }
						prev.owner = { set_country_flag = cgm_auto_built }
						break = yes
					}
					else = {
						if = { 
							limit = { has_resource = { type = engineering_research amount > 0 } }
							if = { 
								limit = { has_resource = { type = engineering_research amount = 1 } }
								add_building_construction = building_engineering_lab_1_1
								else = { 
									if = { 
										limit = { has_resource = { type = engineering_research amount = 2 } }
										add_building_construction = building_engineering_lab_1_2
										else = { 
											if = { 
												limit = { has_resource = { type = engineering_research amount = 3 } }
												add_building_construction = building_engineering_lab_1_3
												else = { 
													if = { 
														limit = { has_resource = { type = engineering_research amount = 4 } }
														add_building_construction = building_engineering_lab_1_4									
														else = { 
															if = { 
																limit = { has_resource = { type = engineering_research amount = 5 } }
																add_building_construction = building_engineering_lab_1_5
															}
														}
													}
												}
											}
										}
									}
								}
							}	
							else = { 
								if = { 
									limit = { has_deposit = no }
									add_building_construction = building_engineering_campus_1
								}
							}					
						}
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
					}		
				}
				else = { 
					if = {
						limit = { new_building_content_enabled = no }
						if = { 
							limit = { prev = { is_habitat = no } }
							add_building_construction = building_engineering_facility_1
							add_building_construction = building_physics_lab_1
							add_building_construction = building_biolab_1														
							add_building_construction = building_basic_science_lab_1
							else = { add_building_construction = building_hab_laboratory_module }
						}	
						if = {
							limit = { OR = { has_building_construction = yes has_building = yes } }
							prev.owner = { set_country_flag = cgm_auto_built }
							break = yes
						}
						else = {
							if = { 
								limit = { has_resource = { type = engineering_research amount > 0 } }
								if = { 
									limit = { has_resource = { type = engineering_research amount = 1 } }
									add_building_construction = building_engineering_lab_1_1
									else = { 
										if = { 
											limit = { has_resource = { type = engineering_research amount = 2 } }
											add_building_construction = building_engineering_lab_1_2
											else = { 
												if = { 
													limit = { has_resource = { type = engineering_research amount = 3 } }
													add_building_construction = building_engineering_lab_1_3
													else = { 
														if = { 
															limit = { has_resource = { type = engineering_research amount = 4 } }
															add_building_construction = building_engineering_lab_1_4									
															else = { 
																if = { 
																	limit = { has_resource = { type = engineering_research amount = 5 } }
																	add_building_construction = building_engineering_lab_1_5
																}
															}
														}
													}
												}
											}
										}
									}
								}	
								else = { 
									if = { 
										limit = { has_deposit = no }
										add_building_construction = building_engineering_campus_1
									}
								}					
							}
							if = {
								limit = { OR = { has_building_construction = yes has_building = yes } }
								prev.owner = { set_country_flag = cgm_auto_built }
								break = yes
							}					
						}		
					}
				}	
			}
		}	
	}
}	