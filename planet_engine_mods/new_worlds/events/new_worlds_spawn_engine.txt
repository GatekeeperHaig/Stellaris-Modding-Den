###### Written by ExNihil
#
#	This mod uses a configurable spawn engine. If you'd like to integrate a version of this engine please join our discord server The Stellaris Modding Den
#	Server invite: https://discord.gg/ZhvBXhh

namespace = spawn_engine_0

event = {
	#this event triggers on game start and monthly pulse
	id = spawn_engine_0.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	#This event fires only once.
	immediate = {
		set_global_flag = new_worlds_active #this sets a global flag for this mod, to be used by other mods and the engine
		every_planet = {
			if = {
				limit = { is_star = yes }
				if = {
					limit = {
						solar_system = {
							NOT = {
								any_planet = {
									NOT = { is_same_value = this }
									has_planet_flag = system_star_1
								}
							}
						}
					}
					set_planet_flag = system_star_1
					else = {
						if = {
							limit = {
								solar_system = {
									NOT = {
										any_planet = {
											NOT = { is_same_value = this }
											has_planet_flag = system_star_2
										}
									}
								}
							}
							set_planet_flag = system_star_2
							else = {
								if = {
									limit = {
										solar_system = {
											NOT = {
												any_planet = {
													NOT = { is_same_value = this }
													has_planet_flag = system_star_3
												}
											}
										}
									}
									set_planet_flag = system_star_3
								}
							}
						}
					}
				}	
				else = { 			
					if = {
						limit = { is_planet_class = pc_gas_giant has_moon = yes }
						every_moon = { set_planet_flag = gas_giant_moon }
					}
					if = {
						limit = {
							solar_system = {
								starting_system = no
								NOR = {
									has_star_flag = sol_system
									has_star_flag = sol
									has_star_flag = deneb_system
									has_star_flag = custom_system
									has_star_flag = floating_system
									has_star_flag = crystal_system
									has_star_flag = city_system
								}
							}
							is_capital = no
							is_homeworld = no
						}
						# these events occur one after the other.
						planet_event = { id = spawn_engine_0.1 }
						planet_event = { id = spawn_engine_0.2 }
						planet_event = { id = spawn_engine_0.3 days = 1 }
					}
				}	
			}
		}
	}
}

planet_event = {
	id = spawn_engine_0.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { is_vanilla_habitable_planet = yes }
			set_timed_planet_flag = { flag = recheck_deposits days = 60 }
			if = {
				limit = {
					OR = {
						AND = {
							exists = owner
							OR = {
								owner = { is_country_type = primitive }
								any_pop = {
									has_regular_vanilla_habitability_trait = yes
									OR = {
										is_subspecies = yes
										NOT = { species = { is_same_value = owner.species } }
									}
								}
							}
						}
						AND = {
							any_tile = { has_pop = yes }
							any_pop = { is_presapient_pop = yes has_regular_vanilla_habitability_trait = yes }
						}
					}
				}
				every_owned_pop = {
					limit = { has_regular_vanilla_habitability_trait = yes }
					check_habitability_trait_correspondence = yes
				}
			}
			new_worlds_habitable_planets_spawn_table = yes
			new_worlds_adjust_inhabitable_planet_size = yes
			else = { 
				if = {
					limit = { is_colonizable = no }
					new_worlds_uninhabitable_planets_spawn_table = yes
					new_worlds_adjust_uninhabitable_planet_size = yes
					if = {
						limit = {
							OR = { is_planet_class = pc_gas_giant is_planet_class = pc_ice_giant }
							has_moon = yes
							any_moon = { NOT = { has_planet_flag = gas_giant_moon } }
						}
						every_moon = {
							limit = { NOT = { has_planet_flag = gas_giant_moon } }
							set_planet_flag = gas_giant_moon
						}
					}	
				}
			}	
		}	
		if = {
			limit = { 
				OR = { 
					uninhabitable_regular_planet = yes
					habitable_planet = yes
				}	
				has_regular_vanilla_planet_modifier = yes
			}
			remove_regular_planet_modifiers = yes
			while = {
				limit = {
					check_variable = { which = "pm_points" value > 0 }
				}
				planet_modifier_spawn_table = yes
				change_variable = { which = "pm_points" value = -1 }
			}
		}		
	}
}

planet_event = {
	id = spawn_engine_0.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { 
			limit = { 
				OR = { 
					AND = { 
						is_colonizable = no
						is_colony = no
						NOR = { 
							has_strategic_resource = yes
							has_vanilla_orbital_strategic_resource = no
						} 
					}						
					AND = { 
						has_strategic_resource = no
						OR = { 
							is_colonizable = yes
							is_colony = yes
						}	
						OR = { 
							NOT = { exists = owner }
							owner = { is_ai = yes }
						}
					}
				}						
			}
			reroll_deposits = yes	
			else = { 
				if = { 
					limit = { 
						OR = { 
							AND = { 
								is_colonizable = yes
								NOT = { exists = owner }
							}	
							AND = { 
								is_colony = yes owner = { is_ai = no }
							}	
						}	
					}
					every_tile = {
						limit = { has_regular_vanilla_deposit = yes	has_building = no }
						clear_deposits = yes
						new_worlds_planetary_resource_spawn_table = yes
					}
				}	
			}	
		}	
		if = {
			limit = { any_tile = { has_blocker = yes has_regular_vanilla_blocker = yes } }
			every_tile = {
				limit = { has_blocker = yes has_regular_vanilla_blocker = yes }
				remove_blocker = yes
				new_worlds_tile_blocker_spawn_table = yes
			}	
			else = { 
				if = { 
					limit = { NOT = { any_tile = { has_blocker = yes } } }
					random_tile = { 
						limit = { has_building = no has_pop = no }
						new_worlds_tile_blocker_spawn_table = yes
					}	
				}				
				if = { 
					limit = { NOT = { any_tile = { has_blocker = yes has_regular_vanilla_blocker = yes } } }
					while = {
						limit = {
							OR = {
								AND = {
									planet_size > 19
									count_tile = {
										limit = { has_blocker = yes }
										count < 6
									}
								}
								AND = {
									planet_size > 15
									planet_size < 19
									count_tile = {
										limit = { has_blocker = yes }
										count < 5
									}
								}
								AND = {
									planet_size > 10
									planet_size < 16
									count_tile = {
										limit = { has_blocker = yes }
										count < 4
									}
								}
								AND = {
									planet_size < 11
									count_tile = {
										limit = { has_blocker = yes }
										count < 3
									}
								}
							}
						}
						random_tile = {
							limit = { has_blocker = no }
							new_worlds_tile_blocker_spawn_table = yes
						}
					}						
				}
			}	
		}				
		if = {
			limit = {
				OR = {
					AND = {
						exists = owner
						OR = {
							owner = { is_country_type = primitive }
							any_pop = {
								has_regular_vanilla_habitability_trait = yes
								OR = {
									is_subspecies = yes
									NOT = { species = { is_same_value = owner.species } }
								}
							}
						}
					}
					AND = {
						any_tile = { has_pop = yes }
						any_pop = { is_presapient_pop = yes has_regular_vanilla_habitability_trait = yes }
					}
				}
			}			
			change_habitability_trait_correspondence = yes
			every_owned_pop = { new_worlds_species_change_table = yes }
		}		
	}
}

planet_event = {
	id = spawn_engine_0.3
	hide_window = yes	
	
	trigger = {
		has_planet_flag = recheck_deposits
		is_colonizable = yes
		OR = { 
			is_colony = no
			owner = { is_ai = yes }
		}	
		OR = {
			NOT = { any_tile = { has_blocker = yes } }
			AND = {
				planet_size > 19
				count_tile = {
					limit = { has_blocker = yes }
					count < 6
				}
			}
			AND = {
				planet_size > 15
				planet_size < 19
				count_tile = {
					limit = { has_blocker = yes }
					count < 5
				}
			}
			AND = {
				planet_size > 10
				planet_size < 16
				count_tile = {
					limit = { has_blocker = yes }
					count < 4
				}
			}
			AND = {
				planet_size < 11
				count_tile = {
					limit = { has_blocker = yes }
					count < 3
				}
			}
		}
	}
	immediate = {
		if = { 
			limit = { NOT = { any_tile = { has_blocker = yes } } }
			random_tile = { 
				limit = { has_building = no has_pop = no }
				new_worlds_tile_blocker_spawn_table = yes
			}	
		}			
		while = {
			limit = {
				OR = {
					AND = {
						planet_size > 19
						count_tile = {
							limit = { has_blocker = yes }
							count < 6
						}
					}
					AND = {
						planet_size > 15
						planet_size < 19
						count_tile = {
							limit = { has_blocker = yes }
							count < 5
						}
					}
					AND = {
						planet_size > 10
						planet_size < 16
						count_tile = {
							limit = { has_blocker = yes }
							count < 4
						}
					}
					AND = {
						planet_size < 11
						count_tile = {
							limit = { has_blocker = yes }
							count < 3
						}
					}
				}
			}
			random_tile = {
				limit = { has_blocker = no }
				new_worlds_tile_blocker_spawn_table = yes
			}
		}
	}
}
