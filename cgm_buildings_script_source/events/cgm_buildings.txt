namespace = cgm_buildings

event = { #this event fires on game start and on a yearly pulse. 
	id = cgm_buildings.1
	hide_window = yes
	is_triggered_only = yes
		
	immediate = {
		every_planet = {
			limit = { 
				NOT = { has_planet_flag = deposits_converted }
				OR = {
					is_colonizable = yes
					is_colony = yes
					any_tile = { 
						has_deposit = yes 
						has_special_resource_deposit = no
					}										
				}	
			}
			set_variable = { which = energy_tile_resource value = 0 }	
			set_variable = { which = minerals_tile_resource value = 0 }
			set_variable = { which = food_tile_resource value = 0 }
			set_variable = { which = unity_tile_resource value = 0 }
			set_variable = { which = society_research_tile_resource value = 0 }
			set_variable = { which = physics_research_tile_resource value = 0 }
			set_variable = { which = engineering_research_tile_resource value = 0 }
			every_tile = {
				limit = { 
					has_deposit = yes 
					has_special_resource_deposit = no
				}
				convert_deposits = yes					
			}	
			set_planet_flag = deposits_converted
		}
	}
}	

event = { #this event is fires on game start and on a monthly pulse. 
	id = cgm_buildings.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {				
		every_country = { ### switch to country scope
			limit = {
				OR = {
					is_country_type = default
					is_country_type = awakened_fallen_empire
				}				
			}
			if = { #see the scripted effects file cgm_country_scope_effects.txt
				limit = { NOT = { has_country_flag = country_check_delay } }				
				set_variable = { which = energy_weight value = 0 }
				set_variable = { which = minerals_weight value = 0 }
				set_variable = { which = food_weight value = 0 }	
				check_income = yes 
				set_timed_country_flag = { flag = country_check_delay days = 90 }
			}	
			every_owned_planet = { ### switch to planet scope
				limit = { 
					OR = {
						prev = { is_ai = yes }
						sector_controlled = yes
					}	
				}
				if = { #see the scripted effects file cgm_planet_scope_effects.txt
					limit = { NOT = { has_planet_flag = planet_check_delay } }				
					if = { 
						limit = { NOT = { has_planet_flag = cgm_ai_planet_variables_added } } 
						set_variable = { which = energy_mult value = 1 }
						set_variable = { which = minerals_mult value = 1 }
						set_variable = { which = food_mult value = 1 }
						set_variable = { which = unity_mult value = 1 }
						set_variable = { which = society_research_mult value = 1 }
						set_variable = { which = physics_research_mult value = 1 }
						set_variable = { which = engineering_research_mult value = 1 }		
						set_planet_flag = cgm_ai_planet_variables_added
					}	
					if = { 
						limit = { NOT = { has_planet_flag = cgm_ai_first_time_planet_check_performed }}
						check_planet_bonus_buildings = yes				
						if = {
							limit = { planets_enhanced_enabled = yes }	
							check_planet_bonus_buildings_pe = yes
						}	
						if = {
							limit = { alphamod_enabled = yes }	
							check_planet_bonus_buildings_am = yes
						}	
						set_planet_flag = cgm_ai_planet_check_performed ###remember to update this through other on actions!						
					}	
					if = { 
						limit = { 
							num_modifiers > 0
							NOR = {
								AND = {
									num_modifiers = 1
									check_variable = { which = pm_num value = 1 }
								}
								AND = {
									num_modifiers = 2
									check_variable = { which = pm_num value = 2 }
								}						
								AND = {
									num_modifiers = 3
									check_variable = { which = pm_num value = 3 }
								}						
								AND = {
									num_modifiers = 4
									check_variable = { which = pm_num value = 4 }
								}						
								AND = {
									num_modifiers = 5
									check_variable = { which = pm_num value = 5 }
								}						
								AND = {
									num_modifiers = 6
									check_variable = { which = pm_num value = 6 }
								}						
								AND = {
									num_modifiers = 7
									check_variable = { which = pm_num value = 7 }
								}						
								AND = {
									num_modifiers = 8
									check_variable = { which = pm_num value = 8 }
								}						
								AND = {
									num_modifiers = 9
									check_variable = { which = pm_num value = 9 }
								}						
								AND = {
									num_modifiers = 10
									check_variable = { which = pm_num value = 10 }
								}						
							}
						}
						switch = {
							trigger = num_modifiers
							1 = { set_variable = { which = pm_num value = 1 } }
							2 = { set_variable = { which = pm_num value = 2 } }
							3 = { set_variable = { which = pm_num value = 3 } }
							4 = { set_variable = { which = pm_num value = 4 } }
							5 = { set_variable = { which = pm_num value = 5 } }
							6 = { set_variable = { which = pm_num value = 6 } }
							7 = { set_variable = { which = pm_num value = 7 } }
							8 = { set_variable = { which = pm_num value = 8 } }
							9 = { set_variable = { which = pm_num value = 9 } }
							10 = { set_variable = { which = pm_num value = 10 } }
						}
						check_planet_modifiers = yes	
						if = {
							limit = { planets_enhanced_enabled = yes }
							check_planet_modifiers_pe = yes
						}	
						if = {
							limit = { guillis_planet_modifiers_enabled = yes }		
							check_planet_modifiers_gpm = yes
						}
						if = {
							limit = { planetary_diversity_enabled = yes }
							check_planet_modifiers_pd = yes
						}		
						if = {
							limit = { alphamod_enabled = yes }
							check_planet_modifiers_am = yes		
						}	
					}	
					set_timed_planet_flag = { flag = planet_check_delay days = 360 }	
				}
				planet_event = { id = cgm_buildings.2 days = 15 random = 10 } # random used here to spread the load more evenly.
			}
		}
	}
}	

planet_event = { #this event is fired using the previous event on a monthly scope. 
	id = cgm_buildings.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { 
			limit = {
				owner = {
					check_variable = { which = energy_weight value < 1 }
					check_variable = { which = minerals_weight value < 1 }
					check_variable = { which = food_weight value < 1 }												
				}
			}
			while = { #see the scripted effects file cgm_tile_scope_effects.txt
				limit = { 
					any_tile = { 
						has_blocker = no
						has_ai_null_deposit = no 
						has_special_resource_deposit = no							
					}
				}
				set_variable = { which = energy_weight value = 0 }
				set_variable = { which = minerals_weight value = 0 }
				set_variable = { which = food_weight value = 0 }
				set_variable = { which = unity_weight value = 0 }
				set_variable = { which = society_research_weight value = 0 }
				set_variable = { which = physics_research_weight value = 0 }
				set_variable = { which = engineering_research_weight value = 0 }
				random_tile = {
					limit = { 
						has_blocker = no
						has_ai_null_deposit = no
						has_special_resource_deposit = no							
					}
					set_tile_building_weight = yes
				}
			}
			else = {
				every_tile = {
					limit = { has_deposit = yes has_special_resource_deposit = no }
					convert_deposits = yes
				}					
				while = {
					limit = { 
						any_tile = { 
							has_blocker = no
							has_ai_null_deposit = no 
							has_special_resource_deposit = no
						}
					}
					set_variable = { which = energy_weight value = owner }
					set_variable = { which = minerals_weight value = owner }
					set_variable = { which = food_weight value = owner }
					set_variable = { which = unity_weight value = 0 }
					set_variable = { which = society_research_weight value = 0 }
					set_variable = { which = physics_research_weight value = 0 }
					set_variable = { which = engineering_research_weight value = 0 }
					random_tile = {
						limit = { 
							has_blocker = no
							has_ai_null_deposit = no
							has_special_resource_deposit = no
						}
						set_tile_building_weight = yes
					}
				}	
			}	
		}
		if = {
			limit = { 
				owner = { 
					minerals > 1000
					income > 50
				}
			}	
			planet_event = { id = cgm_buildings.3 days = 1 random = 3 }
		}		
	}
}
				
#this event fires from the previous event
#it places planet flags that are used by specific planet unique buildings

planet_event = {  
	id = cgm_buildings.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { #stronghold/fortress
			limit = { 
				years_passed > 25				
				NOR = { 
					has_planet_flag = fortify_planet
					AND = {
						owner = { is_at_war = no }
						OR = {
							AND = {
								is_capital = no
								count_tile = {
									limit = {
										OR = {
											has_building = building_stronghold
											has_building = building_fortress
											has_building = building_planetary_shield_generator
										}
									}
									count > 2
								}	
							}	
							AND = {
								is_capital = no
								count_tile = {
									limit = {
										OR = {
											has_building = building_stronghold
											has_building = building_fortress						
											has_building = building_planetary_shield_generator
										}
									}
									count > 3
								}	
							}							
						}		
					}	
				}
				OR = {
					AND = {
						unrest > 40
						OR = {
							NOT = { any_owned_pop = { is_enslaved = yes } }
							has_building = building_slave_processing
						}
					}	
					AND = {
						owner = { is_at_war = yes }
						OR = {
							AND = {
								any_country = {
									is_at_war_with = root.owner
									any_owned_planet = {
										is_colony = yes
										distance = { source = root min_distance = 70 max_distance = 100 }
									}
								}	
								NOT = {
									count_tile = {
										limit = {
											OR = {
												has_building = building_stronghold
												has_building = building_fortress
											}
										}
										count > 4
									}	
								}	
							}								
							AND = {							
								sector_controlled = yes
								OR = {
									has_capital_1 = yes
									has_capital_2 = yes
								}	
								count_tile = {
									limit = {
										OR = {
											has_building = building_stronghold
											has_building = building_fortress
										}
									}
									count < 1								
								}	
							}	
							AND = {							
								sector_controlled = no
								has_capital_1 = yes
								count_tile = {
									limit = {
										OR = {
											has_building = building_stronghold
											has_building = building_fortress
										}
									}
									count < 1								
								}	
							}	
							AND = {							
								sector_controlled = no
								has_capital_2 = yes
								count_tile = {
									limit = {
										OR = {
											has_building = building_stronghold
											has_building = building_fortress
										}
									}
									count < 2								
								}	
							}																	
							AND = {
								is_capital = yes
								count_tile = {
									limit = {
										OR = {
											has_building = building_stronghold
											has_building = building_fortress
										}
									}
									count < 3
								}	
							}								
						}
					}	
				}	
			}
			set_timed_planet_flag = { flag = fortify_planet days = 180 }
		}			
		if = { #planetary shield generator
			limit = {
				NOR = { 
					has_planet_flag = build_planetary_shield_generator
					has_building = building_planetary_shield_generator					
				}
				owner = { 
					has_technology = "tech_planetary_shield_generator"
					is_subject = no
				}			
				any_country = { 
					OR = {
						is_hostile_to = owner
						is_angry_to = owner
						is_domineering_to = owner
						is_rival = owner
						is_at_war_with = owner
					} 
				}											
				OR = {
					AND = {
						is_capital = yes
						count_tile = {
							limit = {
								OR = {
									has_building = building_stronghold
									has_building = building_fortress
								}
							}
							count > 2
						}
					}	
					AND = {
						is_capital = no
						sector_controlled = no
						count_tile = {
							limit = {
								OR = {
									has_building = building_stronghold
									has_building = building_fortress
								}
							}
							count > 1
						}						
					}	
				}
			}
			if = {
				limit = { has_planet_flag = fortify_planet }
				remove_planet_flag = fortify_planet
			}
			set_timed_planet_flag = { flag = build_planetary_shield_generator days = 180 }	
		}				
		if = { #military academy
			limit = {			
				owner = {
					has_technology = "tech_centralized_command"
					if = {
						limit = { overhauled_building_stats_enabled = no }
						is_machine_empire = no
					}	
					if = {
						limit = { overhauled_building_stats_enabled = yes }
						is_gestalt_consciousness = no
					}	
					NOT = {
						any_owned_planet = {
							NOT = { is_same_value = from }
							has_building = building_military_academy			
						}	
					}
				}	
				sector_controlled = no
				NOR = {
					has_planet_flag = fortify_planet
					has_planet_flag = build_planetary_shield_generator
					has_planet_flag = build_military_academy
					has_building = building_military_academy
				}	
				any_owned_pop = { 
					is_warrior_pop = yes
					OR = {
						has_military_service_type = { type = military_service_full country = owner }
						has_military_service_type = { type = military_service_limited country = owner }
					}				
					OR = { 
						is_enslaved = no
						AND = {
							is_enslaved = yes
							prev = { has_building = building_slave_processing }
						}
					}	
				}
			}
			set_timed_planet_flag = { flag = build_military_academy days = 180 }	
		}		
		if = { #cloning vats
			limit = {			
				sector_controlled = no
				NOR = {
					has_planet_flag = fortify_planet
					has_planet_flag = build_planetary_shield_generator
					has_planet_flag = build_military_academy
					has_planet_flag = build_clone_vats
					has_building = building_clone_vats
				}				
				owner = {
					is_machine_empire = no
					is_synth_empire = no
					has_technology = "tech_gene_banks"
					OR = {
						NOT = { any_owned_planet = { has_building = building_military_academy }	}
						prev = { has_building = building_military_academy }
					}	
				}	
				any_owned_pop = { 
					is_robot_pop = no
					is_warrior_pop = yes
					OR = {
						has_military_service_type = { type = military_service_full country = owner }
						has_military_service_type = { type = military_service_limited country = owner }
					}				
				}
			}
			set_timed_planet_flag = { flag = build_clone_vats days = 180 }	
		}			
		if = { #war factory
			limit = { 
				overhauled_building_stats_enabled = yes
				owner_is_machine_empire = yes
				sector_controlled = no
				NOR = {
					has_planet_flag = fortify_planet
					has_planet_flag = build_planetary_shield_generator
					has_planet_flag = build_war_factory					
					has_building = building_war_factory
				}						
				count_pops = {
					limit = { 
						is_colony_pop = yes
						OR = {
							is_robot_pop = yes
							AND = { 
								owner = { is_assimilator = yes }
								has_trait = trait_cybernetic
							}
						}
					}
					count > 9
				}
			}	
			set_timed_planet_flag = { flag = build_war_factory days = 180 }
		}				
		if = { #pop growth buildings
			limit = { 
				NOR = { 
					has_planet_flag = fortify_planet
					has_planet_flag = build_planetary_shield_generator
					has_planet_flag = build_pop_growth_building
					has_building = building_clinic
					has_building = building_hospital							
					has_building = building_spare_parts_depot
					has_building = building_unit_assembly_plant						
				}
				owner = {
					OR = { 
						has_technology = "tech_frontier_health"
						has_technology = "tech_frontier_hospital"
					}
				}
				free_pop_tiles > 2
				OR = {
					any_owned_pop = {
						is_robot_pop = no								
						has_population_control = no
					}								
					AND = {
						owner = { 
							OR = {
								has_authority = auth_machine_intelligence
								has_country_flag = synthethic_age
							}
							balance > 250
						}	
						any_owned_pop = { is_robot_pop = yes }
					}
				}
			}
			set_timed_planet_flag = { flag = build_pop_growth_building days = 180 }
		}
		if = {
			limit = {
				NOR = { 
					has_planet_flag = build_slave_processing
					has_building = building_slave_processing
				}
				owner = { 
					has_technology = "tech_neural_implants"
					OR = {
						AND = {
							overhauled_building_stats_enabled = no
							is_machine_empire = no
						}	
						AND = {
							overhauled_building_stats_enabled = yes
							is_gestalt_consciousness = no
						}	
					}
					has_policy_flag = slavery_allowed
				}
				any_owned_pop = { is_enslaved = yes }
				OR = {
					count_pops = {
						limit = { 
							OR = {
								has_slavery_type = { country = owner type = slavery_military }
								has_slavery_type = { country = owner type = slavery_normal }
							}	
						}
						count > 3
					}	
					unrest > 30
				}	
			}	
			set_timed_planet_flag = { flag = build_slave_processing days = 180 }
		}			
		if = {
			limit = {
				NOR = { 
					has_planet_flag = build_neuro_electric_amplifier
					has_building = building_neuro_electric_amplifier
				}
				owner = {
					has_authority = auth_machine_intelligence
					has_government = gov_machine_assimilator
					has_swapped_tradition = tr_synchronicity_cyber_comms
				}
				count_pops = {
					limit = { has_trait = trait_cybernetic }
					count > 3
				}			
			}	
			set_planet_flag = build_neuro_electric_amplifier
		}			
	}					
}