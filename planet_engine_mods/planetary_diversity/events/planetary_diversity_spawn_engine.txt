###### Written by ExNihil
#
#	This mod uses a configurable spawn engine. If you'd like to integrate a version of this engine please join our discord server The Stellaris Modding Den
#	Server invite: https://discord.gg/ZhvBXhh

namespace = spawn_engine_1

event = {
	#this event triggers on game start and monthly pulse
	id = spawn_engine_1.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	#This event fires only once.
	
	trigger = { 
		NOT = { has_global_flag = planetary_diversity_active } #this ensures the global flag will be set up correctly on mod loadup - if load into savegame is enabled. 		
	} 
	
	immediate = {
		set_global_flag = planetary_diversity_active #this sets a global flag for this mod, to be used by other mods and the engine		
		while = { 
			limit = { any_planet = { planetary_diversity_special_planet = yes NOT = { has_planet_flag = processed_pd_special_planet } } }
			random_planet = { 
				limit = { planetary_diversity_special_planet = yes NOT = { has_planet_flag = processed_pd_special_planet } }
				planetary_diversity_unique_planet_init = yes
			}
		}	
		if = { 
			limit = { NOT = { has_global_flag = planets_enhanced_game_start_flag } }			
			every_planet = {
				limit = { 
					planetary_diversity_special_planet = no #we gate the special planets we don't want touched here. 
					cgm_planet_engine_gate_conditions = yes #this is a scripted trigger that you can change - it will overwrite the trigger in CGM: Planets Enhanced, so you can always add you systems there. Also add other mod star flags there to create compatibility with prescripted system mods. The trigger can include plants from other mods
				} 
				if = {
					limit = { is_star = yes }
					#this effect block identifies star order in systems				
					if = {
						limit = {
							solar_system = {
								NOT = {
									any_planet = {
										NOT = { is_same_value = prevprev }
										has_planet_flag = system_star_1
									}
								}
							}
						}
						set_planet_flag = system_star_1
					}	
					else_if = {
						limit = {
							solar_system = {
								NOT = {
									any_planet = {
										NOT = { is_same_value = prevprev }
										has_planet_flag = system_star_2
									}
								}
							}
						}
						set_planet_flag = system_star_2
					}	
					else = {					
						set_planet_flag = system_star_3
					}
				}	
				else_if = { #this effect checks for gas giants and adds the gas giant moon flag to their moons			
					limit = { is_planet_class = pc_gas_giant has_moon = yes }
					every_moon = { set_planet_flag = gas_giant_moon }
				}
				# these events occur one after the other.
				planet_event = { id = spawn_engine_1.1 }
			}	
			every_playable_country = { country_event = { id = spawn_engine_1.3 } } #this is a fix for the prescripted ideal planets		
		}	
	}
}	
planet_event = {
	id = spawn_engine_1.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_vanilla_habitable_planet = yes }			
			planetary_diversity_habitable_planets_spawn_table = yes
			if = {
				limit = { 
					exists = owner
					owner = { is_country_type = primitive } 
					is_ideal_planet_class = { who = owner status = no }
				}			
				change_owner_species_to_this_planet_preference = yes							
			}
		}	
		else_if = {
			limit = { is_vanilla_uninhabitable_planet = yes }
			planetary_diversity_uninhabitable_planets_spawn_table = yes
		}
		if = {
			limit = { 
				OR = { 
					is_vanilla_habitable_planet = yes
					planetary_diversity_regular_habitable_planet = yes #this trigger does no include the planetary_diversity_special_planet trigger and its planets.
				}	
				has_regular_vanilla_planet_modifier = yes
			}
			remove_and_count_vanilla_regular_planet_modifiers = yes
			while = {
				limit = {
					check_variable = { which = "pm_points" value > 0 }
				}
				planet_modifier_spawn_table = yes
				change_variable = { which = "pm_points" value = -1 }
			}
			if = { 
				limit = {
					OR = { 
						NOT = { any_tile = { has_deposit = yes } }	
						NOT = { any_tile = { has_blocker = yes } }
						deposit_and_blocker_threshold_limit = yes
					}
				}	
				set_timed_planet_flag = { flag = pd_deposit_recheck days = 11 }
				planet_event = { id = spawn_engine_1.2 }				
			}	
		}			
	}
}
planet_event = {
	id = spawn_engine_1.2
	hide_window = yes
	is_triggered_only = yes
	trigger = { 
		has_planet_flag = pd_deposit_recheck
		deposit_and_blocker_threshold_limit = yes		
	}
	immediate = {
		while = {
			limit = {
				OR = {
					NOT = { any_tile = { has_deposit = yes } }	
					AND = {
						planet_size > 19
						count_tile = {
							limit = { has_deposit = yes }
							count < 6
						}
					}
					AND = {
						planet_size > 15
						planet_size < 19
						count_tile = {
							limit = { has_deposit = yes }
							count < 5
						}
					}
					AND = {
						planet_size > 10
						planet_size < 16
						count_tile = {
							limit = { has_deposit = yes }
							count < 4
						}
					}
					AND = {
						planet_size < 11
						count_tile = {
							limit = { has_deposit = yes }
							count < 3
						}
					}					
				}
			}
			every_tile = { 
				limit = { has_deposit = no }
				random_list = {
					40 = { planetary_diversity_planetary_resource_spawn_table = yes }
					60 = { }
				}	
			}	
		}		
		while = {
			limit = {
				OR = {
					NOT = { any_tile = { has_blocker = yes } }
					AND = {
						planet_size > 19
						NOT = { 
							num_pops > 12
						}	
						count_tile = {
							limit = { has_blocker = yes }
							count < 6
						}
					}
					AND = {
						planet_size > 15
						planet_size < 19
						NOT = { 
							num_pops > 10
						}						
						count_tile = {
							limit = { has_blocker = yes }
							count < 5
						}
					}
					AND = {
						planet_size > 10
						planet_size < 16
						NOT = { 
							num_pops > 8
						}										
						count_tile = {
							limit = { has_blocker = yes }
							count < 4
						}
					}
					AND = {
						planet_size < 11
						NOT = { 
							num_pops > 5
						}										
						count_tile = {
							limit = { has_blocker = yes }
							count < 3
						}
					}
				}
			}			
			random_tile = {
				limit = { has_blocker = no has_building = no has_pop = no }
				planetary_diversity_tile_blocker_spawn_table = yes
			}									
		}
		if = { 
			limit = { 
				deposit_and_blocker_threshold_limit = no			
			}
			remove_planet_flag = pd_deposit_recheck
		}
		else = { planet_event = { id = spawn_engine_1.2 days = 1 } }
	}	
}	

country_event = {
	#this event is triggered by the first event
	id = spawn_engine_1.3
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		capital_scope = { 
			save_event_target_as = capital_target
			solar_system = { save_event_target_as = capital_system_target } 
		}
		every_planet = { 		
			limit = { 							
				solar_system = { 
					NOT = { has_star_flag = empire_home_system }					
					distance = { 
						source = event_target:capital_system_target
						type = hyperlane
						min_jumps = 1
						max_jumps = 3
					}				
				}
				has_planet_flag = prescripted_ideal	
			}
			if = { 
				limit = { is_ideal_planet_class = { who = root status = no } }
				if = { limit = { event_target:capital_target = { is_planet_class = pc_tropical } } change_pc = pc_tropical }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_arid } } change_pc = pc_arid }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_continental } } change_pc = pc_continental }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_ocean } } change_pc = pc_ocean }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_tundra } } change_pc = pc_tundra }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_arctic } } change_pc = pc_arctic }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_alpine } } change_pc = pc_alpine }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_savannah } } change_pc = pc_savannah }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_tidallylocked } } change_pc = pc_tidallylocked }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_mangrove } } change_pc = pc_mangrove }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_desertislands } } change_pc = pc_desertislands }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_hajungle } } change_pc = pc_hajungle }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_cascadian } } change_pc = pc_cascadian }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_swamp } } change_pc = pc_swamp }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_subarctic } } change_pc = pc_subarctic }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_glacial } } change_pc = pc_glacial }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_geothermal } } change_pc = pc_geothermal }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_sandsea } } change_pc = pc_sandsea }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_mesa } } change_pc = pc_mesa }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_oasis } } change_pc = pc_oasis }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_hadesert } } change_pc = pc_hadesert }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_steppe } } change_pc = pc_steppe }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_frozen_desert } } change_pc = pc_frozen_desert }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_antarctic } } change_pc = pc_antarctic }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_ammonia } } change_pc = pc_ammonia }
				else_if = { limit = { event_target:capital_target = { is_planet_class = pc_methane } } change_pc = pc_methane }				
			}
		}
	}
}