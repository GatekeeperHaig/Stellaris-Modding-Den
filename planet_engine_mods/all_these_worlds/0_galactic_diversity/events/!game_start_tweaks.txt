namespace = game_start

### Hidden Game Start Event


### Country-scope start event for advanced empires
country_event = {
	id = game_start.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		give_technology = { tech = "tech_society_1" message = no }
		give_technology = { tech = "tech_engineering_1" message = no }
		give_technology = { tech = "tech_physics_1" message = no }
		give_technology = { tech = "tech_planetary_unification" message = no }
		
		add_resource = { energy = 1000	}
		add_resource = { minerals = 1000 }
		add_resource = { alloys = 500	}
		add_resource = { influence = 200 }		
		if = {
			limit = { is_machine_empire = no }
			add_resource = { food = 1000 }		
		}
		else = {
			add_resource = { energy = 1000 }
		}
		if = {
			limit = { is_gestalt = no }
			add_resource = { consumer_goods = 500 }		
		}
		else = {
			add_resource = { minerals = 500 }
		}
		
		every_planet_within_border = {
			limit = { 
				has_deposit_for = shipclass_mining_station
				has_mining_station = no
			}
			create_mining_station = {
				owner = ROOT
			}
		}
		every_planet_within_border = {
			limit = { 
				has_deposit_for = shipclass_research_station 
				has_research_station = no
			}
			create_research_station = {
				owner = ROOT
			}
		}		
		every_system_within_border = {
			set_star_flag = advanced_empire_space
		}
	}
}

### Create wormhole pairs
event = {
	id = game_start.31
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		get_galaxy_setup_value = { 
			setting = num_wormhole_pairs
			which = local_wormholes_num
			scale_by = 10 # Was 5 in vanilla, but want more wormholes with shorter distances
		}
		while = {
			count = local_wormholes_num
			random_system = {
				limit = {
					NOR = {
						has_natural_wormhole = yes
						starting_system = yes
						has_star_flag = sirius
						has_star_flag = aldebaran_system
						has_star_flag = abandoned_gateway
					}
					OR = {
						solar_system = { any_system_planet = { is_planet_class_pc_d_star = yes } } # System has a White Dwarf
						solar_system = { any_system_planet = { is_planet_class_pc_m_giant_star = yes } } # System has a Red Giant
						solar_system = { any_system_planet = { is_planet_class_pc_k_star = yes } } # System has a Red Supergiant
						solar_system = { any_system_planet = { is_planet_class_pc_black_hole = yes } } # System has a Black Hole
						solar_system = { any_system_planet = { is_planet_class_pc_neutron_star = yes } } # System has a Neutron Star
						solar_system = { any_system_planet = { is_planet_class_pc_pulsar = yes } } # System has a Pulsar
						solar_system = { any_system_planet = { is_planet_class_pc_b_star = yes } } # System has a Blue Giant
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_natural_wormhole = yes
							starting_system = yes
							has_star_flag = empire_cluster
							has_star_flag = sirius
							has_star_flag = aldebaran_system
							has_star_flag = abandoned_gateway
						}
						OR = {
							solar_system = { any_system_planet = { is_planet_class_pc_black_hole = yes } } # Target has a Black Hole
							solar_system = { any_system_planet = { is_planet_class_pc_neutron_star = yes } } # Target has a Neutron Star
							solar_system = { any_system_planet = { is_planet_class_pc_pulsar = yes } } # Target has a Pulsar
							solar_system = { any_system_planet = { is_planet_class_pc_d_star = yes } } # Target has a White Dwarf
							solar_system = { any_system_planet = { is_planet_class_pc_m_giant_star = yes } } # Target has a Red Giant
							solar_system = { any_system_planet = { is_planet_class_pc_k_star = yes } } # Target has a Red Supergiant
							solar_system = { any_system_planet = { is_planet_class_pc_b_star = yes } } # System has a Blue Giant
						}
						distance = {
							source = prev
							min_distance >= 150 # Was 500 in vanilla, but want more wormholes with shorter distances
							max_distance <= 300
						}
					}
					prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
							spawn_natural_wormhole = {
							bypass_type = wormhole
							random_pos = yes
							orbit_angle = 360
						}
					}
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = yes
						orbit_angle = 360
					}
					link_wormholes = prev
				}
			}
		}
	}
}