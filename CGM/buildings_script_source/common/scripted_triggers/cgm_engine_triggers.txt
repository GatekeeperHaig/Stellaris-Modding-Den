 ### Flag Triggers
 #CGM buildings internal flags
overhauled_building_stats_enabled = { has_global_flag = overhauled_building_stats_active }
vanilla_building_content_enabled = { has_global_flag = vanilla_building_content_active }
new_building_content_enabled = { has_global_flag = new_building_content_active }
direct_build_enabled = { has_global_flag = direct_build_enabled }
 #Other mods' global flags
additional_traits_enabled = { has_global_flag = additrait_active }
gse_enabled = { has_global_flag = gigastructures_enabled }
planets_enhanced_enabled = { has_global_flag = planets_enhanced_active }
gpm_enabled = { has_global_flag = guillis_planet_modifiers_active }
kugelring_enabled = { has_global_flag = kugelring_active }
 ### Building Allow Triggers
requires_any_empire_capital = {
	custom_tooltip = {
		text = "requires_any_empire_capital"
		planet = { has_capital_3 = yes }
	}
}
requires_non_machine_empire_capital = {
	custom_tooltip = {
		text = "requires_non_machine_empire_capital"
		planet = { has_building = "building_capital_3" }
	}
}
requires_capital_0 = {
	custom_tooltip = {
		fail_text = "requires_building_capital_0"
		planet = {
			OR = {
				has_capital_0 = yes
				has_capital_1 = yes
				has_capital_2 = yes
				has_capital_3 = yes
			}
		}
	}
}
requires_capital_0_or_hab = {
	custom_tooltip = {
		fail_text = "requires_building_capital_0_or_hab"
		planet = {
			OR = {
				has_building = building_hab_capital
				has_capital_0 = yes
				has_capital_1 = yes
				has_capital_2 = yes
				has_capital_3 = yes
			}
		}
	}
}
requires_hab_capital = {
	custom_tooltip = {
		fail_text = "requires_building_hab_capital"
		planet = {
			OR = { has_hab_capital = yes has_capital_3 = yes }
		}
	}
}
requires_capital_1 = {
	custom_tooltip = {
		fail_text = "requires_building_capital_1"
		planet = {
			OR = {
				has_capital_1 = yes
				has_capital_2 = yes
				has_capital_3 = yes
			}
		}
	}
}
requires_capital_1_or_hab = {
	custom_tooltip = {
		fail_text = "requires_building_capital_1_or_hab"
		planet = {
			OR = {
				has_building = building_hab_capital
				has_capital_1 = yes
				has_capital_2 = yes
				has_capital_3 = yes
			}
		}
	}
}
requires_capital_2 = {
	custom_tooltip = {
		fail_text = "requires_building_capital_2"
		planet = {
			OR = { has_capital_2 = yes has_capital_3 = yes }
		}
	}
}
requires_capital_2_or_hab = {
	custom_tooltip = {
		fail_text = "requires_building_capital_2_or_hab"
		planet = {
			OR = {
				has_building = building_hab_capital
				has_capital_2 = yes
				has_capital_3 = yes
			}
		}
	}
}
requires_capital_3 = {
	custom_tooltip = {
		fail_text = "requires_any_empire_capital"
		planet = { has_capital_3 = yes }
	}
}
requires_no_worm_power_hub = {
	custom_tooltip = {
		fail_text = "requires_power_hub_absence"
		planet = { NOT = { has_building = "building_akx_worm_1" } }
	}
}
requires_5_pops = {
	custom_tooltip = {
		text = "requires_pops_5"
		planet = {
			count_pops = {
				count > 4
				limit = { is_colony_pop = yes }
			}
		}
	}
}
requires_10_pops = {
	custom_tooltip = {
		text = "requires_pops_10"
		planet = {
			count_pops = {
				count > 9
				limit = { is_colony_pop = yes }
			}
		}
	}
}
requires_15_pops = {
	custom_tooltip = {
		text = "requires_pops_15"
		planet = {
			count_pops = {
				count > 14
				limit = { is_colony_pop = yes }
			}
		}
	}
}
requirement_slave_facility = {
	custom_tooltip = {
		text = "requirement_slave_facility"
		planet = { any_owned_pop = { is_enslaved = yes } }
	}
}
requires_betharian_stone = {
	custom_tooltip = {
		fail_text = "requires_betharian_stone"
		tile = {
			has_resource = { type = sr_betharian amount > 0 }
		}
	}
}
requires_alien_pets = {
	custom_tooltip = {
		fail_text = "requires_alien_pets"
		tile = {
			has_resource = { type = sr_alien_pets amount > 0 }
		}
	}
}
can_build_artist_monument = {
	custom_tooltip = {
		text = building_artist_tooltip
		planet = {
			owner = {
				check_variable = { which = artist_monument_purchased value > artist_monuments_built }
			}
		}
	}
}
 ### Resource Buildings Allow Triggers
requires_energy_tile = {
	custom_tooltip = {
		fail_text = "requires_energy_tile"
		tile = {
			has_resource = { type = energy amount > 0 }
		}
	}
}
requires_minerals_tile = {
	custom_tooltip = {
		fail_text = "requires_minerals_tile"
		tile = {
			has_resource = { type = minerals amount > 0 }
		}
	}
}
requires_food_tile = {
	custom_tooltip = {
		fail_text = "requires_food_tile"
		tile = {
			has_resource = { type = food amount > 0 }
		}
	}
}
requires_engineering_research_tile = {
	custom_tooltip = {
		fail_text = "requires_engineering_research_tile"
		tile = {
			has_resource = { type = engineering_research amount > 0 }
		}
	}
}
requires_physics_research_tile = {
	custom_tooltip = {
		fail_text = "requires_physics_research_tile"
		tile = {
			has_resource = { type = physics_research amount > 0 }
		}
	}
}
requires_society_research_tile = {
	custom_tooltip = {
		fail_text = "requires_society_research_tile"
		tile = {
			has_resource = { type = society_research amount > 0 }
		}
	}
}
requires_megastructure_node_tile = {
	custom_tooltip = {
		fail_text = "requires_megastructure_node_tile"
		tile = {
			has_resource = { type = sr_megastructure_node amount > 0 }
		}
	}
}
 ### Starport Buildings/Modules Possible Triggers
requires_starport = {
	custom_tooltip = { fail_text = "requires_starport" has_starbase_size >= starbase_starport }
}
requires_citadel = {
	custom_tooltip = { fail_text = "requires_citadel" has_starbase_size >= starbase_citadel }
}
requires_starfortress = {
	custom_tooltip = { fail_text = "requires_starfortress" has_starbase_size >= starbase_starfortress }
}
requires_nebula = {
	custom_tooltip = {
		fail_text = "requires_nebula"
		star = { is_inside_nebula = yes }
	}
}
requires_black_hole = {
	custom_tooltip = {
		fail_text = "requires_black_hole"
		star = { is_star_class = sc_black_hole }
	}
}
requires_colonized_planet = {
	custom_tooltip = {
		fail_text = "requires_colonized_planet"
		solar_system = { any_planet = { is_owned_by = from } }
	}
}
requires_curator = {
	custom_tooltip = {
		fail_text = "requires_curator"
		solar_system = {
			has_star_flag = enclave
			any_ship_in_system = {
				exists = owner
				owner = { has_country_flag = curator_enclave_country }
			}
		}
	}
}
requires_curator_agreement = {
	custom_tooltip = {
		fail_text = "requires_curator_agreement"
		solar_system = {
			has_star_flag = enclave
			any_ship_in_system = {
				exists = owner
				owner = { has_country_flag = curator_enclave_country has_country_flag = think_tank@root.owner }
			}
		}
	}
}
requires_artisans = {
	custom_tooltip = {
		fail_text = "requires_artisans"
		solar_system = {
			has_star_flag = enclave
			any_ship_in_system = {
				exists = owner
				owner = {
					OR = {
						is_same_value = event_target:artist_enclave_country
						has_country_flag = artist_enclave_country
						has_country_flag = artist_enclave
					}
				}
			}
		}
	}
}
requires_artist_agreement = {
	custom_tooltip = {
		fail_text = "requires_artist_agreement"
		solar_system = {
			has_star_flag = enclave
			any_ship_in_system = {
				exists = owner
				owner = {
					OR = {
						is_same_value = event_target:artist_enclave_country
						has_country_flag = artist_enclave_country
						has_country_flag = artist_enclave
					}
					has_country_flag = art_college@root.owner
				}
			}
		}
	}
}
requires_trade_planet = {
	custom_tooltip = {
		fail_text = "requires_trade_planet"
		solar_system = {
			OR = {
				any_planet = {
					exists = owner
					owner = {
						OR = { is_country_type = default is_country_type = ascended_empire }
					}
				}
				AND = {
					has_star_flag = enclave
					any_ship_in_system = {
						exists = owner
						owner = { has_country_flag = trader_enclave_country }
					}
				}
			}
		}
	}
}
 ### Active Effects
requires_bio_trophy_pop = {
	custom_tooltip = {
		fail_text = "bio_trophy_tooltip_1"
		has_living_standard = { country = planet.owner type = living_standard_organic_trophy }
	}
}
 ### Owner Triggers
is_machine_empire = { has_authority = auth_machine_intelligence }
is_servitor = { has_government = gov_machine_servitor }
is_assimilator = { has_government = gov_machine_assimilator }
is_terminator = { has_government = gov_machine_terminator }
is_hive_mind_empire = { has_authority = auth_hive_mind }
is_synth_empire = { has_country_flag = synthetic_age }
is_gestalt_consciousness = { has_ethic = ethic_gestalt_consciousness }
is_devouring_swarm = { has_valid_civic = civic_hive_devouring_swarm }
is_fanatic_purifier = { has_valid_civic = civic_fanatic_purifiers }
is_exterminator = {
	OR = {
		has_valid_civic = civic_fanatic_purifiers
		has_valid_civic = civic_hive_devouring_swarm
		has_government = gov_machine_terminator
	}
}
 # With exists = owner check
owner_is_machine_empire = {
	exists = owner
	owner = { has_authority = auth_machine_intelligence }
}
owner_is_hive_mind_empire = {
	exists = owner
	owner = { has_authority = auth_hive_mind }
}
owner_is_spiritualist = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_spiritualist has_ethic = ethic_fanatic_spiritualist }
	}
}
owner_is_militarist = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_militarist has_ethic = ethic_fanatic_militarist }
	}
}
owner_is_materialist = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_materialist has_ethic = ethic_fanatic_materialist }
	}
}
owner_is_pacifist = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_pacifist has_ethic = ethic_fanatic_pacifist }
	}
}
owner_is_xenophile = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_xenophile has_ethic = ethic_fanatic_xenophile }
	}
}
owner_is_authoritarian = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_fanatic_authoritarian has_ethic = ethic_authoritarian }
	}
}
owner_is_egalitarian = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_fanatic_egalitarian has_ethic = ethic_egalitarian }
	}
}
owner_is_xenophobe = {
	exists = owner
	owner = {
		OR = { has_ethic = ethic_fanatic_xenophobe has_ethic = ethic_xenophobe }
	}
}
owner_is_organic_or_servitor = {
	exists = owner
	owner = {
		OR = { is_machine_empire = no is_servitor = yes }
	}
}
owner_is_servitor = {
	exists = owner
	owner = { has_government = gov_machine_servitor }
}
owner_is_gestalt_consciousness = {
	exists = owner
	owner = { has_ethic = ethic_gestalt_consciousness }
}
owner_is_synth_empire = {
	exists = owner
	owner = { has_country_flag = synthetic_age }
}
 ### Capital Check Triggers
has_capital_building = {
	OR = {
		has_capital_0 = yes
		has_capital_1 = yes
		has_capital_2 = yes
		has_capital_3 = yes
		has_building = building_hab_capital
	}
}
has_capital_0 = {
	OR = { has_building = building_colony_shelter has_building = building_deployment_post }
}
has_capital_1 = {
	OR = { has_building = building_capital_1 has_building = building_machine_capital_1 }
}
has_capital_2 = {
	OR = { has_building = building_capital_2 has_building = building_machine_capital_2 }
}
has_capital_3 = {
	OR = { has_building = "building_capital_3" has_building = "building_machine_capital_3" }
}
has_hab_capital = { has_building = building_hab_capital }
cgm_has_planet_bonus_building = {
	OR = {
		has_building = building_agricultural_processor_1
		has_building = building_agricultural_processor_2
		has_building = building_akx_worm_1
		has_building = building_artist
		has_building = building_biolab_4
		has_building = building_economic_district_5
		has_building = building_engineering_campus_5
		has_building = building_engineering_facility_4
		has_building = building_hydroponic_farm_5
		has_building = building_hydroponics_farm_5
		has_building = building_hypercomms_forum
		has_building = building_manufacturing_complex_5
		has_building = building_mineral_processing_plant_1
		has_building = building_mineral_processing_plant_2
		has_building = building_mining_network_5
		has_building = building_physics_campus_5
		has_building = building_physics_lab_4
		has_building = building_power_hub_1
		has_building = building_power_hub_2
		has_building = building_power_plant_5
		has_building = building_sacred_nexus
		has_building = building_sociological_campus_5
		has_building = building_system_conflux
		has_alphamod_planet_bonus_building = yes
		has_ag_planet_bonus_building = yes
		has_eutab_planet_bonus_building = yes
		has_gse_planet_bonus_building = yes
		has_co_planet_bonus_building = yes
		has_esap_planet_bonus_building = yes
		has_est_planet_bonus_building = yes
		has_gwen_planet_bonus_building = yes
		has_tycoon_planet_bonus_building = yes
		has_ut_planet_bonus_building = yes
		has_ab_planet_bonus_building = yes
		has_mem_planet_bonus_building = yes
		has_stexp_planet_bonus_building = yes
		has_expstr_planet_bonus_building = yes
		has_cgm_planets_planet_bonus_building = yes
	}
}
cgm_had_planet_bonus_building = {
	OR = {
		has_prev_building = building_agricultural_processor_1
		has_prev_building = building_agricultural_processor_2
		has_prev_building = building_akx_worm_1
		has_prev_building = building_artist
		has_prev_building = building_biolab_4
		has_prev_building = building_economic_district_5
		has_prev_building = building_engineering_campus_5
		has_prev_building = building_engineering_facility_4
		has_prev_building = building_hydroponic_farm_5
		has_prev_building = building_hydroponics_farm_5
		has_prev_building = building_hypercomms_forum
		has_prev_building = building_manufacturing_complex_5
		has_prev_building = building_mineral_processing_plant_1
		has_prev_building = building_mineral_processing_plant_2
		has_prev_building = building_mining_network_5
		has_prev_building = building_physics_campus_5
		has_prev_building = building_physics_lab_4
		has_prev_building = building_power_hub_1
		has_prev_building = building_power_hub_2
		has_prev_building = building_power_plant_5
		has_prev_building = building_sacred_nexus
		has_prev_building = building_sociological_campus_5
		has_prev_building = building_system_conflux
		had_alphamod_planet_bonus_building = yes
		had_ag_planet_bonus_building = yes
		had_eutab_planet_bonus_building = yes
		had_gse_planet_bonus_building = yes
		had_co_planet_bonus_building = yes
		had_esap_planet_bonus_building = yes
		had_est_planet_bonus_building = yes
		had_gwen_planet_bonus_building = yes
		had_tycoon_planet_bonus_building = yes
		had_ut_planet_bonus_building = yes
		had_ab_planet_bonus_building = yes
		had_mem_planet_bonus_building = yes
		had_stexp_planet_bonus_building = yes
		had_expstr_planet_bonus_building = yes
		had_cgm_planets_planet_bonus_building = yes
	}
}
cgm_has_adj_bonus_building = {
	OR = {
		has_building = building_hyperstorage_facility_1
		has_building = building_hyperstorage_facility_2
		has_building = building_hyperstorage_facility_3
		has_building = building_capital_1
		has_building = building_capital_2
		has_building = building_capital_3
		has_building = building_machine_capital_1
		has_building = building_machine_capital_2
		has_building = building_machine_capital_3
		has_building = building_hab_capital
		has_building = building_machine_capital_3
		has_building = building_capital_3
		AND = {
			planet_is_artificial = yes
			OR = {
				has_building = building_energy_matter_converter_1_1
				has_building = building_energy_matter_converter_2_1
				has_building = building_energy_matter_converter_3_1
				has_building = building_energy_conduit_1_1
				has_building = building_energy_conduit_2_1
				has_building = building_energy_conduit_3_1
				has_building = building_food_replicator_1_1
				has_building = building_food_replicator_2_1
				has_building = building_food_replicator_3_1
				has_building = building_computational_array_1_1
				has_building = building_computational_array_2_1
				has_building = building_computational_array_3_1
				has_building = building_energy_matter_converter_1_2
				has_building = building_energy_matter_converter_2_2
				has_building = building_energy_matter_converter_3_2
				has_building = building_energy_conduit_1_2
				has_building = building_energy_conduit_2_2
				has_building = building_energy_conduit_3_2
				has_building = building_food_replicator_1_2
				has_building = building_food_replicator_2_2
				has_building = building_food_replicator_3_2
				has_building = building_computational_array_1_2
				has_building = building_computational_array_2_2
				has_building = building_computational_array_3_2
				has_building = building_energy_matter_converter_1_3
				has_building = building_energy_matter_converter_2_3
				has_building = building_energy_matter_converter_3_3
				has_building = building_energy_conduit_1_3
				has_building = building_energy_conduit_2_3
				has_building = building_energy_conduit_3_3
				has_building = building_food_replicator_1_3
				has_building = building_food_replicator_2_3
				has_building = building_food_replicator_3_3
				has_building = building_computational_array_1_3
				has_building = building_computational_array_2_3
				has_building = building_computational_array_3_3
			}
		}
		has_cgmvc_submod_adj_bonus_building = yes
		has_alphamod_adj_bonus_building = yes
		has_ag_adj_bonus_building = yes
		has_eutab_adj_bonus_building = yes
		has_gse_adj_bonus_building = yes
		has_co_adj_bonus_building = yes
		has_esap_adj_bonus_building = yes
		has_est_adj_bonus_building = yes
		has_gwen_adj_bonus_building = yes
		has_tycoon_adj_bonus_building = yes
		has_ab_adj_bonus_building = yes
		has_mem_adj_bonus_building = yes
		has_expstr_adj_bonus_building = yes
		has_cgm_planets_adj_bonus_building = yes
	}
}
cgm_had_adj_bonus_building = {
	OR = {
		has_prev_building = building_hyperstorage_facility_1
		has_prev_building = building_hyperstorage_facility_2
		has_prev_building = building_hyperstorage_facility_3
		has_prev_building = building_capital_1
		has_prev_building = building_capital_2
		has_prev_building = building_capital_3
		has_prev_building = building_machine_capital_1
		has_prev_building = building_machine_capital_2
		has_prev_building = building_machine_capital_3
		has_prev_building = building_hab_capital
		has_prev_building = building_machine_capital_3
		has_prev_building = building_capital_3
		AND = {
			planet_is_artificial = yes
			OR = {
				has_prev_building = building_energy_matter_converter_1_1
				has_prev_building = building_energy_matter_converter_2_1
				has_prev_building = building_energy_matter_converter_3_1
				has_prev_building = building_energy_conduit_1_1
				has_prev_building = building_energy_conduit_2_1
				has_prev_building = building_energy_conduit_3_1
				has_prev_building = building_food_replicator_1_1
				has_prev_building = building_food_replicator_2_1
				has_prev_building = building_food_replicator_3_1
				has_prev_building = building_computational_array_1_1
				has_prev_building = building_computational_array_2_1
				has_prev_building = building_computational_array_3_1
				has_prev_building = building_energy_matter_converter_1_2
				has_prev_building = building_energy_matter_converter_2_2
				has_prev_building = building_energy_matter_converter_3_2
				has_prev_building = building_energy_conduit_1_2
				has_prev_building = building_energy_conduit_2_2
				has_prev_building = building_energy_conduit_3_2
				has_prev_building = building_food_replicator_1_2
				has_prev_building = building_food_replicator_2_2
				has_prev_building = building_food_replicator_3_2
				has_prev_building = building_computational_array_1_2
				has_prev_building = building_computational_array_2_2
				has_prev_building = building_computational_array_3_2
				has_prev_building = building_energy_matter_converter_1_3
				has_prev_building = building_energy_matter_converter_2_3
				has_prev_building = building_energy_matter_converter_3_3
				has_prev_building = building_energy_conduit_1_3
				has_prev_building = building_energy_conduit_2_3
				has_prev_building = building_energy_conduit_3_3
				has_prev_building = building_food_replicator_1_3
				has_prev_building = building_food_replicator_2_3
				has_prev_building = building_food_replicator_3_3
				has_prev_building = building_computational_array_1_3
				has_prev_building = building_computational_array_2_3
				has_prev_building = building_computational_array_3_3
			}
		}
		had_cgmvc_submod_adj_bonus_building = yes
		had_alphamod_adj_bonus_building = yes
		had_ag_adj_bonus_building = yes
		had_eutab_adj_bonus_building = yes
		had_gse_adj_bonus_building = yes
		had_co_adj_bonus_building = yes
		had_esap_adj_bonus_building = yes
		had_est_adj_bonus_building = yes
		had_gwen_adj_bonus_building = yes
		had_tycoon_adj_bonus_building = yes
		had_ab_adj_bonus_building = yes
		had_mem_adj_bonus_building = yes
		had_expstr_adj_bonus_building = yes
		had_cgm_planets_adj_bonus_building = yes
	}
}
 ### Planet Triggers
in_sector = { sector_controlled = yes }
is_habitat = { is_planet_class = pc_habitat }
is_machine_world = { is_planet_class = pc_machine }
is_gaia_world = { is_planet_class = pc_gaia }
is_tomb_world = { is_planet_class = pc_nuked }
is_artificial = {
	OR = {
		is_ringworld = yes
		is_planet_class = pc_habitat
		is_planet_class_pc_squareworld_habitable = yes
		has_planet_flag = megastructure
	}
}
is_special = {
	OR = {
		is_ringworld = yes
		is_planet_class = pc_habitat
		is_planet_class = pc_machine
		is_planet_class = pc_gaia
		is_planet_class = pc_nuked
	}
}
is_fallen_empire_planet = {
	owner = {
		OR = { is_country_type = fallen_empire is_country_type = awakened_fallen_empire }
	}
}
is_primitive_planet = { owner = { is_country_type = primitive } }
 # with planet scope
planet_in_sector = { planet = { sector_controlled = yes } }
planet_is_habitat = {
	planet = {
		OR = { has_planet_flag = pf_habitat is_planet_class = pc_habitat }
	}
}
planet_is_machine_world = { planet = { is_planet_class = pc_machine } }
planet_is_ringworld = { planet = { is_ringworld = yes } }
planet_is_gaia_world = { planet = { is_planet_class = pc_gaia } }
planet_is_tomb_world = { planet = { is_planet_class = pc_nuked } }
planet_is_homeworld = { planet = { is_homeworld = yes } }
planet_is_capital = { planet = { is_capital = yes } }
planet_is_artificial = {
	planet = {
		OR = {
			is_planet_class = pc_habitat
			is_planet_class_pc_squareworld_habitable = yes
			is_ringworld = yes
		}
	}
}
planet_is_special = {
	planet = {
		OR = {
			is_planet_class = pc_habitat
			is_planet_class = pc_machine
			is_planet_class = pc_gaia
			is_planet_class = pc_nuked
			is_ringworld = yes
		}
	}
}
planet_is_fallen_empire_planet = {
	planet = {
		owner = {
			OR = { is_country_type = fallen_empire is_country_type = awakened_fallen_empire }
		}
	}
}
planet_is_primitive_planet = {
	planet = { owner = { is_country_type = primitive } }
}
 ### Solar System Checks
has_black_hole_or_dyson_sphere = {
	planet = {
		solar_system = {
			OR = {
				is_star_class = sc_black_hole
				has_megastructure = dyson_sphere_3
				has_megastructure = dyson_sphere_4
				has_megastructure = dyson_sphere_5
			}
		}
	}
}
 ### limit and prerequisite conditions - meant to be used in AI allow effects
food_buildings_limitation = {
	from.owner = {
		OR = {
			requires_any_food = no
			check_variable = { which = food_country_weight value = 0 }
		}
	}
}
is_food_delimited = {
	OR = {
		requires_any_food = no
		check_variable = { which = food_country_weight value = 0 }
	}
}
empire_unique_prerequisite = {
	from.owner = { minerals > 1500 influence > 300 }
}
 ### Resource Triggers
 #ai_allow scopes to trigger by default
has_betharian = {
	has_resource = { type = sr_betharian amount > 0 }
}
planet_has_betharian = {
	planet = {
		any_tile = {
			has_resource = { type = sr_betharian amount > 0 }
		}
	}
}
has_alien_pets = {
	has_resource = { type = sr_alien_pets amount > 0 }
}
planet_has_alien_pets = {
	planet = {
		any_tile = {
			has_resource = { type = sr_alien_pets amount > 0 }
		}
	}
}
planet_has_megastructure_node = {
	planet = {
		any_tile = {
			has_resource = { type = sr_megastructure_node amount > 0 }
		}
	}
}
 ### Tradition Triggers
has_colonization_fever = {
	OR = {
		has_non_swapped_tradition = tr_expansion_colonization_fever
		has_swapped_tradition = tr_expansion_colonization_fever_machine
		has_swapped_tradition = tr_expansion_colonization_fever_hive
	}
}
has_pursuit_of_profit = {
	OR = { has_non_swapped_tradition = tr_prosperity_pursuit_of_profit has_swapped_tradition = tr_prosperity_pursuit_of_profit_machine }
}
has_synchronicity_machine_center = { has_swapped_tradition = tr_synchronicity_machine_center }
has_utopian_dream = { has_non_swapped_tradition = tr_harmony_utopian_dream }
has_diplomacy_alien_tourism = { has_non_swapped_tradition = tr_diplomacy_alien_tourism }
has_synchronicity_hive_mind_synapse = { has_swapped_tradition = tr_synchronicity_hive_mind_synapse }
has_purity_symbol_purity = { has_swapped_tradition = tr_purity_symbol_purity }
 ### Pop Triggers
is_warrior_pop = {
	OR = {
		has_trait = trait_strong
		has_trait = trait_very_strong
		has_trait = trait_cybernetic
	}
}
 ### Resource Triggers
has_standard_resource = {
	OR = {
		has_resource = { type = energy amount > 0 }
		has_resource = { type = minerals amount > 0 }
		has_resource = { type = food amount > 0 }
		has_resource = { type = unity amount > 0 }
		has_resource = { type = society_research amount > 0 }
		has_resource = { type = physics_research amount > 0 }
		has_resource = { type = engineering_research amount > 0 }
	}
}
has_any_tile_strategic_resource = {
	OR = {
		has_resource = { type = sr_betharian amount > 0 }
		has_resource = { type = sr_alien_pets amount > 0 }
		has_cgm_buildings_planetary_strategic_resources = yes
		has_planets_enhanced_planetary_strategic_resources = yes
		has_alphamod_planetary_strategic_resources = yes
		has_astrogeology_planetary_strategic_resources = yes
		has_planetary_diversity_planetary_strategic_resources = yes
		has_apsr_resource_local = yes
		has_expandedsr_strategic_resources = yes
	}
}
has_cgm_buildings_planetary_strategic_resources = {
	has_resource = { type = sr_megastructure_node amount > 0 }
}
 ### Can Build Triggers
can_build_engineering_facility_1 = {
	owner = { has_technology = "tech_engineering_lab_1" }
	standard_conditions = yes
}
can_build_phyiscs_lab_1 = {
	owner = { has_technology = "tech_physics_lab_1" }
	standard_conditions = yes
}
can_build_biolab_1 = {
	owner = { has_technology = "tech_biolab_1" }
	standard_conditions = yes
}
 ### Synergy Triggers
planet_is_not_virtual = {
	OR = {
		gse_enabled = no
		AND = {
			gse_enabled = yes
			planet = { is_planet_class_pc_virtual_world = no }
		}
	}
}
 ### Tech triggers
food_tech_potential = { is_machine_empire = no }
food_buildings_destroy_conditions = { owner_is_machine_empire = yes }
requires_any_food = {
	OR = {
		AND = { is_machine_empire = no is_synth_empire = no }
		has_monthly_income = { resource = food value < 0 }
		has_civic = civic_machine_servitor
	}
}
