Gwen_Adaptation_Steambot_Species = { 
	icon = "icons/McCarrick Trait Icons/Steambot.dds"
	custom_tooltip = GWEN_TRAIT_Steambot_EFFECT
	cost = 1
	modification = no
#	allowed_archetypes = { BIOLOGICAL ROBOT MACHINE }
	allowed_archetypes = { ROBOT MACHINE }
	modifier = {
		pop_environment_tolerance = -4.0
		pc_tropical_habitability = 4.0
		pc_continental_habitability = 4.0
		pc_ocean_habitability = 4.0
		pop_robot_upkeep_mult = 1
		pop_robot_build_speed_mult = -0.5
	}
}
	
Gwen_Adaptation_Steambot_Species_Sci = { 
	icon = "icons/McCarrick Trait Icons/Steambot.dds"
	cost = 0
	initial = no
	randomized = no	
	modification = no
	modifier = {
		category_industry_research_speed_mult = 0.10
	}
	leader_trait = yes
	leader_class = { scientist }
	
	ai_categories = {
#		physics
#		society
		engineering
#		survey
	}
	
	ai_weight = {
		weight = 50
	}
}
# techs based on evasion components rather than shield, hull, or armor components. buildings that grant empire bonuses but can only be built on watery worlds.
Gwen_Adaptation_Steambot_Species_Gen = { 
	icon = "icons/McCarrick Trait Icons/Steambot.dds"
	cost = 0
	initial = no
	randomized = no	
	modification = no
	modifier = {
		army_disengage_chance_mult = 0.10
	}
	leader_trait = yes
	leader_class = { general }
}

Gwen_Adaptation_Steambot_Species_Adm = { 
	icon = "icons/McCarrick Trait Icons/Steambot.dds"
	cost = 0
	initial = no
	randomized = no	
	modification = no
	modifier = {
		ship_evasion_add = 5
		ship_disengage_chance_mult = 0.10
	}
	leader_trait = yes
	leader_class = { admiral }
}

Gwen_Adaptation_Steambot_Species_Gov = { 
	icon = "icons/McCarrick Trait Icons/Steambot.dds"
	cost = 0
	initial = no
	randomized = no	
	modification = no
	modifier = {
		planet_orbital_bombardment_damage = -0.05
	}
	leader_trait = yes
	leader_class = { governor }
}

Gwen_Adaptation_Steambot_Species_Rul = { 
	icon = "icons/McCarrick Trait Icons/Steambot.dds"
	cost = 0
	initial = no
	randomized = no	
	modification = no
	modifier = {
		terraforming_cost_mult = -0.05
		terraform_speed_mult = 0.10
	}
	leader_trait = yes
	leader_class = { ruler }
}