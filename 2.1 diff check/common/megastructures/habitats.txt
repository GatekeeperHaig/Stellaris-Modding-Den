# see README.txt for example

habitat_0 = {
	entity = ""
	construction_entity = "orbital_habitat_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 1800
	build_cost = {
		minerals = 10000
		influence = 200
	}
	construction_blocks_others = no

	potential = {
		OR = {
			has_ascension_perk = ap_voidborn
			has_civic = civic_diadochi
			has_civic = civic_great_khans_legacy
			has_country_flag = democratic_khanate_flag
		}
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#can_build_megastructure_on_planet = yes
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
					solar_system = {
						has_star_flag = ring_world_built
					}
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_ringworld_habitable_damaged
					is_planet_class = pc_ringworld_tech
					is_planet_class = pc_ringworld_tech_damaged
					is_planet_class = pc_ringworld_seam
					is_planet_class = pc_ringworld_seam_damaged
					is_planet_class = pc_habitat
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_orbital_station"
				has_orbital_station = no
			}

 			# balance for habitats
			custom_tooltip = {
				fail_text = "requires_not_minor_planetary_body"
				NOR = {
					is_asteroid = yes
					is_moon = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
		} # use these for all non-star megastructures
	}

	# root = system
	# from = country	
	ai_weight = {
		factor = 10
	
		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}	

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		spawn_planet = {
			class = "pc_habitat"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 9.899
			size = 12
			has_ring = no
			
			init_effect = {
				set_name = "HABITAT_PLANET_NAME"
				set_planet_entity = {
					entity = "orbital_habitat_entity"
					graphical_culture = fromfrom
				}
				surveyed = {
					set_surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				while = {
					limit = {
						any_tile = { has_blocker = yes }
					}
					random_tile = {
						limit = { has_blocker = yes }
						remove_blocker = yes
					}
				}
				if = {
					limit = {
						fromfrom.planet = {
							colonizeable_planet = no
						}
					}
					copy_orbital_tile = fromfrom.planet
				}
				if = {
					limit = {
						from = { has_ascension_perk = ap_master_builders }
					}
					set_planet_size = 15
				}
				set_planet_flag = megastructure
				set_planet_flag = habitat
			}
		}
		fromfrom.planet = {
			set_planet_flag = has_megastructure
		}
		remove_megastructure = fromfrom
		from = { country_event =  { id = utopia.61 } }
	}
}
