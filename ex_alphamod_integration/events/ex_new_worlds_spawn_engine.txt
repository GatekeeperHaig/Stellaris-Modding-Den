namespace = ex_new_worlds_spawn_engine

event = { #this event triggers on game start
	id = ex_new_worlds_spawn_engine.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	#This event fires only once.
		
	immediate = {		
		set_global_flag = nw_game_start
		every_country = {
			every_planet = {
				limit = {
					OR = {
						is_vanilla_habitable_planet = yes
						is_vanilla_special_planet = yes
					}
				}	
				every_owned_pop = {
					limit = { is_robot_pop = no }
					ex_new_worlds_replace_planet_pref_traits = yes
				}
			}
		}		
		every_planet = { 
			if = {
				limit = { is_vanilla_habitable_planet = yes }						
				set_timed_planet_flag = { flag = ex_check_gate_1 days = 10 }
				planet_event = { id = ex_new_worlds_spawn_engine.2 days = 2 }					
			}							
			if = {
				limit = { is_vanilla_uninhabitable_planet = yes	}
				planet_event = { id = ex_new_worlds_spawn_engine.3 days = 3 }
				if = {
					limit = {
						is_planet_class = pc_gas_giant 
						has_moon = yes
					}
					every_moon = { set_planet_flag = gas_giant_moon }
				}										
			}				
		}	
	}
}

event = { #this event fires on a monthly pulse, only if the gamestart event didn't fire
	id = ex_new_worlds_spawn_engine.1
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	#This event fires only once.
	
	trigger = { NOT = { has_global_flag = nw_game_start } } 	
	
	immediate = {		
		every_country = {
			every_planet = {
				limit = {
					OR = {
						is_vanilla_habitable_planet = yes
						is_vanilla_special_planet = yes
					}
				}	
				every_owned_pop = {
					limit = { is_robot_pop = no }
					ex_new_worlds_replace_planet_pref_traits = yes
				}
			}
		}		
		every_planet = { 
			if = {
				limit = { is_vanilla_habitable_planet = yes }						
				set_timed_planet_flag = { flag = ex_check_gate_1 days = 10 }
				planet_event = { id = ex_new_worlds_spawn_engine.2 days = 2 }					
			}							
			if = {
				limit = { is_vanilla_uninhabitable_planet = yes	}
				planet_event = { id = ex_new_worlds_spawn_engine.3 days = 3 }
				if = {
					limit = {
						is_planet_class = pc_gas_giant 
						has_moon = yes
					}
					every_moon = { set_planet_flag = gas_giant_moon }
				}										
			}				
		}	
	}
}

planet_event = { 
	id = ex_new_worlds_spawn_engine.2
	hide_window = yes
	is_triggered_only = yes
	
	
	immediate = { 
		solar_system = { random_planet = { limit = { is_star = yes } save_event_target_as = system_star_1 } } 
		if = { 
			limit = { NOT = { exists = pop } } 
			ex_new_worlds_habitable_planets_spawn_table = yes
		}		
		if = { 
			limit = { 
				exists = pop 
				any_pop = { is_robot_pop = no }
			} 
			check_colonized_planet_types = yes
			ex_new_worlds_replace_planet_pref_traits = yes
			if = {
				limit = { 
					has_planet_flag = ex_check_gate_1
					exists = owner
					owner = { is_ai = yes }					
				}
				ex_new_worlds_habitable_planets_spawn_table = yes
				ex_new_worlds_update_planet_pref_traits = yes
				colonized_planet_flag_cleanup = yes
				break = yes
			}	
			if = {
				limit = { 
					NOT = { has_planet_flag = ex_check_gate_1 }
					OR = {
						is_homeworld = no
						is_capital = no
					}	
				}
				ex_new_worlds_habitable_planets_spawn_table = yes
				ex_new_worlds_update_planet_pref_traits = yes
				colonized_planet_flag_cleanup = yes
				break = yes
			}			
		}
	}
}

planet_event = { 
	id = ex_new_worlds_spawn_engine.3
	hide_window = yes
	is_triggered_only = yes
	
	
	immediate = { 
		solar_system = { random_planet = { limit = { is_star = yes } save_event_target_as = system_star_1 } } 
		ex_new_worlds_uninhabitable_planets_spawn_table = yes
	}
}