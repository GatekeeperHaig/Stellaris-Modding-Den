 # This file was created by script!
 # Instead of editing it, you should change the python script.
 # Changes to the file will be overwritten the next time the script is run.
namespace = core_game_mechanics_and_ai_base
country_event = {
	id = core_game_mechanics_and_ai_base.19
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		 #build_speed_mult
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_speed_mult_planet_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_speed_mult_planet_building_changed
			set_variable = { which = cgm_build_speed_mult_planet_building_value value = event_target:cgm_var_storage }
		}
		 #removing build_speed_mult bonuses if they exist
		if = {
			limit = { has_country_flag = core_game_mechanics_and_ai_base_build_speed_mult_modifier_active }
			country_event = { id = core_game_mechanics_and_ai_base.40 }
		}
		 #adding build_speed_mult bonuses
		country_event = { id = core_game_mechanics_and_ai_base.50 }
		 #build_cost_mult
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_capital_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_capital_building_changed
			set_variable = { which = cgm_build_cost_mult_capital_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_empire_unique_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_empire_unique_building_changed
			set_variable = { which = cgm_build_cost_mult_empire_unique_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_planet_unique_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_planet_unique_building_changed
			set_variable = { which = cgm_build_cost_mult_planet_unique_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_military_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_military_building_changed
			set_variable = { which = cgm_build_cost_mult_military_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_standard_resource_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_standard_resource_building_changed
			set_variable = { which = cgm_build_cost_mult_standard_resource_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_research_resource_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_research_resource_building_changed
			set_variable = { which = cgm_build_cost_mult_research_resource_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_unity_resource_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_unity_resource_building_changed
			set_variable = { which = cgm_build_cost_mult_unity_resource_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_special_resource_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_special_resource_building_changed
			set_variable = { which = cgm_build_cost_mult_special_resource_building_value value = event_target:cgm_var_storage }
		}
		if = {
			limit = {
				not = {
					check_variable = { which = cgm_build_cost_mult_replicator_building_value value = event_target:cgm_var_storage }
				}
			}
			set_country_flag = cgm_build_cost_mult_replicator_building_changed
			set_variable = { which = cgm_build_cost_mult_replicator_building_value value = event_target:cgm_var_storage }
		}
		 #removing build_cost_mult bonuses if they exist
		if = {
			limit = { has_country_flag = core_game_mechanics_and_ai_base_build_cost_mult_modifier_active }
			country_event = { id = core_game_mechanics_and_ai_base.41 }
		}
		 #adding build_cost_mult bonuses
		country_event = { id = core_game_mechanics_and_ai_base.51 }
	}
}
