namespace = mpengine

event = {
	id = mpengine.00
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = { 
		set_global_flag = milkomeda-project
		set_global_flag = gpm_planetary_rings_disabled # Guilli's planetary rings dont play nice with this mod's rescale
		every_country = {
			limit = { 
				OR = {
					is_country_type = dormant_marauders
					is_country_type = fallen_empire 
					is_country_type = enclave
				}			
			}
			every_system_within_border = {
				set_star_flag = special_empire_space
			}
		}
		every_planet = {
			if = {
				limit = {
					OR = {
						has_planet_flag = eco_hot_planet
						has_planet_flag = eco_temp_planet
						has_planet_flag = eco_cold_planet
					}
				}
				planet_event = { id = mpengine.02 days = 1 }
				
			}
		}		
		
	}
}

event = {
    id = mpengine.01
	title = mpengine.01.name
	desc = mpengine.01.desc
	picture = GFX_evt_star_chart
	show_sound = event_default
	location = root

	is_triggered_only = yes

	trigger = {
		owner = { is_ai = no }
	}

	option = {
		name = mpengine.01.x
        custom_tooltip = mpengine.01.x.tooltip
		hidden_effect = { # DO NOTHING - default option uses my own average balance
			#set_global_flag = habitable_very_high_expectations
			#planet_event = { id = mpengine.02 days = 1 }
		}
		
		
	}
	
	option = {
		name = mpengine.01.a
        custom_tooltip = mpengine.01.a.tooltip
		hidden_effect = {
			set_global_flag = habitable_very_high_expectations
			#planet_event = { id = mpengine.02 days = 1 }
		}
		
		
	}
	
	option = {
		name = mpengine.01.b
        custom_tooltip = mpengine.01.b.tooltip
		hidden_effect = {
			set_global_flag = habitable_high_expectations
			#planet_event = { id = mpengine.02 days = 1 }
		}
	}
	
	option = {
		name = mpengine.01.c
        custom_tooltip = mpengine.01.c.tooltip
		hidden_effect = {
			set_global_flag = habitable_low_expectations
			#planet_event = { id = mpengine.02 days = 1 }
		}
	}
	
	option = {
		name = mpengine.01.d
        custom_tooltip = mpengine.01.d.tooltip
		hidden_effect = {
			set_global_flag = habitable_very_low_expectations
			#planet_event = { id = mpengine.02 days = 1 }
		}
	}

	
}

planet_event = {
	id = mpengine.02 # HABITABLE SPAWNER
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	immediate = {
		if = {
			limit = { 
				solar_system = {
					NOR = {
						has_star_flag = sol_system
						has_star_flag = empire_home_system
						has_star_flag = floating_system
						has_star_flag = pdcrystal_system
						has_star_flag = city_system
						has_star_flag = graveyard_system
						has_star_flag = mushroom_system
						has_star_flag = biolumen_system
						has_star_flag = technoorganic_system
						has_star_flag = archive_system
						has_star_flag = empire_home_system
						has_star_flag = primitive_sol
						has_star_flag = eilistraee_system
						has_star_flag = tulshar_system
						has_star_flag = elven_system
						has_star_flag = lunari_system
						has_star_flag = elven_ring_system
						has_star_flag = AI_hub
						has_star_flag = AI_lair
						has_star_flag = sentinel_system
						has_star_flag = vechtar_zavonia_system
						has_star_flag = toxic_moon_system
						has_star_flag = shattered_world_system
						has_star_flag = hostile_system
						has_star_flag = high_energy_system
						has_star_flag = superflare_system
						has_star_flag = ruined_empire
						has_star_flag = crystal_system
						has_star_flag = sealed_system
						has_star_flag = marauder_system
						has_star_flag = ruined_matter_decompressor_system
						has_star_flag = ruined_strategic_coordination_center_system
						has_star_flag = ruined_interstellar_assembly_system
						has_star_flag = precursor_system
						has_star_flag = hyacinth_system	
					}
				}
			}
			mp_habitable_spawn = yes
		}
	}
}

event = {
	id = mpengine.03 # Convert Unity to Primordial class, setup initial wormhole link between Sol to Aldebaran and set wormholes as "seen" by the human empires
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes
	
	## NOTE: The secondary Sol or Aldaberan initializer for when you play as the opposite empire is setup in the !game_start_fix.txt
	immediate = {
		# Change Unity to Primordial class with the Adapted Environment modifier
		every_planet = {
			limit = {
				solar_system = { has_star_flag = aldebaran_system }
				has_planet_flag = unity
			}
			change_pc = pc_primordial
			set_entity_primordial = yes
			reroll_deposits = yes
			add_modifier = {
				modifier = "adapted_environ"
				days = -1
			}
			add_building = building_aeroponic_complex
			remove_district = district_farming
			remove_district = district_farming
			remove_district = district_farming
		}
		# Spawn wormhole
		random_system = {
			limit = { has_star_flag = aldebaran_system }
			random_system = {
				limit = { has_star_flag = sol }
				prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
						spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = yes
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
				link_wormholes = prev
			}
			
		}
		# Set wormholes as "seen"
		random_country = {
			limit = { has_country_flag = human_1 }
			set_country_flag = encountered_first_wormhole
			add_seen_bypass_type = wormhole
			add_research_option = tech_wormhole_stabilization
		}
		random_country = {
			limit = { has_country_flag = human_2 }
			set_country_flag = encountered_first_wormhole
			add_seen_bypass_type = wormhole
			add_research_option = tech_wormhole_stabilization
		}
		
	}
}