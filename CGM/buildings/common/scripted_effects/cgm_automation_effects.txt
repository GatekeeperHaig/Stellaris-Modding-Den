 #this = tile
 #prev = planet
 #owner = country
 #Build the building that fits the category defined in the name of each trigger.
 #Check if unique buildings of that category can be build first and do so if possible
 #Leave the 'succesful ->set flag' at the end as it is
cgm_add_special_building = {
	cgm_add_special_building_expstr = yes
	cgm_add_special_building_mem = yes
	cgm_add_special_building_gpm = yes
	cgm_add_special_building_co = yes
	cgm_add_special_building_alphamod = yes
	cgm_add_special_building_ut = yes
	cgm_add_special_building_gwen = yes
	cgm_add_special_building_est = yes
	cgm_add_special_building_esap = yes
	cgm_add_special_building_legw = yes
	cgm_add_special_building_gse = yes
	cgm_add_special_building_eutab = yes
	 #SPECIAL BUILDING NUMBER 1:
	if = {
		limit = {
			owner = {
				check_variable = { which = cgm_special_bestBuilding value = 1 }
			}
		}
		add_building_construction = building_hab_stronghold
		add_building_construction = building_stronghold
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			planet = { remove_planet_flag = fortify_planet }
			owner = { set_country_flag = cgm_auto_built }
		}
	}
	if = {
		limit = {
			owner = {
				check_variable = { which = cgm_special_bestBuilding value = 2 }
			}
		}
		add_building_construction = building_planetary_shield_generator
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			planet = { remove_planet_flag = build_planetary_shield_generator }
			owner = { set_country_flag = cgm_auto_built }
		}
	}
	if = {
		limit = {
			owner = {
				check_variable = { which = cgm_special_bestBuilding value = 3 }
			}
		}
		add_building_construction = building_psi_corps
		add_building_construction = building_ministry_benevolence
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
	if = {
		limit = {
			owner = {
				check_variable = { which = cgm_special_bestBuilding value = 4 }
			}
		}
		add_building_construction = building_artist
		add_building_construction = building_artist_patron
		add_building_construction = building_guardian_dragon_shrine
		add_building_construction = building_guardian_dragon_monument
		add_building_construction = building_stellarite_trophy
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
	if = {
		limit = {
			owner = {
				check_variable = { which = cgm_special_bestBuilding value = 5 }
			}
		}
		add_building_construction = building_autochthon_monument
		add_building_construction = building_temple
		add_building_construction = building_uplink_node
		add_building_construction = building_hab_cultural_center
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
}
 #Special SEARCH effect:
 #scopes (this effect ONLY)
 # this = planet
 #  prev/owner = country
cgm_search_for_special_building = {
	 #40 - build defense building if possible
	set_variable = { which = cgm_special_bestWeight value = 0 }
	if = {
		limit = {
			has_planet_flag = fortify_planet
			prev = { minerals > 300 }
		}
		set_variable = { which = cgm_special_bestWeight value = 10 }
	}
	if = {
		limit = {
			check_variable = { which = cgm_special_bestWeight value > prev }
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = prev }
			set_variable = { which = cgm_special_bestBuilding value = 1 }
		}
		save_event_target_as = cgm_best_planet_for_special
	}
	if = {
		limit = {
			has_planet_flag = build_planetary_shield_generator
			new_building_content_enabled = yes  #otherwise this building produces science
			prev = {
				check_variable = { which = cgm_special_bestWeight value < 10 }
			}
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = 10 }
			set_variable = { which = cgm_special_bestBuilding value = 2 }
		}
		save_event_target_as = cgm_best_planet_for_special
	}
	if = {
		limit = {
			is_capital = yes
			has_capital_3 = yes
			OR = {
				AND = {
					prev = { has_ascension_perk = ap_mind_over_matter minerals > 550 }
					NOT = { has_building = building_psi_corps }
				}
				AND = {
					prev = {
						is_machine_empire = no
						has_technology = tech_galactic_benevolence
						minerals > 600
						influence > 250
					}
					NOT = { has_building = building_ministry_benevolence }
				}
			}
			prev = {
				check_variable = { which = cgm_special_bestWeight value < 20 }
			}
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = 20 }
			set_variable = { which = cgm_special_bestBuilding value = 3 }
		}
		save_event_target_as = cgm_best_planet_for_special
	}
	if = {
		limit = {
			 #sector_controlled = no
			OR = {
				prev = {
					check_variable = { which = artist_monument_purchased value > artist_monuments_built }
					prev = {
						has_capital_building = yes
						NOT = { has_building = building_artist }
					}
				}
				prev = {
					has_country_flag = artist_building_patron
					NOT = { any_owned_planet = { has_building = building_artist_patron } }
					prev = {
						OR = {
							has_capital_2 = yes
							has_capital_3 = yes
							has_hab_capital = yes
						}
					}
				}
				prev = {
					has_country_flag = dragon_slayer
					OR = {
						has_ethic = ethic_spiritualist
						has_ethic = ethic_fanatic_spiritualist
						has_ethic = ethic_xenophile
						has_ethic = ethic_fanatic_xenophile
					}
					minerals > 1000
					NOT = { any_owned_planet = { has_building = building_guardian_dragon_shrine } }
				}
				prev = {
					has_country_flag = dragon_slayer
					NOR = {
						has_ethic = ethic_spiritualist
						has_ethic = ethic_fanatic_spiritualist
						has_ethic = ethic_xenophile
						has_ethic = ethic_fanatic_xenophile
					}
					minerals > 1000
					NOT = { any_owned_planet = { has_building = building_guardian_dragon_monument } }
				}
				prev = {
					has_country_flag = stellarite_trophy_allowed
					minerals > 1000
					NOT = { any_owned_planet = { has_building = building_stellarite_trophy } }
				}
			}
			prev = {
				check_variable = { which = cgm_special_bestWeight value < 20 }
			}
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = 20 }
			set_variable = { which = cgm_special_bestBuilding value = 4 }
		}
		save_event_target_as = cgm_best_planet_for_special
	}
	if = {
		limit = {
			OR = {
				AND = {
					is_habitat = no
					OR = {
						AND = {
							prev = { is_machine_empire = no }
							NOR = {
								has_building = building_autochthon_monument
								has_building = building_heritage_site
								has_building = building_hypercomms_forum
								has_building = building_autocurating_vault
								has_building = building_temple
								has_building = building_holotemple
								has_building = building_sacred_nexus
								has_building = building_citadel_of_faith
							}
						}
						AND = {
							prev = { is_machine_empire = yes }
							NOR = {
								has_building = building_uplink_node
								has_building = building_network_junction
								has_building = building_system_conflux
								has_building = building_alpha_hub
							}
						}
					}
				}
				AND = {
					is_habitat = yes
					OR = {
						AND = {
							prev = { is_machine_empire = no }
							NOR = {
								has_building = building_hab_cultural_center
								has_building = building_autocurating_vault
								has_building = building_citadel_of_faith
							}
						}
						AND = {
							prev = { is_machine_empire = yes }
							NOR = {
								has_building = building_uplink_node
								has_building = building_network_junction
								has_building = building_system_conflux
								has_building = building_alpha_hub
							}
						}
					}
				}
			}
			prev = {
				check_variable = { which = cgm_special_bestWeight value < 8 }
			}
		}
		prev = {
			set_variable = { which = cgm_special_bestWeight value = 8 }
			set_variable = { which = cgm_special_bestBuilding value = 5 }
		}
		save_event_target_as = cgm_best_planet_for_special
	}
	cgm_search_for_special_building_eutab = yes
	cgm_search_for_special_building_gse = yes
	cgm_search_for_special_building_legw = yes
	cgm_search_for_special_building_esap = yes
	cgm_search_for_special_building_est = yes
	cgm_search_for_special_building_gwen = yes
	cgm_search_for_special_building_ut = yes
	cgm_search_for_special_building_alphamod = yes
	cgm_search_for_special_building_co = yes
	cgm_search_for_special_building_gpm = yes
	cgm_search_for_special_building_mem = yes
	cgm_search_for_special_building_expstr = yes
}
 ### Adjacancy
add_food_adjacency_building = {
	add_food_adjacency_building_cgm_planets = yes
	add_food_adjacency_building_cgmvc_submod = yes
	add_food_adjacency_building_sfac = yes
	add_food_adjacency_building_gse = yes
	add_food_adjacency_building_eutab = yes
	add_food_adjacency_building_ab = yes
	add_food_adjacency_building_gwen = yes
	add_food_adjacency_building_co = yes
	add_food_adjacency_building_esc = yes
	add_food_adjacency_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_hyperstorage_facility_1
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_capital_1
			add_building_construction = building_machine_capital_1
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
		}
	}
}
add_minerals_adjacency_building = {
	add_minerals_adjacency_building_cgm_planets = yes
	add_minerals_adjacency_building_cgmvc_submod = yes
	add_minerals_adjacency_building_gse = yes
	add_minerals_adjacency_building_ab = yes
	add_minerals_adjacency_building_tycoon = yes
	add_minerals_adjacency_building_gwen = yes
	add_minerals_adjacency_building_est = yes
	add_minerals_adjacency_building_legw = yes
	add_minerals_adjacency_building_eutab = yes
	add_minerals_adjacency_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_hyperstorage_facility_1
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_capital_1
			add_building_construction = building_machine_capital_1
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
		}
	}
}
add_energy_adjacency_building = {
	add_energy_adjacency_building_cgmvc_submod = yes
	add_energy_adjacency_building_expstr = yes
	add_energy_adjacency_building_cgm_planets = yes
	add_energy_adjacency_building_ab = yes
	add_energy_adjacency_building_tycoon = yes
	add_energy_adjacency_building_gwen = yes
	add_energy_adjacency_building_est = yes
	add_energy_adjacency_building_gse = yes
	add_energy_adjacency_building_eutab = yes
	add_energy_adjacency_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_hyperstorage_facility_1
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_capital_1
			add_building_construction = building_machine_capital_1
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
		}
	}
}
add_engineering_research_adjacency_building = {
	add_engineering_research_adjacency_building_cgm_planets = yes
	add_engineering_research_adjacency_building_sfac = yes
	add_engineering_research_adjacency_building_mem = yes
	add_engineering_research_adjacency_building_gwen = yes
	add_engineering_research_adjacency_building_esap = yes
	add_engineering_research_adjacency_building_co = yes
	add_engineering_research_adjacency_building_eutab = yes
	add_engineering_research_adjacency_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_capital_1
		add_building_construction = building_machine_capital_1
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
}
add_physics_research_adjacency_building = {
	add_physics_research_adjacency_building_cgm_planets = yes
	add_physics_research_adjacency_building_sfac = yes
	add_physics_research_adjacency_building_mem = yes
	add_physics_research_adjacency_building_gwen = yes
	add_physics_research_adjacency_building_esap = yes
	add_physics_research_adjacency_building_co = yes
	add_physics_research_adjacency_building_legw = yes
	add_physics_research_adjacency_building_eutab = yes
	add_physics_research_adjacency_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_capital_1
		add_building_construction = building_machine_capital_1
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
}
add_society_research_adjacency_building = {
	add_society_research_adjacency_building_cgm_planets = yes
	add_society_research_adjacency_building_sfac = yes
	add_society_research_adjacency_building_mem = yes
	add_society_research_adjacency_building_gwen = yes
	add_society_research_adjacency_building_est = yes
	add_society_research_adjacency_building_esap = yes
	add_society_research_adjacency_building_co = yes
	add_society_research_adjacency_building_eutab = yes
	add_society_research_adjacency_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_capital_1
		add_building_construction = building_machine_capital_1
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
}
 ### Resources
add_energy_building = {
	add_energy_building_cgmvc_submod = yes
	add_energy_building_expstr = yes
	add_energy_building_pd = yes
	add_energy_building_cgm_planets = yes
	add_energy_building_ab = yes
	add_energy_building_ut = yes
	add_energy_building_tycoon = yes
	add_energy_building_gwen = yes
	add_energy_building_est = yes
	add_energy_building_esap = yes
	add_energy_building_co = yes
	add_energy_building_legw = yes
	add_energy_building_gse = yes
	add_energy_building_esc = yes
	add_energy_building_eutab = yes
	add_energy_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		add_building_construction = building_galactic_stock_exchange
		if = {
			limit = {
				OR = { has_building = yes has_building_construction = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			if = {
				limit = {
					owner = {
						check_variable = { which = energy_country_weight value < 2 }
					}  #only build expensive stuff when not in dire need of energy
					OR = {
						new_building_content_enabled = no
						has_resource = { type = energy amount < 2 }  #we do not want to build on more than 1 energy anything other than tile restricted buildings
					}
				}
				add_building_construction = building_probability_engine
				add_building_construction = building_akx_worm_1
				add_building_construction = building_power_hub_1
				add_building_construction = building_visitor_center
				add_building_construction = building_hive_synapse
				add_building_construction = building_control_center
				if = {
					limit = { prev = { has_planet_flag = build_neuro_electric_amplifier } }
					add_building_construction = building_neuro_electric_amplifier
					planet = { remove_planet_flag = build_neuro_electric_amplifier }
				}
				else = { add_building_construction = building_power_hub_1 }
			}
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
			else = {
				add_building_construction = building_power_plant_1
				add_building_construction = building_hab_solar_power_processor
				add_building_construction = building_isotope_refinery_1_1
				add_building_construction = building_isotope_refinery_1_2
				add_building_construction = building_isotope_refinery_1_3
				add_building_construction = building_isotope_refinery_1_4
				add_building_construction = building_isotope_refinery_1_5
				if = {
					limit = {
						OR = { has_building_construction = yes has_building = yes }
					}
					owner = { set_country_flag = cgm_auto_built }
				}
				else = {
					add_building_construction = building_economic_district_1
					if = {
						limit = {
							OR = { has_building_construction = yes has_building = yes }
						}
						owner = { set_country_flag = cgm_auto_built }
					}
				}
			}
		}
	}
}
add_minerals_building = {
	add_minerals_building_cgm_planets = yes
	add_minerals_building_stexp = yes
	add_minerals_building_pd = yes
	add_minerals_building_eutab = yes
	add_minerals_building_ab = yes
	add_minerals_building_ut = yes
	add_minerals_building_gwen = yes
	add_minerals_building_est = yes
	add_minerals_building_esap = yes
	add_minerals_building_co = yes
	add_minerals_building_legw = yes
	add_minerals_building_esc = yes
	add_minerals_building_eac = yes
	add_minerals_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building = yes has_building_construction = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		if = {
			limit = {
				owner = {
					check_variable = { which = minerals_country_weight value < 2 }
				}  #only build expensive stuff when not in dire need of minerals
				OR = {
					new_building_content_enabled = no
					has_resource = { type = minerals amount < 2 }  #we do not want to build on more than 1 minerals anything other than tile restricted buildings
				}
			}
			if = {
				limit = { prev = { has_planet_flag = build_slave_processing } }
				add_building_construction = building_slave_processing
				planet = { remove_planet_flag = build_slave_processing }
			}
			else_if = {
				limit = { prev = { has_planet_flag = build_neuro_electric_amplifier } }
				add_building_construction = building_neuro_electric_amplifier
				planet = { remove_planet_flag = build_neuro_electric_amplifier }
			}
			else = { add_building_construction = building_mineral_processing_plant_1 }
		}
		if = {
			limit = {
				OR = { has_building_construction = yes has_building = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_mining_network_1
			add_building_construction = building_hab_astro_mining_facility
			add_building_construction = building_mining_complex_1_1
			add_building_construction = building_mining_complex_1_2
			add_building_construction = building_mining_complex_1_3
			add_building_construction = building_mining_complex_1_4
			add_building_construction = building_mining_complex_1_5
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
			else = {
				add_building_construction = building_manufacturing_complex_1
				if = {
					limit = {
						OR = { has_building_construction = yes has_building = yes }
					}
					owner = { set_country_flag = cgm_auto_built }
				}
			}
		}
	}
}
add_food_building = {
	add_food_building_cgm_planets = yes
	add_food_building_co = yes
	add_food_building_eutab = yes
	add_food_building_ab = yes
	add_food_building_ut = yes
	add_food_building_gwen = yes
	add_food_building_est = yes
	add_food_building_esap = yes
	add_food_building_legw = yes
	add_food_building_esc = yes
	add_food_building_eac = yes
	add_food_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building_construction = yes has_building = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		if = {
			limit = {
				owner = {
					OR = {
						is_food_delimited = yes
						check_variable = { which = energy_country_weight value > food_country_weight }
					}
				}
			}
			if = {
				limit = { new_building_content_enabled = yes }
				add_building_construction = building_biofuel_refinery_1_1
				add_building_construction = building_biofuel_refinery_1_2
				add_building_construction = building_biofuel_refinery_1_3
				add_building_construction = building_biofuel_refinery_1_4
				add_building_construction = building_biofuel_refinery_1_5
			}
		}
		if = {
			limit = {
				NOR = { has_building_construction = yes has_building = yes }
			}
			if = {
				limit = {
					owner = {
						check_variable = { which = food_country_weight value < 2 }
					}  #only build expensive stuff when not in dire need of food
					OR = {
						new_building_content_enabled = no
						has_resource = { type = food amount < 2 }  #we do not want to build on more than 1 food anything other than tile restricted buildings
					}
				}
				add_building_construction = building_paradise_dome
				add_building_construction = building_agricultural_processor_1
				add_building_construction = building_hydroponics_farm_1
				add_building_construction = building_hab_agri_bay
				add_building_construction = building_nutrient_paste_facility
			}
			if = {
				limit = {
					NOR = { has_building_construction = yes has_building = yes }
				}
				if = {
					limit = {
						new_building_content_enabled = yes
						has_resource = { type = food amount > 0 }
					}
					add_building_construction = building_farming_complex_1_1
					add_building_construction = building_farming_complex_1_2
					add_building_construction = building_farming_complex_1_3
					add_building_construction = building_farming_complex_1_4
					add_building_construction = building_farming_complex_1_5
				}
				else = { add_building_construction = building_hydroponic_farm_1 add_building_construction = building_hydroponics_farm_1 }
			}
		}
		if = {
			limit = {
				OR = { has_building_construction = yes has_building = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
}
add_society_research_building = {
	add_society_research_building_cgm_planets = yes
	add_society_research_building_expstr = yes
	add_society_research_building_sfac = yes
	add_society_research_building_mem = yes
	add_society_research_building_pd = yes
	add_society_research_building_co = yes
	add_society_research_building_ut = yes
	add_society_research_building_gwen = yes
	add_society_research_building_esap = yes
	add_society_research_building_gse = yes
	add_society_research_building_esc = yes
	add_society_research_building_eutab = yes
	add_society_research_building_eac = yes
	add_society_research_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building_construction = yes has_building = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		if = {
			limit = {
				owner = {
					check_variable = { which = society_research_country_weight value < 2 }
				}  #only build expensive stuff when not in dire need of society_research
				OR = {
					new_building_content_enabled = no
					has_resource = { type = society_research amount < 2 }  #we do not want to build on more than 1 society_research anything other than tile restricted buildings
				}
			}
			add_building_construction = building_institute
			add_building_construction = building_singularity_core
			if = {
				limit = {
					new_building_content_enabled = no
					prev = { has_planet_flag = build_clone_vats }
				}
				add_building_construction = building_clone_vats
				planet = { remove_planet_flag = build_clone_vats }
			}
			if = {
				limit = {
					new_building_content_enabled = no
					prev = { has_planet_flag = build_war_factory }
				}
				add_building_construction = building_war_factory
				planet = { remove_planet_flag = build_war_factory }
			}
			if = {
				limit = {
					new_building_content_enabled = no
					prev = { has_planet_flag = build_military_academy }
				}
				add_building_construction = building_military_academy
				planet = { remove_planet_flag = build_military_academy }
			}
			if = {
				limit = { prev = { has_planet_flag = build_pop_growth_building } }
				add_building_construction = building_clinic
				planet = { remove_planet_flag = build_pop_growth_building }
			}
			add_building_construction = building_akx_worm_2
		}
		if = {
			limit = {
				OR = { has_building_construction = yes has_building = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_biolab_1
			add_building_construction = building_basic_science_lab_1
			add_building_construction = building_hab_laboratory_module
			add_building_construction = building_society_lab_1_1
			add_building_construction = building_society_lab_1_2
			add_building_construction = building_society_lab_1_3
			add_building_construction = building_society_lab_1_4
			add_building_construction = building_society_lab_1_5
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
			else = {
				add_building_construction = building_sociological_campus_1
				if = {
					limit = {
						OR = { has_building_construction = yes has_building = yes }
					}
					owner = { set_country_flag = cgm_auto_built }
				}
			}
		}
	}
}
add_physics_research_building = {
	add_physics_research_building_cgm_planets = yes
	add_physics_research_building_eacaw = yes
	add_physics_research_building_expstr = yes
	add_physics_research_building_sfac = yes
	add_physics_research_building_mem = yes
	add_physics_research_building_pd = yes
	add_physics_research_building_ut = yes
	add_physics_research_building_tycoon = yes
	add_physics_research_building_gwen = yes
	add_physics_research_building_esap = yes
	add_physics_research_building_co = yes
	add_physics_research_building_legw = yes
	add_physics_research_building_gse = yes
	add_physics_research_building_esc = yes
	add_physics_research_building_eutab = yes
	add_physics_research_building_eac = yes
	add_physics_research_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building_construction = yes has_building = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		if = {
			limit = {
				owner = {
					check_variable = { which = physics_research_country_weight value < 2 }
				}  #only build expensive stuff when not in dire need of
				OR = {
					new_building_content_enabled = no
					has_resource = { type = physics_research amount < 2 }  #we do not want to build on more than 1 physics_research anything other than tile restricted buildings
				}
			}
			add_building_construction = building_institute
			if = {
				limit = {
					NOR = { has_building_construction = yes has_building = yes }
				}
				add_building_construction = building_singularity_core
			}
			else = { owner = { set_country_flag = cgm_auto_built } }
			if = {
				limit = {
					NOR = { has_building_construction = yes has_building = yes }
				}
				add_building_construction = building_akx_worm_3
			}
			else = { owner = { set_country_flag = cgm_auto_built } }
		}
		if = {
			limit = {
				OR = { has_building_construction = yes has_building = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_physics_lab_1
			add_building_construction = building_basic_science_lab_1
			add_building_construction = building_hab_laboratory_module
			add_building_construction = building_physics_lab_1_1
			add_building_construction = building_physics_lab_1_2
			add_building_construction = building_physics_lab_1_3
			add_building_construction = building_physics_lab_1_4
			add_building_construction = building_physics_lab_1_5
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
			else = {
				add_building_construction = building_physics_campus_1
				if = {
					limit = {
						OR = { has_building_construction = yes has_building = yes }
					}
					owner = { set_country_flag = cgm_auto_built }
				}
			}
		}
	}
}
add_engineering_research_building = {
	add_engineering_research_building_cgm_planets = yes
	add_engineering_research_building_eacaw = yes
	add_engineering_research_building_expstr = yes
	add_engineering_research_building_sfac = yes
	add_engineering_research_building_mem = yes
	add_engineering_research_building_pd = yes
	add_engineering_research_building_co = yes
	add_engineering_research_building_ut = yes
	add_engineering_research_building_tycoon = yes
	add_engineering_research_building_gwen = yes
	add_engineering_research_building_esap = yes
	add_engineering_research_building_legw = yes
	add_engineering_research_building_gse = yes
	add_engineering_research_building_esc = yes
	add_engineering_research_building_eutab = yes
	add_engineering_research_building_eac = yes
	add_engineering_research_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building_construction = yes has_building = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		if = {
			limit = {
				owner = {
					check_variable = { which = engineering_research_country_weight value < 2 }
				}  #only build expensive stuff when not in dire need of
				OR = {
					new_building_content_enabled = no
					has_resource = { type = engineering_research amount < 2 }  #we do not want to build on more than 1 engineering_research anything other than tile restricted buildings
				}
			}
			add_building_construction = building_institute
			add_building_construction = building_singularity_core
			add_building_construction = building_akx_worm_3
			if = {
				limit = {
					new_building_content_enabled = no
					prev = { has_planet_flag = build_planetary_shield_generator }
				}
				add_building_construction = building_planetary_shield_generator
				planet = { remove_planet_flag = build_planetary_shield_generator }
			}
			if = {
				limit = {
					new_building_content_enabled = no
					prev = { has_planet_flag = build_war_factory }
				}
				add_building_construction = building_war_factory
				planet = { remove_planet_flag = build_pop_growth_building }
			}
			if = {
				limit = {
					new_building_content_enabled = no
					prev = { has_planet_flag = build_military_academy }
				}
				add_building_construction = building_military_academy
				planet = { remove_planet_flag = build_military_academy }
			}
			if = {
				limit = { prev = { has_planet_flag = build_pop_growth_building } }
				add_building_construction = building_spare_parts_depot
				planet = { remove_planet_flag = build_pop_growth_building }
			}
		}
		if = {
			limit = {
				OR = { has_building_construction = yes has_building = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
		else = {
			add_building_construction = building_engineering_facility_1
			add_building_construction = building_basic_science_lab_1
			add_building_construction = building_hab_laboratory_module
			add_building_construction = building_engineering_lab_1_1
			add_building_construction = building_engineering_lab_1_2
			add_building_construction = building_engineering_lab_1_3
			add_building_construction = building_engineering_lab_1_4
			add_building_construction = building_engineering_lab_1_5
			if = {
				limit = {
					OR = { has_building_construction = yes has_building = yes }
				}
				owner = { set_country_flag = cgm_auto_built }
			}
			else = {
				add_building_construction = building_engineering_campus_1
				if = {
					limit = {
						OR = { has_building_construction = yes has_building = yes }
					}
					owner = { set_country_flag = cgm_auto_built }
				}
			}
		}
	}
}
add_special_resource_building = {
	add_special_resource_building_gwen = yes
	add_special_resource_building_zenith = yes
	add_special_resource_building_sfac = yes
	add_special_resource_building_stexp = yes
	add_special_resource_building_pd = yes
	add_special_resource_building_apsr = yes
	add_special_resource_building_cgm_planets = yes
	add_special_resource_building_tycoon = yes
	add_special_resource_building_est = yes
	add_special_resource_building_co = yes
	add_special_resource_building_ag = yes
	add_special_resource_building_eac = yes
	add_special_resource_building_alphamod = yes
	if = {
		limit = {
			OR = { has_building_construction = yes has_building = yes }
		}
		owner = { set_country_flag = cgm_auto_built }
	}
	else = {
		if = {
			limit = {
				has_resource = { type = sr_megastructure_node amount > 0 }
			}
			prev = {
				set_variable = { which = energy_adjacency_weight value = 0 }
			}
			check_energy_adjacency = yes
			prev = {
				set_variable = { which = minerals_adjacency_weight value = 0 }
			}
			check_minerals_adjacency = yes
			prev = {
				set_variable = { which = food_adjacency_weight value = 0 }
			}
			check_food_adjacency = yes
			prev = {
				set_variable = { which = society_research_adjacency_weight value = 0 }
			}
			check_society_research_adjacency = yes
			prev = {
				set_variable = { which = physics_research_adjacency_weight value = 0 }
			}
			check_physics_research_adjacency = yes
			prev = {
				set_variable = { which = engineering_research_adjacency_weight value = 0 }
			}
			check_engineering_research_adjacency = yes
			prev = {
				multiply_variable = { which = energy_adjacency_weight value = energy_mult_planet }
				multiply_variable = { which = minerals_adjacency_weight value = minerals_mult_planet }
				multiply_variable = { which = food_adjacency_weight value = food_mult_planet }
				multiply_variable = { which = society_research_adjacency_weight value = society_research_mult_planet }
				multiply_variable = { which = physics_research_adjacency_weight value = physics_research_mult_planet }
				multiply_variable = { which = engineering_research_adjacency_weight value = engineering_research_mult_planet }
			}
			if = {
				limit = {
					prev = {
						check_variable = { which = energy_adjacency_weight value > minerals_adjacency_weight }
						check_variable = { which = energy_adjacency_weight value > food_adjacency_weight }
						check_variable = { which = energy_adjacency_weight value > society_research_adjacency_weight }
						check_variable = { which = energy_adjacency_weight value > physics_research_adjacency_weight }
						check_variable = { which = energy_adjacency_weight value > engineering_research_adjacency_weight }
					}
				}
				add_building_construction = building_energy_conduit_1_1
				add_building_construction = building_energy_conduit_1_2
				add_building_construction = building_energy_conduit_1_3
			}
			else = {
				if = {
					limit = {
						prev = {
							check_variable = { which = minerals_adjacency_weight value > food_adjacency_weight }
							check_variable = { which = minerals_adjacency_weight value > society_research_adjacency_weight }
							check_variable = { which = minerals_adjacency_weight value > physics_research_adjacency_weight }
							check_variable = { which = minerals_adjacency_weight value > engineering_research_adjacency_weight }
						}
					}
					add_building_construction = building_energy_matter_converter_1_1
					add_building_construction = building_energy_matter_converter_1_2
					add_building_construction = building_energy_matter_converter_1_3
				}
				else = {
					if = {
						limit = {
							prev = {
								check_variable = { which = food_adjacency_weight value > society_research_adjacency_weight }
								check_variable = { which = food_adjacency_weight value > physics_research_adjacency_weight }
								check_variable = { which = food_adjacency_weight value > engineering_research_adjacency_weight }
							}
						}
						add_building_construction = building_food_replicator_1_1
						add_building_construction = building_food_replicator_1_2
						add_building_construction = building_food_replicator_1_3
					}
					else = {
						add_building_construction = building_computational_array_1_1
						add_building_construction = building_computational_array_1_2
						add_building_construction = building_computational_array_1_3
					}
				}
			}
		}
		else = {
			add_building_construction = betharian_power_plant
			add_building_construction = building_xeno_zoo
			add_building_construction = building_animal_evaluation_laboratory
		}
		if = {
			limit = {
				OR = { has_building_construction = yes has_building = yes }
			}
			owner = { set_country_flag = cgm_auto_built }
		}
	}
}
cgm_upgrade_building = {
	cgm_upgrade_building_gse = yes
	cgm_upgrade_building_zenith = yes
	cgm_upgrade_building_utexp = yes
	cgm_upgrade_building_cgmvc_submod = yes
	cgm_upgrade_building_alphamod = yes
	cgm_upgrade_building_eac = yes
	cgm_upgrade_building_eutab = yes
	cgm_upgrade_building_esc = yes
	cgm_upgrade_building_legw = yes
	cgm_upgrade_building_co = yes
	cgm_upgrade_building_esap = yes
	cgm_upgrade_building_est = yes
	cgm_upgrade_building_gwen = yes
	cgm_upgrade_building_tycoon = yes
	cgm_upgrade_building_ab = yes
	cgm_upgrade_building_apsr = yes
	cgm_upgrade_building_mem = yes
	cgm_upgrade_building_sfac = yes
	cgm_upgrade_building_eacaw = yes
	cgm_upgrade_building_cgm_planets = yes
}
