namespace = cgm_automation

@automation_threshold = 499
@spending_threshold = 149

country_event = {
	id = cgm_automation.1
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 				
		has_global_flag = building_automation_enabled
		OR = {
			is_ai = yes
			has_policy_flag = building_automation_enabled_policy
		}
		check_variable = { which = building_construction_budget value > @automation_threshold }
		minerals > 0
	}
	
	immediate = { 
		add_modifier = automation_reserve_size_failsafe
		#first we remove all minerals from the reserve, this number is already stored elsewhere so we can return it later
		while = { 
			limit = { minerals > 9999 } 
			add_minerals = 10000			
		}
		while = { 
			limit = { minerals > 999 } 
			add_minerals = 1000			
		}		
		while = { 
			limit = { minerals > 99 } 
			add_minerals = 100			
		}		
		while = { 
			limit = { minerals > 9 } 
			add_minerals = 10			
		}		
		while = { 
			limit = { minerals > 0 } 
			add_minerals = 1
		}		
		#now we add the building budget funds
		while = { 
			limit = { check_variable = { which = building_construction_budget value > 9999 } }
			add_minerals = 10000			
			change_variable = { which = building_construction_budget value = -10000 }
		}
		while = { 
			limit = { check_variable = { which = building_construction_budget value > 999 } }
			add_minerals = 1000			
			change_variable = { which = building_construction_budget value = -1000 }
		}		
		while = { 
			limit = { check_variable = { which = building_construction_budget value > 99 } }
			add_minerals = 100			
			change_variable = { which = building_construction_budget value = -100 }
		}		
		while = { 
			limit = { check_variable = { which = building_construction_budget value > 9 } }			
			add_minerals = 10			
			change_variable = { which = building_construction_budget value = -10 }
		}		
		while = { 
			limit = { check_variable = { which = building_construction_budget value > 0 } }			
			add_minerals = 1
			change_variable = { which = building_construction_budget value = -1 }
		}				
		if = { 
			limit = {
				any_owned_planet = { 					
					NOR = { has_planet_flag = purged_planet has_planet_flag = new_construction_automation_checked } 
					sector_controlled = no
					has_building_construction = no
					free_building_tiles > 0
					any_pop = { 
						is_colony_pop = yes
						OR = { 
							is_growing = yes
							is_unemployed = yes
						}
					}
					NOT = { 
						any_tile = { 	
							has_building = yes
							is_ruined = no
							has_pop = no
						}
					}
				}
			}
			while = { 
				limit = { 
					minerals > @spending_threshold
					any_owned_planet = { 
						NOR = { has_planet_flag = purged_planet has_planet_flag = new_construction_automation_checked } 
						sector_controlled = no
						has_building_construction = no
						free_building_tiles > 0
						any_pop = { 
							is_colony_pop = yes
							OR = { 
								is_growing = yes
								is_unemployed = yes
							}
						}
						NOT = { 
							any_tile = { 	
								has_building = yes
								is_ruined = no
								has_pop = no
							}
						}
					}				
				}
				random_planet = { 
					limit = { 
						NOR = { has_planet_flag = purged_planet has_planet_flag = new_construction_automation_checked } 
						sector_controlled = no
						has_building_construction = no
						free_building_tiles > 0
						any_pop = { 
							is_colony_pop = yes
							OR = { 
								is_growing = yes
								is_unemployed = yes
							}
						}
						NOT = { 
							any_tile = { 	
								has_building = yes
								is_ruined = no
								has_pop = no
							}
						}						
					}
					check_and_set_building_construction = yes
				}	
			}
			else = { 
				if = { 
					limit = { 
						any_owned_planet = {
							NOR = { has_planet_flag = purged_planet has_planet_flag = upgrade_automation_checked } 
							sector_controlled = no
							has_building_construction = no
						}	
					}	
					while = { 
						limit = {
							minerals > @spending_threshold
							any_owned_planet = {
								NOR = { has_planet_flag = purged_planet has_planet_flag = upgrade_automation_checked } 
								sector_controlled = no
								has_building_construction = no
							}	
						}
						random_owned_planet = {
							limit = { 
								NOR = { has_planet_flag = purged_planet has_planet_flag = upgrade_automation_checked } 
								sector_controlled = no
								has_building_construction = no
							}	
							check_and_set_building_upgrade = yes
						}
					}	
					else = { 	
						if = { 
							limit = {
								any_owned_planet = { 					
									NOR = { has_planet_flag = purged_planet has_planet_flag = new_construction_automation_checked } 
									sector_controlled = yes
									has_building_construction = no
									free_building_tiles > 0
									any_pop = { 
										is_colony_pop = yes
										OR = { 
											is_growing = yes
											is_unemployed = yes
										}
									}
									NOT = { 
										any_tile = { 	
											has_building = yes
											is_ruined = no
											has_pop = no
										}
									}
								}
							}
							while = { 
								limit = { 
									minerals > @spending_threshold
									any_owned_planet = { 
										NOR = { has_planet_flag = purged_planet has_planet_flag = new_construction_automation_checked } 
										sector_controlled = yes
										has_building_construction = no
										free_building_tiles > 0
										any_pop = { 
											is_colony_pop = yes
											OR = { 
												is_growing = yes
												is_unemployed = yes
											}
										}
										NOT = { 
											any_tile = { 	
												has_building = yes
												is_ruined = no
												has_pop = no
											}
										}
									}				
								}
								random_planet = { 
									limit = { 
										NOR = { has_planet_flag = purged_planet has_planet_flag = new_construction_automation_checked } 
										sector_controlled = yes
										has_building_construction = no
										free_building_tiles > 0
										any_pop = { 
											is_colony_pop = yes
											OR = { 
												is_growing = yes
												is_unemployed = yes
											}
										}
										NOT = { 
											any_tile = { 	
												has_building = yes
												is_ruined = no
												has_pop = no
											}
										}						
									}
									check_and_set_building_construction = yes
								}								
								else = { 
									if = { 
										limit = { 
											any_owned_planet = {
												NOR = { has_planet_flag = purged_planet has_planet_flag = upgrade_automation_checked } 
												sector_controlled = yes
												has_building_construction = no
											}	
										}	
										while = { 
											limit = {
												minerals > @spending_threshold
												any_owned_planet = {
													NOR = { has_planet_flag = purged_planet has_planet_flag = upgrade_automation_checked } 
													sector_controlled = yes
													has_building_construction = no
												}	
											}
											random_owned_planet = {
												limit = { 
													NOR = { has_planet_flag = purged_planet has_planet_flag = upgrade_automation_checked } 
													sector_controlled = yes
													has_building_construction = no
												}	
												check_and_set_building_upgrade = yes
											}
										}								
									}
								}
							}	
						}
					}
				}	
			}
		}	
		#remove excess minerals back to budget
		while = { 
			limit = { minerals > 99 } 
			add_minerals = -100			
			change_variable = { which = building_construction_budget value = 100 }
		}		
		while = { 
			limit = { minerals > 9 } 
			add_minerals = -10			
			change_variable = { which = building_construction_budget value = 10 }
		}		
		while = { 
			limit = { minerals > 0 } 
			add_minerals = -1
			change_variable = { which = building_construction_budget value = 1 }
		}		
		#restore the mineral reserve
		set_variable = { which = reserve_transport value = minerals_reserve }
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 9999 } }
			add_minerals = 10000
			change_variable = { which = reserve_transport value = -10000 }		
		}	
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 999 } }
			add_minerals = 1000
			change_variable = { which = reserve_transport value = -1000 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 99 } }
			add_minerals = 100
			change_variable = { which = reserve_transport value = -100 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 9 } }
			add_minerals = 10
			change_variable = { which = reserve_transport value = -10 }		
		}		
		while = { 		
			limit = { check_variable = { which = reserve_transport value > 0 } }
			add_minerals = 1
			change_variable = { which = reserve_transport value = -1 }		
		}					
	}
}	
 
planet_event = {
	id = cgm_automation.2
	is_triggered_only = yes
	hide_window = yes			
	
	immediate = { 
			
}	

planet_event = {
	id = cgm_automation.2
	is_triggered_only = yes
	hide_window = yes			
	
	immediate = { 
	
	}
}	