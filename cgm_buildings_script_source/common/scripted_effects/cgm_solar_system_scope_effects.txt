#this in this effect is solar_system scope
#root in this effect is country
#prev in this effect is starbase scope

set_shipyard_weight = {
	if = { 
		limit = { 			
			NOR = {
				has_star_flag = shipyard_candidate_system
				has_star_flag = shipyard_check_delay
				star = { is_star_class = sc_black_hole }
				any_planet = { 
					OR = { 
						is_planet_class = pc_pulsar
						is_colonizable = yes
						is_colony = yes
					}
				}
			}	
		}
		if = {
			limit = { 
				event_target:starbase_system_star = { check_variable = { which = num_of_hyperlane_connections value > 2 } }			
				NOR = { 					
					has_star_flag = shipyard_system
					AND = { 
						has_star_flag = enclave
						any_ship_in_system = {
							exists = owner
							owner = { has_country_flag = curator_enclave_country }
						}					
					}	
					AND = {
						has_star_flag = enclave
						any_ship_in_system = {
							exists = owner
							owner = { is_same_value = event_target:artist_enclave_country }
						}
					}	
					AND = {
						has_star_flag = enclave
						any_ship_in_system = {
							exists = owner
							owner = { has_country_flag = trader_enclave_country }
						}
					}					
					root = { 
						any_system_within_border = {
							distance = { 
								source = event_target:starbase_system_star 
								type = hyperlane 
								min_jumps = 1 max_jumps = 5
							}						
							has_star_flag = shipyard_system
						}
					}
				}	
				any_country = { 
					OR = {
						is_at_war_with = root
						is_rival = root
						is_hostile_to = root
						is_threatened_to = root
						is_angry_to = root
						is_domineering_to = root
					}								
					any_system_within_border = {
						distance = { 
							source = event_target:starbase_system_star 
							type = hyperlane 
							min_jumps = 5
						}						
					}
				}
				NOT = { 
					any_system = {		
						distance = { 
							source = event_target:starbase_system_star 
							type = hyperlane 
							max_jumps = 2
						}
						NOT = { is_within_borders_of = root }
					}	
				}	
			}	
			if = {
				limit = { prev = { count_starbase_modules = { type = shipyard count = 1 } } }
				event_target:starbase_system_star = { set_variable = { which = num_of_shipyard_modules value = 1 } }
				else = { 
					if = {
						limit = { prev = { count_starbase_modules = { type = shipyard count = 2 } } }
						event_target:starbase_system_star = { set_variable = { which = num_of_shipyard_modules value = 2 } }	
						else = { 
							if = {
								limit = { prev = { count_starbase_modules = { type = shipyard count = 3 } } }
								event_target:starbase_system_star = { set_variable = { which = num_of_shipyard_modules value = 3 } }	
								else = { 
									if = {
										limit = { prev = { count_starbase_modules = { type = shipyard count = 4 } } }
										event_target:starbase_system_star = { set_variable = { which = num_of_shipyard_modules value = 4 } }	
										else = { 
											if = {
												limit = { prev = { count_starbase_modules = { type = shipyard count = 5 } } }
												event_target:starbase_system_star = { set_variable = { which = num_of_shipyard_modules value = 5 } }														
												else = { 
													if = {
														limit = { 
															prev = { 
																OR = { 
																	count_starbase_modules = { type = shipyard count = 6 }
																	count_starbase_modules = { type = shipyard count > 6 } #failsafe for mods that add more module slots
																}	
															}
														}
														event_target:starbase_system_star = { set_variable = { which = num_of_shipyard_modules value = 6 } }																
													}
												}
											}	
										}
									}
								}
							}
						}
					}
				}	
			}
			event_target:starbase_system_star = { set_variable = { which = shipyard_weight value = num_of_shipyard_modules } }
			if = {
				limit = { has_star_flag = wormhole_or_gateway_system }
				event_target:starbase_system_star = { change_variable = { which = shipyard_weight value = 4 } }
			}	
			every_neighboring_system = { 
				ignore_hyperlanes = no 
				limit = { 
					is_within_borders_of = root
					any_planet = { exists = owner owner = root } 
				} 
				event_target:starbase_system_star = { change_variable = { which = shipyard_weight value = 1 } }
			}
			every_neighboring_system = { 
				ignore_hyperlanes = no 
				limit = { 
					has_star_flag = wormhole_or_gateway_system
					is_within_borders_of = root
				} 
				event_target:starbase_system_star = { change_variable = { which = shipyard_weight value = 2 } }
			}	
			event_target:starbase_system_star = { 
				multiply_variable = { which = shipyard_weight value = num_of_hyperlane_connections } 
				change_variable = { which = shipyard_weight value = starbase_level }
			}			
			if = {
				limit = { event_target:starbase_system_star = { check_variable = { which = shipyard_weight value > 2 } } }
				set_timed_star_flag = { flag = shipyard_candidate_system days = 3600 }
				else = {
					set_timed_star_flag = { flag = shipyard_check_delay days = 3600 }					
				}	
			}	
		}			
	}
}	