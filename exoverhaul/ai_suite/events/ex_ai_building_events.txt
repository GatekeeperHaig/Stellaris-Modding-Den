namespace = ex_ai_building_events

event = {
	id = ex_ai_building_events.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = {
				is_country_type = default
				NOT = { has_country_flag = resource_check_delay }
				OR = {
					energy < 1
					minerals < 1
					AND = {
						NOT = { has_authority = auth_machine_intelligence }
						food < 1
					}
				}		
			}
			if = {
				limit = {
					NOT = { has_authority = auth_machine_intelligence }
					food < 1
				}				
				set_timed_country_flag = { flag = is_food_starved days = 90 }
			}
			if = {
				limit = { energy < 1 }
				set_timed_country_flag = { flag = is_energy_starved days = 90 }
			}		
			if = {
				limit = { minerals < 1 }
				set_timed_country_flag = { flag = is_minerals_starved days = 90 }
			}			
			set_timed_country_flag = { flag = resource_check_delay days = 90 }
		}		
	}			
}

event = { #this event adds variables into scopes, to be used by building ai_weights
	id = ex_ai_building_events.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = { 				
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}	
			}
			every_owned_planet = {
				limit = { 
					is_colony = yes
					OR = {
						owner = { is_ai = yes }
						sector_controlled = yes
					}	
				}
				every_tile = {
					set_variable = { which = energy_weight value = 0 }
					set_variable = { which = minerals_weight value = 0 }
					set_variable = { which = food_weight value = 0 }
					set_variable = { which = unity_weight value = 0 }
					set_variable = { which = society_research_weight value = 0 }
					set_variable = { which = physics_research_weight value = 0 }
					set_variable = { which = engineering_research_weight value = 0 }
					if = {
						limit = { 	}	
						calculate_blocker_weights = yes
					}	
					if = {
						limit = { 
							OR = {
								AND = {
									has_building = yes
									OR = { 	
										has_capital_building = yes
										has_hyperstorage_building = yes 
										has_polytechnic_building = yes
										has_special_capital_resource_building = yes
										has_sr_adj_bonus_building = yes
									}
								}
								AND = {
									has_blocker = yes
									has_adj_bonus_blocker = yes
								}
							}		
							calculate_adjcancy_weights = yes								
						}						
					}						
					if = {
						limit = { 
							has_blocker = no						
							AND = {
								has_pop = yes
								pop = { is_sapient = yes }
							}
						}
						calculate_tile_weights = yes	
					}								
				}	
			}		
					
		
		