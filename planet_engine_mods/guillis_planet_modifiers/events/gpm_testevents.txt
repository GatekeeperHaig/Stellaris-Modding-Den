namespace = gpm_test

# gpm_rings_metallic_small
# gpm_rings_metallic_medium
# gpm_rings_metallic_large
# gpm_rings_metallic_huge

planet_event = {
	id = gpm_test.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		set_planet_entity = {
			entity = "orbital_habitat_entity"
			graphical_culture = fromfrom
		}
	}
}

# Lets do this trough a special planet class where the habitable section is shielded.
planet_event = {
	id = gpm_test.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		save_event_target_as = gpm_star_location
		create_ambient_object = {
			type = gpm_ringworld_section_shield
			location = this
		}
		last_created_ambient_object = {
			set_location = {
				target = event_target:gpm_star_location
				angle = 0
			}
			set_ambient_object_flag = gpm_ring_world_shields_star
		}
	}
}


planet_event = {
	id = gpm_test.6
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 6
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.7
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 7
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.8
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 8
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.9
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 9
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.10
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 10
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.11
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 11
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.12
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 12
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.13
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 13
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.14
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 14
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.15
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 15
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.16
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 16
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.17
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 17
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.18
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 18
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.19
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 19
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.20
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 20
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.21
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 21
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.22
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 22
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.23
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 23
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.24
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 24
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.25
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 25
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.26
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 26
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.27
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 27
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.28
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 28
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.29
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 29
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}
planet_event = {
	id = gpm_test.30
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		remove_planet_flag = gpm_precursor_shipyards_ambient
		remove_planet_flag = gpm_precursor_shield_ambient
		remove_planet_flag = gpm_fallen_empire_shield_ambient
		set_planet_size = 30
		if = {
			limit = { NOT = { has_modifier = "Precursor_Planetary_Shield" } }
			add_modifier = { modifier = Precursor_Planetary_Shield days = -1 }
		}
		if = {
			limit = { NOT = { has_modifier = "Precursor_Shipyards" } }
			add_modifier = { modifier = Precursor_Shipyards days = -1 }
		}
		solar_system = {
			every_system_ambient_object = {
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shipyard_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shipyard_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_precursor_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_precursor_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_fallen_empire_shield_flag }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_fallen_empire_shield_flag
				}
				if = {
					limit = { has_ambient_object_flag = gpm_ambient_ring }
					save_event_target_as = gpm_ambient_object_to_delete
					destroy_ambient_object = event_target:gpm_ambient_object_to_delete
					remove_ambient_object_flag = gpm_ambient_ring
				}
			}
		}
		gpm_set_precursor_planetary_shields = yes
		gpm_set_shipyards_objects = yes
	}
}

# TEST EVENT RES Quarter Ring
planet_event = {
	id = gpm_test.100
	hide_window = yes
	is_triggered_only = yes
	location = this
	
	trigger = {
	}
	
	immediate = {
		save_event_target_as = res_location_planet
		set_planet_flag = gpm_has_RES
		solar_system = {
			random_list = {
				40 = { }
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 0
						orbit_distance_offset = 15
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 10
						orbit_distance_offset = 17
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 20
						orbit_distance_offset = 19
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}
					}
				}
			}
			random_list = {
				40 = { }
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 90
						orbit_distance_offset = 15
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 100
						orbit_distance_offset = 17
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 110
						orbit_distance_offset = 19
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
			}
			random_list = {
				40 = { }
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 180
						orbit_distance_offset = 15
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 190
						orbit_distance_offset = 17
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet
						
						orbit_location = yes
						orbit_angle_offset = 200
						orbit_distance_offset = 19
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
			}
			random_list = {
				40 = { }
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet

						orbit_location = yes
						orbit_angle_offset = 270
						orbit_distance_offset = 15
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet

						orbit_location = yes
						orbit_angle_offset = 280
						orbit_distance_offset = 17
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
				20 = {
					spawn_planet = {
						class = "pc_gpm_res"
						location = event_target:res_location_planet

						orbit_location = yes
						orbit_angle_offset = 290
						orbit_distance_offset = 19
						
						init_effect = {
							set_name = pc_gpm_res_resource_name
							set_planet_entity = {
								entity = "gpm_rings_metallic_large_RES"
							}
							surveyed = {
								set_surveyed = no
							}
							set_planet_flag = gpm_is_RES
							if = {
								limit = { event_target:res_location_planet = { gpm_has_metallic_rings = yes } }
								gpm_random_res_mineral_deposit = yes
							}
							if = {
								limit = { event_target:res_location_planet = { gpm_has_ice_rings = yes } }
								gpm_random_res_energy_deposit = yes
							}
						}		
					}
				}
			}
		}
	}
}

planet_event = {
	id = gpm_test.200
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		# if = {
			# limit = { 
				# AND = {
					# has_modifier = gpm_ice_ring_small
					# NOT = { has_planet_flag = gpm_has_planet_feeding_ground_rings }
				# }
			# }
			set_planet_flag = gpm_has_planet_feeding_ground_rings
			save_event_target_as = planet_location_rings
			create_ambient_object = {
				type = gpm_rings_special_large
				location = this
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:planet_location_rings
				}
				set_ambient_object_flag = gpm_ambient_ring
			}
		# }
	}
}